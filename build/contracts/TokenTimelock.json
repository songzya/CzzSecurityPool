{
  "contractName": "TokenTimelock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beneficiary_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \\\"advisors get all of their tokens after 1 year\\\".\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"the beneficiary of the tokens.\"}},\"releaseTime()\":{\"returns\":{\"_0\":\"the time when the tokens are released.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being held.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"release()\":{\"notice\":\"Transfers tokens held by timelock to beneficiary.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol\":\"TokenTimelock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol\":{\"keccak256\":\"0x42576e1738b434ce4315eae2ac6f0c20bd448d5dce6f9ec5fe527a0e6aed3be4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01b9c3aff27348c636d0f4b5b2a3877447def2473960a705d87c4b052cfacf36\",\"dweb:/ipfs/QmSzFzQPrq6wHEeaYQttDXmhoRFtsA93gqLhdGQrDGG1SB\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162000e0738038062000e07833981810160405281019062000037919062000140565b4281116200007c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007390620001fe565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060c08181525050505050620002d1565b6000815190506200010c8162000283565b92915050565b60008151905062000123816200029d565b92915050565b6000815190506200013a81620002b7565b92915050565b6000806000606084860312156200015657600080fd5b6000620001668682870162000112565b93505060206200017986828701620000fb565b92505060406200018c8682870162000129565b9150509250925092565b6000620001a560328362000220565b91507f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260008301527f65666f72652063757272656e742074696d6500000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620002198162000196565b9050919050565b600082825260208201905092915050565b60006200023e8262000259565b9050919050565b6000620002528262000231565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200028e8162000231565b81146200029a57600080fd5b50565b620002a88162000245565b8114620002b457600080fd5b50565b620002c28162000279565b8114620002ce57600080fd5b50565b60805160601c60a05160601c60c051610b0162000306600039600061023e0152600060b9015260006102660152610b016000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a14610097575b600080fd5b6100596100b5565b604051610066919061087f565b60405180910390f35b6100776100dd565b005b61008161023a565b60405161008e91906109a0565b60405180910390f35b61009f610262565b6040516100ac91906108c3565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6100e561023a565b421015610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e90610900565b60405180910390fd5b6000610131610262565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610169919061087f565b60206040518083038186803b15801561018157600080fd5b505afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b991906105d0565b9050600081116101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f590610980565b60405180910390fd5b6102376102096100b5565b82610212610262565b73ffffffffffffffffffffffffffffffffffffffff1661028a9092919063ffffffff16565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b61030b8363a9059cbb60e01b84846040516024016102a992919061089a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610310565b505050565b6000610372826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166103d79092919063ffffffff16565b90506000815111156103d2578080602001905181019061039291906105a7565b6103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610960565b60405180910390fd5b5b505050565b60606103e684846000856103ef565b90509392505050565b606082471015610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610920565b60405180910390fd5b61043d85610503565b61047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390610940565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104a59190610868565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b50915091506104f7828286610516565b92505050949350505050565b600080823b905060008111915050919050565b6060831561052657829050610576565b6000835111156105395782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d91906108de565b60405180910390fd5b9392505050565b60008151905061058c81610a9d565b92915050565b6000815190506105a181610ab4565b92915050565b6000602082840312156105b957600080fd5b60006105c78482850161057d565b91505092915050565b6000602082840312156105e257600080fd5b60006105f084828501610592565b91505092915050565b610602816109ed565b82525050565b6000610613826109bb565b61061d81856109d1565b935061062d818560208601610a59565b80840191505092915050565b61064281610a35565b82525050565b6000610653826109c6565b61065d81856109dc565b935061066d818560208601610a59565b61067681610a8c565b840191505092915050565b600061068e6032836109dc565b91507f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260008301527f65666f72652072656c656173652074696d6500000000000000000000000000006020830152604082019050919050565b60006106f46026836109dc565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061075a601d836109dc565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b600061079a602a836109dc565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b60006108006023836109dc565b91507f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560008301527f61736500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61086281610a2b565b82525050565b60006108748284610608565b915081905092915050565b600060208201905061089460008301846105f9565b92915050565b60006040820190506108af60008301856105f9565b6108bc6020830184610859565b9392505050565b60006020820190506108d86000830184610639565b92915050565b600060208201905081810360008301526108f88184610648565b905092915050565b6000602082019050818103600083015261091981610681565b9050919050565b60006020820190508181036000830152610939816106e7565b9050919050565b600060208201905081810360008301526109598161074d565b9050919050565b600060208201905081810360008301526109798161078d565b9050919050565b60006020820190508181036000830152610999816107f3565b9050919050565b60006020820190506109b56000830184610859565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006109f882610a0b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a4082610a47565b9050919050565b6000610a5282610a0b565b9050919050565b60005b83811015610a77578082015181840152602081019050610a5c565b83811115610a86576000848401525b50505050565b6000601f19601f8301169050919050565b610aa6816109ff565b8114610ab157600080fd5b50565b610abd81610a2b565b8114610ac857600080fd5b5056fea264697066735822122087c601ea9e45947ead0f643488c7cd6d90ef523bca47668f87223340b1f6a43564736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f1461006f578063b91d400114610079578063fc0c546a14610097575b600080fd5b6100596100b5565b604051610066919061087f565b60405180910390f35b6100776100dd565b005b61008161023a565b60405161008e91906109a0565b60405180910390f35b61009f610262565b6040516100ac91906108c3565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6100e561023a565b421015610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e90610900565b60405180910390fd5b6000610131610262565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610169919061087f565b60206040518083038186803b15801561018157600080fd5b505afa158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b991906105d0565b9050600081116101fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f590610980565b60405180910390fd5b6102376102096100b5565b82610212610262565b73ffffffffffffffffffffffffffffffffffffffff1661028a9092919063ffffffff16565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b61030b8363a9059cbb60e01b84846040516024016102a992919061089a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610310565b505050565b6000610372826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166103d79092919063ffffffff16565b90506000815111156103d2578080602001905181019061039291906105a7565b6103d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c890610960565b60405180910390fd5b5b505050565b60606103e684846000856103ef565b90509392505050565b606082471015610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b90610920565b60405180910390fd5b61043d85610503565b61047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390610940565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104a59190610868565b60006040518083038185875af1925050503d80600081146104e2576040519150601f19603f3d011682016040523d82523d6000602084013e6104e7565b606091505b50915091506104f7828286610516565b92505050949350505050565b600080823b905060008111915050919050565b6060831561052657829050610576565b6000835111156105395782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d91906108de565b60405180910390fd5b9392505050565b60008151905061058c81610a9d565b92915050565b6000815190506105a181610ab4565b92915050565b6000602082840312156105b957600080fd5b60006105c78482850161057d565b91505092915050565b6000602082840312156105e257600080fd5b60006105f084828501610592565b91505092915050565b610602816109ed565b82525050565b6000610613826109bb565b61061d81856109d1565b935061062d818560208601610a59565b80840191505092915050565b61064281610a35565b82525050565b6000610653826109c6565b61065d81856109dc565b935061066d818560208601610a59565b61067681610a8c565b840191505092915050565b600061068e6032836109dc565b91507f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260008301527f65666f72652072656c656173652074696d6500000000000000000000000000006020830152604082019050919050565b60006106f46026836109dc565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061075a601d836109dc565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b600061079a602a836109dc565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b60006108006023836109dc565b91507f546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c6560008301527f61736500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b61086281610a2b565b82525050565b60006108748284610608565b915081905092915050565b600060208201905061089460008301846105f9565b92915050565b60006040820190506108af60008301856105f9565b6108bc6020830184610859565b9392505050565b60006020820190506108d86000830184610639565b92915050565b600060208201905081810360008301526108f88184610648565b905092915050565b6000602082019050818103600083015261091981610681565b9050919050565b60006020820190508181036000830152610939816106e7565b9050919050565b600060208201905081810360008301526109598161074d565b9050919050565b600060208201905081810360008301526109798161078d565b9050919050565b60006020820190508181036000830152610999816107f3565b9050919050565b60006020820190506109b56000830184610859565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006109f882610a0b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a4082610a47565b9050919050565b6000610a5282610a0b565b9050919050565b60005b83811015610a77578082015181840152602081019050610a5c565b83811115610a86576000848401525b50505050565b6000601f19601f8301169050919050565b610aa6816109ff565b8114610ab157600080fd5b50565b610abd81610a2b565b8114610ac857600080fd5b5056fea264697066735822122087c601ea9e45947ead0f643488c7cd6d90ef523bca47668f87223340b1f6a43564736f6c63430008000033",
  "immutableReferences": {
    "13687": [
      {
        "length": 32,
        "start": 614
      }
    ],
    "13689": [
      {
        "length": 32,
        "start": 185
      }
    ],
    "13691": [
      {
        "length": 32,
        "start": 574
      }
    ]
  },
  "sourceMap": "307:1622:103:-:0;;;642:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;801:15;786:12;:30;778:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;890:6;881:15;;;;;;;;;;;;921:12;906:27;;;;;;;;;;;;958:12;943:27;;;;;;642:335;;;307:1622;;7:143:145;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:175::-;;260:6;254:13;245:22;;276:49;319:5;276:49;:::i;:::-;235:96;;;;:::o;337:143::-;;425:6;419:13;410:22;;441:33;468:5;441:33;:::i;:::-;400:80;;;;:::o;486:628::-;;;;655:2;643:9;634:7;630:23;626:32;623:2;;;671:1;668;661:12;623:2;714:1;739:80;811:7;802:6;791:9;787:22;739:80;:::i;:::-;729:90;;685:144;868:2;894:64;950:7;941:6;930:9;926:22;894:64;:::i;:::-;884:74;;839:129;1007:2;1033:64;1089:7;1080:6;1069:9;1065:22;1033:64;:::i;:::-;1023:74;;978:129;613:501;;;;;:::o;1120:382::-;;1283:67;1347:2;1342:3;1283:67;:::i;:::-;1276:74;;1380:34;1376:1;1371:3;1367:11;1360:55;1446:20;1441:2;1436:3;1432:12;1425:42;1493:2;1488:3;1484:12;1477:19;;1266:236;;;:::o;1508:419::-;;1712:2;1701:9;1697:18;1689:26;;1761:9;1755:4;1751:20;1747:1;1736:9;1732:17;1725:47;1789:131;1915:4;1789:131;:::i;:::-;1781:139;;1679:248;;;:::o;1933:169::-;;2051:6;2046:3;2039:19;2091:4;2086:3;2082:14;2067:29;;2029:73;;;;:::o;2108:96::-;;2174:24;2192:5;2174:24;:::i;:::-;2163:35;;2153:51;;;:::o;2210:112::-;;2292:24;2310:5;2292:24;:::i;:::-;2281:35;;2271:51;;;:::o;2328:126::-;;2405:42;2398:5;2394:54;2383:65;;2373:81;;;:::o;2460:77::-;;2526:5;2515:16;;2505:32;;;:::o;2543:122::-;2616:24;2634:5;2616:24;:::i;:::-;2609:5;2606:35;2596:2;;2655:1;2652;2645:12;2596:2;2586:79;:::o;2671:154::-;2760:40;2794:5;2760:40;:::i;:::-;2753:5;2750:51;2740:2;;2815:1;2812;2805:12;2740:2;2730:95;:::o;2831:122::-;2904:24;2922:5;2904:24;:::i;:::-;2897:5;2894:35;2884:2;;2943:1;2940;2933:12;2884:2;2874:79;:::o;307:1622:103:-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "307:1622:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1545:382;;;:::i;:::-;;1361:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1188:97;1240:7;1266:12;1259:19;;1188:97;:::o;1545:382::-;1670:13;:11;:13::i;:::-;1651:15;:32;;1643:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1749:14;1766:7;:5;:7::i;:::-;:17;;;1792:4;1766:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1749:49;;1825:1;1816:6;:10;1808:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1877:43;1898:13;:11;:13::i;:::-;1913:6;1877:7;:5;:7::i;:::-;:20;;;;:43;;;;;:::i;:::-;1545:382;:::o;1361:97::-;1413:7;1439:12;1432:19;;1361:97;:::o;1036:84::-;1082:6;1107;1100:13;;1036:84;:::o;634:175:102:-;716:86;736:5;766:23;;;791:2;795:5;743:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;3022:751::-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;3467:27;;;;:69;;;;;:::i;:::-;3441:95;;3570:1;3550:10;:17;:21;3546:221;;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3546:221;3022:751;;;:::o;3573:193:120:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4850:18;4861:6;4850:10;:18::i;:::-;4842:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4973:12;4987:23;5014:6;:11;;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;;;;4600:523;;;;;;:::o;718:413::-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;7083:725::-;7198:12;7226:7;7222:580;;;7256:10;7249:17;;;;7222:580;7387:1;7367:10;:17;:21;7363:429;;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;;;;;;;;;;:::i;:::-;;;;;;;;7083:725;;;;;;:::o;7:137:145:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:143::-;;238:6;232:13;223:22;;254:33;281:5;254:33;:::i;:::-;213:80;;;;:::o;299:278::-;;415:2;403:9;394:7;390:23;386:32;383:2;;;431:1;428;421:12;383:2;474:1;499:61;552:7;543:6;532:9;528:22;499:61;:::i;:::-;489:71;;445:125;373:204;;;;:::o;583:284::-;;702:2;690:9;681:7;677:23;673:32;670:2;;;718:1;715;708:12;670:2;761:1;786:64;842:7;833:6;822:9;818:22;786:64;:::i;:::-;776:74;;732:128;660:207;;;;:::o;873:118::-;960:24;978:5;960:24;:::i;:::-;955:3;948:37;938:53;;:::o;997:373::-;;1129:38;1161:5;1129:38;:::i;:::-;1183:88;1264:6;1259:3;1183:88;:::i;:::-;1176:95;;1280:52;1325:6;1320:3;1313:4;1306:5;1302:16;1280:52;:::i;:::-;1357:6;1352:3;1348:16;1341:23;;1105:265;;;;;:::o;1376:163::-;1479:53;1526:5;1479:53;:::i;:::-;1474:3;1467:66;1457:82;;:::o;1545:364::-;;1661:39;1694:5;1661:39;:::i;:::-;1716:71;1780:6;1775:3;1716:71;:::i;:::-;1709:78;;1796:52;1841:6;1836:3;1829:4;1822:5;1818:16;1796:52;:::i;:::-;1873:29;1895:6;1873:29;:::i;:::-;1868:3;1864:39;1857:46;;1637:272;;;;;:::o;1915:382::-;;2078:67;2142:2;2137:3;2078:67;:::i;:::-;2071:74;;2175:34;2171:1;2166:3;2162:11;2155:55;2241:20;2236:2;2231:3;2227:12;2220:42;2288:2;2283:3;2279:12;2272:19;;2061:236;;;:::o;2303:370::-;;2466:67;2530:2;2525:3;2466:67;:::i;:::-;2459:74;;2563:34;2559:1;2554:3;2550:11;2543:55;2629:8;2624:2;2619:3;2615:12;2608:30;2664:2;2659:3;2655:12;2648:19;;2449:224;;;:::o;2679:327::-;;2842:67;2906:2;2901:3;2842:67;:::i;:::-;2835:74;;2939:31;2935:1;2930:3;2926:11;2919:52;2997:2;2992:3;2988:12;2981:19;;2825:181;;;:::o;3012:374::-;;3175:67;3239:2;3234:3;3175:67;:::i;:::-;3168:74;;3272:34;3268:1;3263:3;3259:11;3252:55;3338:12;3333:2;3328:3;3324:12;3317:34;3377:2;3372:3;3368:12;3361:19;;3158:228;;;:::o;3392:367::-;;3555:67;3619:2;3614:3;3555:67;:::i;:::-;3548:74;;3652:34;3648:1;3643:3;3639:11;3632:55;3718:5;3713:2;3708:3;3704:12;3697:27;3750:2;3745:3;3741:12;3734:19;;3538:221;;;:::o;3765:118::-;3852:24;3870:5;3852:24;:::i;:::-;3847:3;3840:37;3830:53;;:::o;3889:271::-;;4041:93;4130:3;4121:6;4041:93;:::i;:::-;4034:100;;4151:3;4144:10;;4023:137;;;;:::o;4166:222::-;;4297:2;4286:9;4282:18;4274:26;;4310:71;4378:1;4367:9;4363:17;4354:6;4310:71;:::i;:::-;4264:124;;;;:::o;4394:332::-;;4553:2;4542:9;4538:18;4530:26;;4566:71;4634:1;4623:9;4619:17;4610:6;4566:71;:::i;:::-;4647:72;4715:2;4704:9;4700:18;4691:6;4647:72;:::i;:::-;4520:206;;;;;:::o;4732:254::-;;4879:2;4868:9;4864:18;4856:26;;4892:87;4976:1;4965:9;4961:17;4952:6;4892:87;:::i;:::-;4846:140;;;;:::o;4992:313::-;;5143:2;5132:9;5128:18;5120:26;;5192:9;5186:4;5182:20;5178:1;5167:9;5163:17;5156:47;5220:78;5293:4;5284:6;5220:78;:::i;:::-;5212:86;;5110:195;;;;:::o;5311:419::-;;5515:2;5504:9;5500:18;5492:26;;5564:9;5558:4;5554:20;5550:1;5539:9;5535:17;5528:47;5592:131;5718:4;5592:131;:::i;:::-;5584:139;;5482:248;;;:::o;5736:419::-;;5940:2;5929:9;5925:18;5917:26;;5989:9;5983:4;5979:20;5975:1;5964:9;5960:17;5953:47;6017:131;6143:4;6017:131;:::i;:::-;6009:139;;5907:248;;;:::o;6161:419::-;;6365:2;6354:9;6350:18;6342:26;;6414:9;6408:4;6404:20;6400:1;6389:9;6385:17;6378:47;6442:131;6568:4;6442:131;:::i;:::-;6434:139;;6332:248;;;:::o;6586:419::-;;6790:2;6779:9;6775:18;6767:26;;6839:9;6833:4;6829:20;6825:1;6814:9;6810:17;6803:47;6867:131;6993:4;6867:131;:::i;:::-;6859:139;;6757:248;;;:::o;7011:419::-;;7215:2;7204:9;7200:18;7192:26;;7264:9;7258:4;7254:20;7250:1;7239:9;7235:17;7228:47;7292:131;7418:4;7292:131;:::i;:::-;7284:139;;7182:248;;;:::o;7436:222::-;;7567:2;7556:9;7552:18;7544:26;;7580:71;7648:1;7637:9;7633:17;7624:6;7580:71;:::i;:::-;7534:124;;;;:::o;7664:98::-;;7749:5;7743:12;7733:22;;7722:40;;;:::o;7768:99::-;;7854:5;7848:12;7838:22;;7827:40;;;:::o;7873:147::-;;8011:3;7996:18;;7986:34;;;;:::o;8026:169::-;;8144:6;8139:3;8132:19;8184:4;8179:3;8175:14;8160:29;;8122:73;;;;:::o;8201:96::-;;8267:24;8285:5;8267:24;:::i;:::-;8256:35;;8246:51;;;:::o;8303:90::-;;8380:5;8373:13;8366:21;8355:32;;8345:48;;;:::o;8399:126::-;;8476:42;8469:5;8465:54;8454:65;;8444:81;;;:::o;8531:77::-;;8597:5;8586:16;;8576:32;;;:::o;8614:158::-;;8713:53;8760:5;8713:53;:::i;:::-;8700:66;;8690:82;;;:::o;8778:129::-;;8877:24;8895:5;8877:24;:::i;:::-;8864:37;;8854:53;;;:::o;8913:307::-;8981:1;8991:113;9005:6;9002:1;8999:13;8991:113;;;9090:1;9085:3;9081:11;9075:18;9071:1;9066:3;9062:11;9055:39;9027:2;9024:1;9020:10;9015:15;;8991:113;;;9122:6;9119:1;9116:13;9113:2;;;9202:1;9193:6;9188:3;9184:16;9177:27;9113:2;8962:258;;;;:::o;9226:102::-;;9318:2;9314:7;9309:2;9302:5;9298:14;9294:28;9284:38;;9274:54;;;:::o;9334:116::-;9404:21;9419:5;9404:21;:::i;:::-;9397:5;9394:32;9384:2;;9440:1;9437;9430:12;9384:2;9374:76;:::o;9456:122::-;9529:24;9547:5;9529:24;:::i;:::-;9522:5;9519:35;9509:2;;9568:1;9565;9558:12;9509:2;9499:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./SafeERC20.sol\";\n\n/**\n * @dev A token holder contract that will allow a beneficiary to extract the\n * tokens after a given release time.\n *\n * Useful for simple vesting schedules like \"advisors get all of their tokens\n * after 1 year\".\n */\ncontract TokenTimelock {\n    using SafeERC20 for IERC20;\n\n    // ERC20 basic token contract being held\n    IERC20 immutable private _token;\n\n    // beneficiary of tokens after they are released\n    address immutable private _beneficiary;\n\n    // timestamp when token release is enabled\n    uint256 immutable private _releaseTime;\n\n    constructor (IERC20 token_, address beneficiary_, uint256 releaseTime_) {\n        // solhint-disable-next-line not-rely-on-time\n        require(releaseTime_ > block.timestamp, \"TokenTimelock: release time is before current time\");\n        _token = token_;\n        _beneficiary = beneficiary_;\n        _releaseTime = releaseTime_;\n    }\n\n    /**\n     * @return the token being held.\n     */\n    function token() public view virtual returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the beneficiary of the tokens.\n     */\n    function beneficiary() public view virtual returns (address) {\n        return _beneficiary;\n    }\n\n    /**\n     * @return the time when the tokens are released.\n     */\n    function releaseTime() public view virtual returns (uint256) {\n        return _releaseTime;\n    }\n\n    /**\n     * @notice Transfers tokens held by timelock to beneficiary.\n     */\n    function release() public virtual {\n        // solhint-disable-next-line not-rely-on-time\n        require(block.timestamp >= releaseTime(), \"TokenTimelock: current time is before release time\");\n\n        uint256 amount = token().balanceOf(address(this));\n        require(amount > 0, \"TokenTimelock: no tokens to release\");\n\n        token().safeTransfer(beneficiary(), amount);\n    }\n}\n",
  "sourcePath": "E:/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol",
  "ast": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        17214
      ],
      "IERC20": [
        12574
      ],
      "SafeERC20": [
        13676
      ],
      "TokenTimelock": [
        13791
      ]
    },
    "id": 13792,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13678,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:103"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 13679,
        "nodeType": "ImportDirective",
        "scope": 13792,
        "sourceUnit": 13677,
        "src": "58:25:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13680,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:103",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 13791,
        "linearizedBaseContracts": [
          13791
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13684,
            "libraryName": {
              "id": 13681,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13676,
              "src": "342:9:103"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:103",
            "typeName": {
              "id": 13683,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13682,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12574,
                "src": "356:6:103"
              },
              "referencedDeclaration": 12574,
              "src": "356:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$12574",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 13687,
            "mutability": "immutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 13791,
            "src": "414:31:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$12574",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13685,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12574,
                "src": "414:6:103"
              },
              "referencedDeclaration": 12574,
              "src": "414:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$12574",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13689,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 13791,
            "src": "505:38:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13688,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:103",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13691,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 13791,
            "src": "597:38:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13690,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:103",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13721,
              "nodeType": "Block",
              "src": "714:263:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13702,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13698,
                          "src": "786:12:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 13703,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "801:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "801:15:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "786:30:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 13706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "818:52:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 13701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "778:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:93:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13708,
                  "nodeType": "ExpressionStatement",
                  "src": "778:93:103"
                },
                {
                  "expression": {
                    "id": 13711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13709,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13687,
                      "src": "881:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$12574",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13710,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13694,
                      "src": "890:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$12574",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "881:15:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13712,
                  "nodeType": "ExpressionStatement",
                  "src": "881:15:103"
                },
                {
                  "expression": {
                    "id": 13715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13713,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13689,
                      "src": "906:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13714,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13696,
                      "src": "921:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "906:27:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13716,
                  "nodeType": "ExpressionStatement",
                  "src": "906:27:103"
                },
                {
                  "expression": {
                    "id": 13719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13717,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13691,
                      "src": "943:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13718,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13698,
                      "src": "958:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "943:27:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13720,
                  "nodeType": "ExpressionStatement",
                  "src": "943:27:103"
                }
              ]
            },
            "id": 13722,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13694,
                  "mutability": "mutable",
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 13722,
                  "src": "655:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$12574",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13693,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13692,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12574,
                      "src": "655:6:103"
                    },
                    "referencedDeclaration": 12574,
                    "src": "655:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13696,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 13722,
                  "src": "670:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13698,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 13722,
                  "src": "692:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:59:103"
            },
            "returnParameters": {
              "id": 13700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:103"
            },
            "scope": 13791,
            "src": "642:335:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13731,
              "nodeType": "Block",
              "src": "1090:30:103",
              "statements": [
                {
                  "expression": {
                    "id": 13729,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13687,
                    "src": "1107:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 13728,
                  "id": 13730,
                  "nodeType": "Return",
                  "src": "1100:13:103"
                }
              ]
            },
            "documentation": {
              "id": 13723,
              "nodeType": "StructuredDocumentation",
              "src": "983:48:103",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 13732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:103"
            },
            "returnParameters": {
              "id": 13728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13727,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13732,
                  "src": "1082:6:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$12574",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13726,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13725,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12574,
                      "src": "1082:6:103"
                    },
                    "referencedDeclaration": 12574,
                    "src": "1082:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:8:103"
            },
            "scope": 13791,
            "src": "1036:84:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13740,
              "nodeType": "Block",
              "src": "1249:36:103",
              "statements": [
                {
                  "expression": {
                    "id": 13738,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13689,
                    "src": "1266:12:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13737,
                  "id": 13739,
                  "nodeType": "Return",
                  "src": "1259:19:103"
                }
              ]
            },
            "documentation": {
              "id": 13733,
              "nodeType": "StructuredDocumentation",
              "src": "1126:57:103",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 13741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:103"
            },
            "returnParameters": {
              "id": 13737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13736,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13741,
                  "src": "1240:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:9:103"
            },
            "scope": 13791,
            "src": "1188:97:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13749,
              "nodeType": "Block",
              "src": "1422:36:103",
              "statements": [
                {
                  "expression": {
                    "id": 13747,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13691,
                    "src": "1439:12:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13746,
                  "id": 13748,
                  "nodeType": "Return",
                  "src": "1432:19:103"
                }
              ]
            },
            "documentation": {
              "id": 13742,
              "nodeType": "StructuredDocumentation",
              "src": "1291:65:103",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 13750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:2:103"
            },
            "returnParameters": {
              "id": 13746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13750,
                  "src": "1413:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:9:103"
            },
            "scope": 13791,
            "src": "1361:97:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13789,
              "nodeType": "Block",
              "src": "1579:348:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13755,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1651:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1651:15:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13757,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13750,
                            "src": "1670:11:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 13758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:13:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:32:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 13760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:52:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 13754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1643:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:95:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13762,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:95:103"
                },
                {
                  "assignments": [
                    13764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13764,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 13789,
                      "src": "1749:14:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13763,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13773,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13770,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1792:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$13791",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$13791",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 13769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1784:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13768,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1784:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13765,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13732,
                          "src": "1766:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$12574_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 13766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:7:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12574",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12513,
                      "src": "1766:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:32:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:49:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13775,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13764,
                          "src": "1816:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1816:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 13778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:37:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 13774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1808:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:58:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13780,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:58:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13784,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13741,
                          "src": "1898:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13786,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13764,
                        "src": "1913:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13781,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13732,
                          "src": "1877:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$12574_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 13782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12574",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13483,
                      "src": "1877:20:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12574_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12574_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 13787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:43:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13788,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:43:103"
                }
              ]
            },
            "documentation": {
              "id": 13751,
              "nodeType": "StructuredDocumentation",
              "src": "1464:76:103",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 13790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:2:103"
            },
            "returnParameters": {
              "id": 13753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:103"
            },
            "scope": 13791,
            "src": "1545:382:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 13792,
        "src": "307:1622:103"
      }
    ],
    "src": "33:1897:103"
  },
  "legacyAST": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/TokenTimelock.sol",
    "exportedSymbols": {
      "Address": [
        17214
      ],
      "IERC20": [
        12574
      ],
      "SafeERC20": [
        13676
      ],
      "TokenTimelock": [
        13791
      ]
    },
    "id": 13792,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13678,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:103"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "./SafeERC20.sol",
        "id": 13679,
        "nodeType": "ImportDirective",
        "scope": 13792,
        "sourceUnit": 13677,
        "src": "58:25:103",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13680,
          "nodeType": "StructuredDocumentation",
          "src": "85:221:103",
          "text": " @dev A token holder contract that will allow a beneficiary to extract the\n tokens after a given release time.\n Useful for simple vesting schedules like \"advisors get all of their tokens\n after 1 year\"."
        },
        "fullyImplemented": true,
        "id": 13791,
        "linearizedBaseContracts": [
          13791
        ],
        "name": "TokenTimelock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13684,
            "libraryName": {
              "id": 13681,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13676,
              "src": "342:9:103"
            },
            "nodeType": "UsingForDirective",
            "src": "336:27:103",
            "typeName": {
              "id": 13683,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13682,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12574,
                "src": "356:6:103"
              },
              "referencedDeclaration": 12574,
              "src": "356:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$12574",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 13687,
            "mutability": "immutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 13791,
            "src": "414:31:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$12574",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13685,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12574,
                "src": "414:6:103"
              },
              "referencedDeclaration": 12574,
              "src": "414:6:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$12574",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13689,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 13791,
            "src": "505:38:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13688,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:103",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13691,
            "mutability": "immutable",
            "name": "_releaseTime",
            "nodeType": "VariableDeclaration",
            "scope": 13791,
            "src": "597:38:103",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13690,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "597:7:103",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13721,
              "nodeType": "Block",
              "src": "714:263:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13702,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13698,
                          "src": "786:12:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 13703,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "801:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "801:15:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "786:30:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65",
                        "id": 13706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "818:52:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        },
                        "value": "TokenTimelock: release time is before current time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1658b776de3735ba90dc86438c12854f3617d6d488d64009fdab5928e27c313",
                          "typeString": "literal_string \"TokenTimelock: release time is before current time\""
                        }
                      ],
                      "id": 13701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "778:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:93:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13708,
                  "nodeType": "ExpressionStatement",
                  "src": "778:93:103"
                },
                {
                  "expression": {
                    "id": 13711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13709,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13687,
                      "src": "881:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$12574",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13710,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13694,
                      "src": "890:6:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$12574",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "881:15:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13712,
                  "nodeType": "ExpressionStatement",
                  "src": "881:15:103"
                },
                {
                  "expression": {
                    "id": 13715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13713,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13689,
                      "src": "906:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13714,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13696,
                      "src": "921:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "906:27:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13716,
                  "nodeType": "ExpressionStatement",
                  "src": "906:27:103"
                },
                {
                  "expression": {
                    "id": 13719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13717,
                      "name": "_releaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13691,
                      "src": "943:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13718,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13698,
                      "src": "958:12:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "943:27:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13720,
                  "nodeType": "ExpressionStatement",
                  "src": "943:27:103"
                }
              ]
            },
            "id": 13722,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13694,
                  "mutability": "mutable",
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 13722,
                  "src": "655:13:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$12574",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13693,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13692,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12574,
                      "src": "655:6:103"
                    },
                    "referencedDeclaration": 12574,
                    "src": "655:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13696,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 13722,
                  "src": "670:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13698,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nodeType": "VariableDeclaration",
                  "scope": 13722,
                  "src": "692:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:59:103"
            },
            "returnParameters": {
              "id": 13700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:0:103"
            },
            "scope": 13791,
            "src": "642:335:103",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13731,
              "nodeType": "Block",
              "src": "1090:30:103",
              "statements": [
                {
                  "expression": {
                    "id": 13729,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13687,
                    "src": "1107:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 13728,
                  "id": 13730,
                  "nodeType": "Return",
                  "src": "1100:13:103"
                }
              ]
            },
            "documentation": {
              "id": 13723,
              "nodeType": "StructuredDocumentation",
              "src": "983:48:103",
              "text": " @return the token being held."
            },
            "functionSelector": "fc0c546a",
            "id": 13732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:103"
            },
            "returnParameters": {
              "id": 13728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13727,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13732,
                  "src": "1082:6:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$12574",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 13726,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13725,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12574,
                      "src": "1082:6:103"
                    },
                    "referencedDeclaration": 12574,
                    "src": "1082:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$12574",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:8:103"
            },
            "scope": 13791,
            "src": "1036:84:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13740,
              "nodeType": "Block",
              "src": "1249:36:103",
              "statements": [
                {
                  "expression": {
                    "id": 13738,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13689,
                    "src": "1266:12:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13737,
                  "id": 13739,
                  "nodeType": "Return",
                  "src": "1259:19:103"
                }
              ]
            },
            "documentation": {
              "id": 13733,
              "nodeType": "StructuredDocumentation",
              "src": "1126:57:103",
              "text": " @return the beneficiary of the tokens."
            },
            "functionSelector": "38af3eed",
            "id": 13741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:103"
            },
            "returnParameters": {
              "id": 13737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13736,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13741,
                  "src": "1240:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1239:9:103"
            },
            "scope": 13791,
            "src": "1188:97:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13749,
              "nodeType": "Block",
              "src": "1422:36:103",
              "statements": [
                {
                  "expression": {
                    "id": 13747,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13691,
                    "src": "1439:12:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13746,
                  "id": 13748,
                  "nodeType": "Return",
                  "src": "1432:19:103"
                }
              ]
            },
            "documentation": {
              "id": 13742,
              "nodeType": "StructuredDocumentation",
              "src": "1291:65:103",
              "text": " @return the time when the tokens are released."
            },
            "functionSelector": "b91d4001",
            "id": 13750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1381:2:103"
            },
            "returnParameters": {
              "id": 13746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13750,
                  "src": "1413:7:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:9:103"
            },
            "scope": 13791,
            "src": "1361:97:103",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13789,
              "nodeType": "Block",
              "src": "1579:348:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13755,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1651:5:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 13756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1651:15:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13757,
                            "name": "releaseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13750,
                            "src": "1670:11:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 13758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1670:13:103",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1651:32:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65",
                        "id": 13760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:52:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        },
                        "value": "TokenTimelock: current time is before release time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0345c6084b4d4be2f1249aa1f58ddc5a11b524aacb744b63dfad68c56d61fad0",
                          "typeString": "literal_string \"TokenTimelock: current time is before release time\""
                        }
                      ],
                      "id": 13754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1643:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:95:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13762,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:95:103"
                },
                {
                  "assignments": [
                    13764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13764,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 13789,
                      "src": "1749:14:103",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13763,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1749:7:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13773,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13770,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1792:4:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenTimelock_$13791",
                              "typeString": "contract TokenTimelock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenTimelock_$13791",
                              "typeString": "contract TokenTimelock"
                            }
                          ],
                          "id": 13769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1784:7:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13768,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1784:7:103",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13765,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13732,
                          "src": "1766:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$12574_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 13766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:7:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12574",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12513,
                      "src": "1766:17:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 13772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:32:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1749:49:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13775,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13764,
                          "src": "1816:6:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 13776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1825:1:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1816:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365",
                        "id": 13778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:37:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        },
                        "value": "TokenTimelock: no tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd167cd15f7f49233a4aac5b2fadd1b9f782ba42f4eadaf31348954b9436eae8",
                          "typeString": "literal_string \"TokenTimelock: no tokens to release\""
                        }
                      ],
                      "id": 13774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1808:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:58:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13780,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:58:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13784,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13741,
                          "src": "1898:11:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1898:13:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13786,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13764,
                        "src": "1913:6:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13781,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13732,
                          "src": "1877:5:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$12574_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 13782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:103",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12574",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13483,
                      "src": "1877:20:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$12574_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$12574_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 13787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:43:103",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13788,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:43:103"
                }
              ]
            },
            "documentation": {
              "id": 13751,
              "nodeType": "StructuredDocumentation",
              "src": "1464:76:103",
              "text": " @notice Transfers tokens held by timelock to beneficiary."
            },
            "functionSelector": "86d1a69f",
            "id": 13790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "release",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:2:103"
            },
            "returnParameters": {
              "id": 13753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:103"
            },
            "scope": 13791,
            "src": "1545:382:103",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 13792,
        "src": "307:1622:103"
      }
    ],
    "src": "33:1897:103"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T11:32:51.104Z",
  "devdoc": {
    "details": "A token holder contract that will allow a beneficiary to extract the tokens after a given release time. Useful for simple vesting schedules like \"advisors get all of their tokens after 1 year\".",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "the beneficiary of the tokens."
        }
      },
      "releaseTime()": {
        "returns": {
          "_0": "the time when the tokens are released."
        }
      },
      "token()": {
        "returns": {
          "_0": "the token being held."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "release()": {
        "notice": "Transfers tokens held by timelock to beneficiary."
      }
    },
    "version": 1
  }
}