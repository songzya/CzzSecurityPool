{
  "contractName": "TransparentUpgradeableProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x93877b10bf585e8c059b1cbe35f1e2ca2bacaff7d084e3700439809ef8f77be5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d527e532ab958253f4ad5a88ad803cff695671186c143258c8bc8431efce26b\",\"dweb:/ipfs/QmYJQEzWNY8EGNrTzp7rjrPPhfDN8T26cKYBimFZ4xnmcT\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc706395df88dc1d459f21e51c57ab8820af80d1e8c3c14933a651794d78a429f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c19f30fd9c2ad752e3383fe5861655abb9d74c41cdc8ddbb49e5722ac4b8dd5\",\"dweb:/ipfs/QmXUePYiTMoDuqvghPGJfgjPFjjixan2DXreLGiuPDv8AX\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x9b4dde95fe76f9f27622b1719241ae78ab326d022c1bd6b22b0f61b34b7cbb1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ecb11976a3d9173073371970cd9a7f8507a6933c2aa268cedcc4762d6ced1f0\",\"dweb:/ipfs/QmaDD83DU5fy9hTZFVPWVxieDdJ2BPLTnz9oYZQXCH9unH\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "0x60806040526040516200154838038062001548833981810160405281019062000029919062000470565b828160017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6200005d919062000741565b60001b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b14620000b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b620000ca826200019860201b60201c565b600081511115620000ee57620000ec82826200021f60201b620003f51760201c565b505b505060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610460001c62000122919062000741565b60001b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b146200017e577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6200018f826200025560201b60201c565b50505062000879565b620001ae816200028460201b620004221760201c565b620001f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e79062000664565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b60606200024d838360405180606001604052806027815260200162001521602791396200029760201b60201c565b905092915050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b90508181555050565b600080823b905060008111915050919050565b6060620002aa846200028460201b60201c565b620002ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e39062000686565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405162000316919062000627565b600060405180830381855af49150503d806000811462000353576040519150601f19603f3d011682016040523d82523d6000602084013e62000358565b606091505b5091509150620003708282866200037b60201b60201c565b925050509392505050565b606083156200038d57829050620003e0565b600083511115620003a15782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003d7919062000640565b60405180910390fd5b9392505050565b6000620003fe620003f884620006dc565b620006a8565b9050828152602081018484840111156200041757600080fd5b62000424848285620007ba565b509392505050565b6000815190506200043d816200085f565b92915050565b600082601f8301126200045557600080fd5b815162000467848260208601620003e7565b91505092915050565b6000806000606084860312156200048657600080fd5b600062000496868287016200042c565b9350506020620004a9868287016200042c565b925050604084015167ffffffffffffffff811115620004c757600080fd5b620004d58682870162000443565b9150509250925092565b6000620004ec826200070f565b620004f8818562000725565b93506200050a818560208601620007ba565b80840191505092915050565b600062000523826200071a565b6200052f818562000730565b935062000541818560208601620007ba565b6200054c816200084e565b840191505092915050565b60006200056660328362000730565b91507f4552433139363750726f78793a206e657720696d706c656d656e746174696f6e60008301527f206973206e6f74206120636f6e747261637400000000000000000000000000006020830152604082019050919050565b6000620005ce60268362000730565b91507f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008301527f6e747261637400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620006358284620004df565b915081905092915050565b600060208201905081810360008301526200065c818462000516565b905092915050565b600060208201905081810360008301526200067f8162000557565b9050919050565b60006020820190508181036000830152620006a181620005bf565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715620006d257620006d16200081f565b5b8060405250919050565b600067ffffffffffffffff821115620006fa57620006f96200081f565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006200074e82620007b0565b91506200075b83620007b0565b925082821015620007715762000770620007f0565b5b828203905092915050565b6000620007898262000790565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620007da578082015181840152602081019050620007bd565b83811115620007ea576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6200086a816200077c565b81146200087657600080fd5b50565b610c9880620008896000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e600480360381019061008991906107c7565b610145565b005b6100aa60048036038101906100a591906107f0565b61019a565b005b3480156100b857600080fd5b506100c1610240565b6040516100ce9190610a96565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f991906107c7565b610298565b005b34801561010c57600080fd5b5061011561039d565b6040516101229190610a96565b60405180910390f35b610133610435565b61014361013e6104b5565b6104e6565b565b61014d61050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e576101898161053d565b610197565b61019661012b565b5b50565b6101a261050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610232576101de8361053d565b61022c8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506103f5565b5061023b565b61023a61012b565b5b505050565b600061024a61050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561028c576102856104b5565b9050610295565b61029461012b565b5b90565b6102a061050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561039157600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033a90610b1c565b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61036c61050c565b8260405161037b929190610ab1565b60405180910390a161038c8161058c565b61039a565b61039961012b565b5b50565b60006103a761050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e9576103e261050c565b90506103f2565b6103f161012b565b5b90565b606061041a8383604051806060016040528060278152602001610c3c602791396105bb565b905092915050565b600080823b905060008111915050919050565b61043d61050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a290610b5c565b60405180910390fd5b6104b3610688565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e8060008114610507573d6000f35b3d6000fd5b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b6105468161068a565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b90508181555050565b60606105c684610422565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90610b3c565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161062d9190610a7f565b600060405180830381855af49150503d8060008114610668576040519150601f19603f3d011682016040523d82523d6000602084013e61066d565b606091505b509150915061067d828286610701565b925050509392505050565b565b61069381610422565b6106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c990610afc565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b6060831561071157829050610761565b6000835111156107245782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107589190610ada565b60405180910390fd5b9392505050565b60008135905061077781610c24565b92915050565b60008083601f84011261078f57600080fd5b8235905067ffffffffffffffff8111156107a857600080fd5b6020830191508360018202830111156107c057600080fd5b9250929050565b6000602082840312156107d957600080fd5b60006107e784828501610768565b91505092915050565b60008060006040848603121561080557600080fd5b600061081386828701610768565b935050602084013567ffffffffffffffff81111561083057600080fd5b61083c8682870161077d565b92509250509250925092565b61085181610bae565b82525050565b600061086282610b7c565b61086c8185610b92565b935061087c818560208601610be0565b80840191505092915050565b600061089382610b87565b61089d8185610b9d565b93506108ad818560208601610be0565b6108b681610c13565b840191505092915050565b60006108ce603283610b9d565b91507f4552433139363750726f78793a206e657720696d706c656d656e746174696f6e60008301527f206973206e6f74206120636f6e747261637400000000000000000000000000006020830152604082019050919050565b6000610934603a83610b9d565b91507f5472616e73706172656e745570677261646561626c6550726f78793a206e657760008301527f2061646d696e20697320746865207a65726f20616464726573730000000000006020830152604082019050919050565b600061099a602683610b9d565b91507f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008301527f6e747261637400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a00604283610b9d565b91507f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008301527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208301527f65740000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000610a8b8284610857565b915081905092915050565b6000602082019050610aab6000830184610848565b92915050565b6000604082019050610ac66000830185610848565b610ad36020830184610848565b9392505050565b60006020820190508181036000830152610af48184610888565b905092915050565b60006020820190508181036000830152610b15816108c1565b9050919050565b60006020820190508181036000830152610b3581610927565b9050919050565b60006020820190508181036000830152610b558161098d565b9050919050565b60006020820190508181036000830152610b75816109f3565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bb982610bc0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610bfe578082015181840152602081019050610be3565b83811115610c0d576000848401525b50505050565b6000601f19601f8301169050919050565b610c2d81610bae565b8114610c3857600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122063866418818d7642df42b2259af33f985964ea36d46566265ad6faabdec9957364736f6c63430008000033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e600480360381019061008991906107c7565b610145565b005b6100aa60048036038101906100a591906107f0565b61019a565b005b3480156100b857600080fd5b506100c1610240565b6040516100ce9190610a96565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f991906107c7565b610298565b005b34801561010c57600080fd5b5061011561039d565b6040516101229190610a96565b60405180910390f35b610133610435565b61014361013e6104b5565b6104e6565b565b61014d61050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561018e576101898161053d565b610197565b61019661012b565b5b50565b6101a261050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610232576101de8361053d565b61022c8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506103f5565b5061023b565b61023a61012b565b5b505050565b600061024a61050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561028c576102856104b5565b9050610295565b61029461012b565b5b90565b6102a061050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561039157600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033a90610b1c565b60405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61036c61050c565b8260405161037b929190610ab1565b60405180910390a161038c8161058c565b61039a565b61039961012b565b5b50565b60006103a761050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103e9576103e261050c565b90506103f2565b6103f161012b565b5b90565b606061041a8383604051806060016040528060278152602001610c3c602791396105bb565b905092915050565b600080823b905060008111915050919050565b61043d61050c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a290610b5c565b60405180910390fd5b6104b3610688565b565b6000807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b9050805491505090565b3660008037600080366000845af43d6000803e8060008114610507573d6000f35b3d6000fd5b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b6105468161068a565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b90508181555050565b60606105c684610422565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90610b3c565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161062d9190610a7f565b600060405180830381855af49150503d8060008114610668576040519150601f19603f3d011682016040523d82523d6000602084013e61066d565b606091505b509150915061067d828286610701565b925050509392505050565b565b61069381610422565b6106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c990610afc565b60405180910390fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b90508181555050565b6060831561071157829050610761565b6000835111156107245782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107589190610ada565b60405180910390fd5b9392505050565b60008135905061077781610c24565b92915050565b60008083601f84011261078f57600080fd5b8235905067ffffffffffffffff8111156107a857600080fd5b6020830191508360018202830111156107c057600080fd5b9250929050565b6000602082840312156107d957600080fd5b60006107e784828501610768565b91505092915050565b60008060006040848603121561080557600080fd5b600061081386828701610768565b935050602084013567ffffffffffffffff81111561083057600080fd5b61083c8682870161077d565b92509250509250925092565b61085181610bae565b82525050565b600061086282610b7c565b61086c8185610b92565b935061087c818560208601610be0565b80840191505092915050565b600061089382610b87565b61089d8185610b9d565b93506108ad818560208601610be0565b6108b681610c13565b840191505092915050565b60006108ce603283610b9d565b91507f4552433139363750726f78793a206e657720696d706c656d656e746174696f6e60008301527f206973206e6f74206120636f6e747261637400000000000000000000000000006020830152604082019050919050565b6000610934603a83610b9d565b91507f5472616e73706172656e745570677261646561626c6550726f78793a206e657760008301527f2061646d696e20697320746865207a65726f20616464726573730000000000006020830152604082019050919050565b600061099a602683610b9d565b91507f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008301527f6e747261637400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a00604283610b9d565b91507f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008301527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208301527f65740000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000610a8b8284610857565b915081905092915050565b6000602082019050610aab6000830184610848565b92915050565b6000604082019050610ac66000830185610848565b610ad36020830184610848565b9392505050565b60006020820190508181036000830152610af48184610888565b905092915050565b60006020820190508181036000830152610b15816108c1565b9050919050565b60006020820190508181036000830152610b3581610927565b9050919050565b60006020820190508181036000830152610b558161098d565b9050919050565b60006020820190508181036000830152610b75816109f3565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610bb982610bc0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610bfe578082015181840152602081019050610be3565b83811115610c0d576000848401525b50505050565b6000601f19601f8301169050919050565b610c2d81610bae565b8114610c3857600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122063866418818d7642df42b2259af33f985964ea36d46566265ad6faabdec9957364736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "1549:4563:77:-:0;;;1827:221;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1912:6;1920:5;1169:1:71;1124:41;1116:50;;:54;;;;:::i;:::-;1108:63;;1712:66;1084:20;;:87;1077:95;;;;;;;;;;;;1182:26;1201:6;1182:18;;;:26;;:::i;:::-;1236:1;1221:5;:12;:16;1218:89;;;1253:43;1282:6;1290:5;1253:28;;;;;:43;;:::i;:::-;;1218:89;1011:302;;2011:1:77::1;1975:32;1967:41;;:45;;;;:::i;:::-;1959:54;;2425:66;1944:11;;:69;1937:77;;;;;;;;;;;;2024:17;2034:6;2024:9;;;:17;;:::i;:::-;1827:221:::0;;;1549:4563;;2477:356:71;2558:37;2577:17;2558:18;;;;;:37;;:::i;:::-;2550:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;2661:12;1712:66;2676:20;;2661:35;;2799:17;2793:4;2786:31;2772:55;;:::o;6276:198:120:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6383:84;;6276:198;;;;:::o;5576:209:77:-;5631:12;2425:66;5646:11;;5631:26;;5760:8;5754:4;5747:22;5733:46;;:::o;718:413:120:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;6660:417::-;6771:12;6803:18;6814:6;6803:10;;;:18;;:::i;:::-;6795:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6935:12;6949:23;6976:6;:19;;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;;;:52;;:::i;:::-;7011:59;;;;6660:417;;;;;:::o;7083:725::-;7198:12;7226:7;7222:580;;;7256:10;7249:17;;;;7222:580;7387:1;7367:10;:17;:21;7363:429;;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;;;;;;;;;;:::i;:::-;;;;;;;;7083:725;;;;;;:::o;7:351:145:-;;120:64;135:48;176:6;135:48;:::i;:::-;120:64;:::i;:::-;111:73;;207:6;200:5;193:21;245:4;238:5;234:16;283:3;274:6;269:3;265:16;262:25;259:2;;;300:1;297;290:12;259:2;313:39;345:6;340:3;335;313:39;:::i;:::-;101:257;;;;;;:::o;364:143::-;;452:6;446:13;437:22;;468:33;495:5;468:33;:::i;:::-;427:80;;;;:::o;526:286::-;;641:3;634:4;626:6;622:17;618:27;608:2;;659:1;656;649:12;608:2;692:6;686:13;717:89;802:3;794:6;787:4;779:6;775:17;717:89;:::i;:::-;708:98;;598:214;;;;;:::o;818:700::-;;;;980:2;968:9;959:7;955:23;951:32;948:2;;;996:1;993;986:12;948:2;1039:1;1064:64;1120:7;1111:6;1100:9;1096:22;1064:64;:::i;:::-;1054:74;;1010:128;1177:2;1203:64;1259:7;1250:6;1239:9;1235:22;1203:64;:::i;:::-;1193:74;;1148:129;1337:2;1326:9;1322:18;1316:25;1368:18;1360:6;1357:30;1354:2;;;1400:1;1397;1390:12;1354:2;1428:73;1493:7;1484:6;1473:9;1469:22;1428:73;:::i;:::-;1418:83;;1287:224;938:580;;;;;:::o;1524:373::-;;1656:38;1688:5;1656:38;:::i;:::-;1710:88;1791:6;1786:3;1710:88;:::i;:::-;1703:95;;1807:52;1852:6;1847:3;1840:4;1833:5;1829:16;1807:52;:::i;:::-;1884:6;1879:3;1875:16;1868:23;;1632:265;;;;;:::o;1903:364::-;;2019:39;2052:5;2019:39;:::i;:::-;2074:71;2138:6;2133:3;2074:71;:::i;:::-;2067:78;;2154:52;2199:6;2194:3;2187:4;2180:5;2176:16;2154:52;:::i;:::-;2231:29;2253:6;2231:29;:::i;:::-;2226:3;2222:39;2215:46;;1995:272;;;;;:::o;2273:382::-;;2436:67;2500:2;2495:3;2436:67;:::i;:::-;2429:74;;2533:34;2529:1;2524:3;2520:11;2513:55;2599:20;2594:2;2589:3;2585:12;2578:42;2646:2;2641:3;2637:12;2630:19;;2419:236;;;:::o;2661:370::-;;2824:67;2888:2;2883:3;2824:67;:::i;:::-;2817:74;;2921:34;2917:1;2912:3;2908:11;2901:55;2987:8;2982:2;2977:3;2973:12;2966:30;3022:2;3017:3;3013:12;3006:19;;2807:224;;;:::o;3037:271::-;;3189:93;3278:3;3269:6;3189:93;:::i;:::-;3182:100;;3299:3;3292:10;;3171:137;;;;:::o;3314:313::-;;3465:2;3454:9;3450:18;3442:26;;3514:9;3508:4;3504:20;3500:1;3489:9;3485:17;3478:47;3542:78;3615:4;3606:6;3542:78;:::i;:::-;3534:86;;3432:195;;;;:::o;3633:419::-;;3837:2;3826:9;3822:18;3814:26;;3886:9;3880:4;3876:20;3872:1;3861:9;3857:17;3850:47;3914:131;4040:4;3914:131;:::i;:::-;3906:139;;3804:248;;;:::o;4058:419::-;;4262:2;4251:9;4247:18;4239:26;;4311:9;4305:4;4301:20;4297:1;4286:9;4282:17;4275:47;4339:131;4465:4;4339:131;:::i;:::-;4331:139;;4229:248;;;:::o;4483:283::-;;4549:2;4543:9;4533:19;;4591:4;4583:6;4579:17;4698:6;4686:10;4683:22;4662:18;4650:10;4647:34;4644:62;4641:2;;;4709:18;;:::i;:::-;4641:2;4749:10;4745:2;4738:22;4523:243;;;;:::o;4772:331::-;;4923:18;4915:6;4912:30;4909:2;;;4945:18;;:::i;:::-;4909:2;5030:4;5026:9;5019:4;5011:6;5007:17;5003:33;4995:41;;5091:4;5085;5081:15;5073:23;;4838:265;;;:::o;5109:98::-;;5194:5;5188:12;5178:22;;5167:40;;;:::o;5213:99::-;;5299:5;5293:12;5283:22;;5272:40;;;:::o;5318:147::-;;5456:3;5441:18;;5431:34;;;;:::o;5471:169::-;;5589:6;5584:3;5577:19;5629:4;5624:3;5620:14;5605:29;;5567:73;;;;:::o;5646:191::-;;5706:20;5724:1;5706:20;:::i;:::-;5701:25;;5740:20;5758:1;5740:20;:::i;:::-;5735:25;;5779:1;5776;5773:8;5770:2;;;5784:18;;:::i;:::-;5770:2;5829:1;5826;5822:9;5814:17;;5691:146;;;;:::o;5843:96::-;;5909:24;5927:5;5909:24;:::i;:::-;5898:35;;5888:51;;;:::o;5945:126::-;;6022:42;6015:5;6011:54;6000:65;;5990:81;;;:::o;6077:77::-;;6143:5;6132:16;;6122:32;;;:::o;6160:307::-;6228:1;6238:113;6252:6;6249:1;6246:13;6238:113;;;6337:1;6332:3;6328:11;6322:18;6318:1;6313:3;6309:11;6302:39;6274:2;6271:1;6267:10;6262:15;;6238:113;;;6369:6;6366:1;6363:13;6360:2;;;6449:1;6440:6;6435:3;6431:16;6424:27;6360:2;6209:258;;;;:::o;6473:180::-;6521:77;6518:1;6511:88;6618:4;6615:1;6608:15;6642:4;6639:1;6632:15;6659:180;6707:77;6704:1;6697:88;6804:4;6801:1;6794:15;6828:4;6825:1;6818:15;6845:102;;6937:2;6933:7;6928:2;6921:5;6917:14;6913:28;6903:38;;6893:54;;;:::o;6953:122::-;7026:24;7044:5;7026:24;:::i;:::-;7019:5;7016:35;7006:2;;7065:1;7062;7055:12;7006:2;6996:79;:::o;1549:4563:77:-;;;;;;;",
  "deployedSourceMap": "1549:4563:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:11:72;:9;:11::i;:::-;1549:4563:77;;2611:11:72;:9;:11::i;:::-;1549:4563:77;4503:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4996:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3759:129;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4093:250;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3206:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2257:110:72;2305:17;:15;:17::i;:::-;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;4503:117:77:-;2680:8;:6;:8::i;:::-;2666:22;;:10;:22;;;2662:96;;;4584:29:::1;4595:17;4584:10;:29::i;:::-;2662:96:::0;;;2736:11;:9;:11::i;:::-;2662:96;4503:117;:::o;4996:216::-;2680:8;:6;:8::i;:::-;2666:22;;:10;:22;;;2662:96;;;5113:29:::1;5124:17;5113:10;:29::i;:::-;5152:53;5181:17;5200:4;;5152:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;:53::i;:::-;;2662:96:::0;;;2736:11;:9;:11::i;:::-;2662:96;4996:216;;;:::o;3759:129::-;3811:23;2680:8;:6;:8::i;:::-;2666:22;;:10;:22;;;2662:96;;;3864:17:::1;:15;:17::i;:::-;3846:35;;2662:96:::0;;;2736:11;:9;:11::i;:::-;2662:96;3759:129;:::o;4093:250::-;2680:8;:6;:8::i;:::-;2666:22;;:10;:22;;;2662:96;;;4195:1:::1;4175:22;;:8;:22;;;;4167:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;4275:32;4288:8;:6;:8::i;:::-;4298;4275:32;;;;;;;:::i;:::-;;;;;;;;4317:19;4327:8;4317:9;:19::i;:::-;2662:96:::0;;;2736:11;:9;:11::i;:::-;2662:96;4093:250;:::o;3206:93::-;3249:14;2680:8;:6;:8::i;:::-;2666:22;;:10;:22;;;2662:96;;;3284:8:::1;:6;:8::i;:::-;3275:17;;2662:96:::0;;;2736:11;:9;:11::i;:::-;2662:96;3206:93;:::o;6276:198:120:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;;6276:198;;;;:::o;718:413::-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;5906:204:77:-;5991:8;:6;:8::i;:::-;5977:22;;:10;:22;;;;5969:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;6080:23;:21;:23::i;:::-;5906:204::o;1857:250:71:-;1924:12;1948;1712:66;1963:20;;1948:35;;2086:4;2080:11;2072:19;;2058:43;;:::o;883:895:72:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1677:1;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;5273:221:77;5322:11;5345:12;2425:66;5360:11;;5345:26;;5473:4;5467:11;5460:18;;5446:42;;:::o;2226:160:71:-;2300:37;2319:17;2300:18;:37::i;:::-;2361:17;2352:27;;;;;;;;;;;;2226:160;:::o;5576:209:77:-;5631:12;2425:66;5646:11;;5631:26;;5760:8;5754:4;5747:22;5733:46;;:::o;6660:417:120:-;6771:12;6803:18;6814:6;6803:10;:18::i;:::-;6795:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6935:12;6949:23;6976:6;:19;;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;;;;6660:417;;;;;:::o;3134:51:72:-;:::o;2477:356:71:-;2558:37;2577:17;2558:18;:37::i;:::-;2550:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;2661:12;1712:66;2676:20;;2661:35;;2799:17;2793:4;2786:31;2772:55;;:::o;7083:725:120:-;7198:12;7226:7;7222:580;;;7256:10;7249:17;;;;7222:580;7387:1;7367:10;:17;:21;7363:429;;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;;;;;;;;;;:::i;:::-;;;;;;;;7083:725;;;;;;:::o;7:139:145:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;165:351::-;;;282:3;275:4;267:6;263:17;259:27;249:2;;300:1;297;290:12;249:2;336:6;323:20;313:30;;366:18;358:6;355:30;352:2;;;398:1;395;388:12;352:2;435:4;427:6;423:17;411:29;;489:3;481:4;473:6;469:17;459:8;455:32;452:41;449:2;;;506:1;503;496:12;449:2;239:277;;;;;:::o;522:262::-;;630:2;618:9;609:7;605:23;601:32;598:2;;;646:1;643;636:12;598:2;689:1;714:53;759:7;750:6;739:9;735:22;714:53;:::i;:::-;704:63;;660:117;588:196;;;;:::o;790:538::-;;;;934:2;922:9;913:7;909:23;905:32;902:2;;;950:1;947;940:12;902:2;993:1;1018:53;1063:7;1054:6;1043:9;1039:22;1018:53;:::i;:::-;1008:63;;964:117;1148:2;1137:9;1133:18;1120:32;1179:18;1171:6;1168:30;1165:2;;;1211:1;1208;1201:12;1165:2;1247:64;1303:7;1294:6;1283:9;1279:22;1247:64;:::i;:::-;1229:82;;;;1091:230;892:436;;;;;:::o;1334:118::-;1421:24;1439:5;1421:24;:::i;:::-;1416:3;1409:37;1399:53;;:::o;1458:373::-;;1590:38;1622:5;1590:38;:::i;:::-;1644:88;1725:6;1720:3;1644:88;:::i;:::-;1637:95;;1741:52;1786:6;1781:3;1774:4;1767:5;1763:16;1741:52;:::i;:::-;1818:6;1813:3;1809:16;1802:23;;1566:265;;;;;:::o;1837:364::-;;1953:39;1986:5;1953:39;:::i;:::-;2008:71;2072:6;2067:3;2008:71;:::i;:::-;2001:78;;2088:52;2133:6;2128:3;2121:4;2114:5;2110:16;2088:52;:::i;:::-;2165:29;2187:6;2165:29;:::i;:::-;2160:3;2156:39;2149:46;;1929:272;;;;;:::o;2207:382::-;;2370:67;2434:2;2429:3;2370:67;:::i;:::-;2363:74;;2467:34;2463:1;2458:3;2454:11;2447:55;2533:20;2528:2;2523:3;2519:12;2512:42;2580:2;2575:3;2571:12;2564:19;;2353:236;;;:::o;2595:390::-;;2758:67;2822:2;2817:3;2758:67;:::i;:::-;2751:74;;2855:34;2851:1;2846:3;2842:11;2835:55;2921:28;2916:2;2911:3;2907:12;2900:50;2976:2;2971:3;2967:12;2960:19;;2741:244;;;:::o;2991:370::-;;3154:67;3218:2;3213:3;3154:67;:::i;:::-;3147:74;;3251:34;3247:1;3242:3;3238:11;3231:55;3317:8;3312:2;3307:3;3303:12;3296:30;3352:2;3347:3;3343:12;3336:19;;3137:224;;;:::o;3367:432::-;;3530:67;3594:2;3589:3;3530:67;:::i;:::-;3523:74;;3627:34;3623:1;3618:3;3614:11;3607:55;3693:34;3688:2;3683:3;3679:12;3672:56;3759:4;3754:2;3749:3;3745:12;3738:26;3790:2;3785:3;3781:12;3774:19;;3513:286;;;:::o;3805:271::-;;3957:93;4046:3;4037:6;3957:93;:::i;:::-;3950:100;;4067:3;4060:10;;3939:137;;;;:::o;4082:222::-;;4213:2;4202:9;4198:18;4190:26;;4226:71;4294:1;4283:9;4279:17;4270:6;4226:71;:::i;:::-;4180:124;;;;:::o;4310:332::-;;4469:2;4458:9;4454:18;4446:26;;4482:71;4550:1;4539:9;4535:17;4526:6;4482:71;:::i;:::-;4563:72;4631:2;4620:9;4616:18;4607:6;4563:72;:::i;:::-;4436:206;;;;;:::o;4648:313::-;;4799:2;4788:9;4784:18;4776:26;;4848:9;4842:4;4838:20;4834:1;4823:9;4819:17;4812:47;4876:78;4949:4;4940:6;4876:78;:::i;:::-;4868:86;;4766:195;;;;:::o;4967:419::-;;5171:2;5160:9;5156:18;5148:26;;5220:9;5214:4;5210:20;5206:1;5195:9;5191:17;5184:47;5248:131;5374:4;5248:131;:::i;:::-;5240:139;;5138:248;;;:::o;5392:419::-;;5596:2;5585:9;5581:18;5573:26;;5645:9;5639:4;5635:20;5631:1;5620:9;5616:17;5609:47;5673:131;5799:4;5673:131;:::i;:::-;5665:139;;5563:248;;;:::o;5817:419::-;;6021:2;6010:9;6006:18;5998:26;;6070:9;6064:4;6060:20;6056:1;6045:9;6041:17;6034:47;6098:131;6224:4;6098:131;:::i;:::-;6090:139;;5988:248;;;:::o;6242:419::-;;6446:2;6435:9;6431:18;6423:26;;6495:9;6489:4;6485:20;6481:1;6470:9;6466:17;6459:47;6523:131;6649:4;6523:131;:::i;:::-;6515:139;;6413:248;;;:::o;6667:98::-;;6752:5;6746:12;6736:22;;6725:40;;;:::o;6771:99::-;;6857:5;6851:12;6841:22;;6830:40;;;:::o;6876:147::-;;7014:3;6999:18;;6989:34;;;;:::o;7029:169::-;;7147:6;7142:3;7135:19;7187:4;7182:3;7178:14;7163:29;;7125:73;;;;:::o;7204:96::-;;7270:24;7288:5;7270:24;:::i;:::-;7259:35;;7249:51;;;:::o;7306:126::-;;7383:42;7376:5;7372:54;7361:65;;7351:81;;;:::o;7438:307::-;7506:1;7516:113;7530:6;7527:1;7524:13;7516:113;;;7615:1;7610:3;7606:11;7600:18;7596:1;7591:3;7587:11;7580:39;7552:2;7549:1;7545:10;7540:15;;7516:113;;;7647:6;7644:1;7641:13;7638:2;;;7727:1;7718:6;7713:3;7709:16;7702:27;7638:2;7487:258;;;;:::o;7751:102::-;;7843:2;7839:7;7834:2;7827:5;7823:14;7819:28;7809:38;;7799:54;;;:::o;7859:122::-;7932:24;7950:5;7932:24;:::i;:::-;7925:5;7922:35;7912:2;;7971:1;7968;7961:12;7912:2;7902:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}.\n     */\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\n        _setAdmin(admin_);\n    }\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 private constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _admin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _admin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        require(newAdmin != address(0), \"TransparentUpgradeableProxy: new admin is the zero address\");\n        emit AdminChanged(_admin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external virtual ifAdmin {\n        _upgradeTo(newImplementation);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable virtual ifAdmin {\n        _upgradeTo(newImplementation);\n        Address.functionDelegateCall(newImplementation, data);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address adm) {\n        bytes32 slot = _ADMIN_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            adm := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        bytes32 slot = _ADMIN_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, newAdmin)\n        }\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _admin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}\n",
  "sourcePath": "E:\\work\\工作\\czz\\合约\\truffle\\safebox\\contracts\\openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol",
  "ast": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        17214
      ],
      "ERC1967Proxy": [
        9539
      ],
      "Proxy": [
        9591
      ],
      "TransparentUpgradeableProxy": [
        10136
      ]
    },
    "id": 10137,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9933,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:77"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 9934,
        "nodeType": "ImportDirective",
        "scope": 10137,
        "sourceUnit": 9540,
        "src": "58:37:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9936,
              "name": "ERC1967Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9539,
              "src": "1589:12:77"
            },
            "id": 9937,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:12:77"
          }
        ],
        "contractDependencies": [
          9539,
          9591
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9935,
          "nodeType": "StructuredDocumentation",
          "src": "97:1451:77",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 10136,
        "linearizedBaseContracts": [
          10136,
          9539,
          9591
        ],
        "name": "TransparentUpgradeableProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9971,
              "nodeType": "Block",
              "src": "1927:121:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9952,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9983,
                          "src": "1944:11:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 9958,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1985:21:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 9957,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1975:9:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 9959,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1975:32:77",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 9956,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1967:7:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 9955,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1967:7:77",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 9960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1967:41:77",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 9961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2011:1:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1967:45:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1959:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 9953,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1959:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1959:54:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1944:69:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9951,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1937:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:77:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:77:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9968,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9942,
                        "src": "2034:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9967,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10115,
                      "src": "2024:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:17:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9970,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:17:77"
                }
              ]
            },
            "documentation": {
              "id": 9938,
              "nodeType": "StructuredDocumentation",
              "src": "1608:214:77",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
            },
            "id": 9972,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9947,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9940,
                    "src": "1912:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9948,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9944,
                    "src": "1920:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 9949,
                "modifierName": {
                  "id": 9946,
                  "name": "ERC1967Proxy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9539,
                  "src": "1899:12:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "1899:27:77"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9940,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 9972,
                  "src": "1839:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9942,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 9972,
                  "src": "1855:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9944,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 9972,
                  "src": "1871:18:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9943,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:52:77"
            },
            "returnParameters": {
              "id": 9950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:77"
            },
            "scope": 10136,
            "src": "1827:221:77",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9973,
              "nodeType": "StructuredDocumentation",
              "src": "2054:67:77",
              "text": " @dev Emitted when the admin account has changed."
            },
            "id": 9979,
            "name": "AdminChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9975,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9979,
                  "src": "2145:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9979,
                  "src": "2168:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2168:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2144:41:77"
            },
            "src": "2126:60:77"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9980,
              "nodeType": "StructuredDocumentation",
              "src": "2192:189:77",
              "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
            },
            "id": 9983,
            "mutability": "constant",
            "name": "_ADMIN_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 10136,
            "src": "2386:105:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9981,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2386:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
              "id": 9982,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2425:66:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                "typeString": "int_const 8195...(69 digits omitted)...7091"
              },
              "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9998,
              "nodeType": "Block",
              "src": "2652:112:77",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9986,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2666:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2666:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9988,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10103,
                        "src": "2680:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2680:8:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2666:22:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9996,
                    "nodeType": "Block",
                    "src": "2722:36:77",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9993,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9569,
                            "src": "2736:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 9994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2736:11:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9995,
                        "nodeType": "ExpressionStatement",
                        "src": "2736:11:77"
                      }
                    ]
                  },
                  "id": 9997,
                  "nodeType": "IfStatement",
                  "src": "2662:96:77",
                  "trueBody": {
                    "id": 9992,
                    "nodeType": "Block",
                    "src": "2690:26:77",
                    "statements": [
                      {
                        "id": 9991,
                        "nodeType": "PlaceholderStatement",
                        "src": "2704:1:77"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9984,
              "nodeType": "StructuredDocumentation",
              "src": "2498:130:77",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 9999,
            "name": "ifAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:2:77"
            },
            "src": "2633:131:77",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10012,
              "nodeType": "Block",
              "src": "3265:34:77",
              "statements": [
                {
                  "expression": {
                    "id": 10010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10007,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10005,
                      "src": "3275:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10008,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10103,
                        "src": "3284:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3284:8:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3275:17:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10011,
                  "nodeType": "ExpressionStatement",
                  "src": "3275:17:77"
                }
              ]
            },
            "documentation": {
              "id": 10000,
              "nodeType": "StructuredDocumentation",
              "src": "2770:431:77",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 10013,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10003,
                "modifierName": {
                  "id": 10002,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "3232:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "3232:7:77"
              }
            ],
            "name": "admin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3220:2:77"
            },
            "returnParameters": {
              "id": 10006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10005,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 10013,
                  "src": "3249:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3249:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3248:16:77"
            },
            "scope": 10136,
            "src": "3206:93:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10026,
              "nodeType": "Block",
              "src": "3836:52:77",
              "statements": [
                {
                  "expression": {
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10021,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10019,
                      "src": "3846:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10022,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          9503
                        ],
                        "referencedDeclaration": 9503,
                        "src": "3864:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3864:17:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3846:35:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:35:77"
                }
              ]
            },
            "documentation": {
              "id": 10014,
              "nodeType": "StructuredDocumentation",
              "src": "3305:449:77",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 10027,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10017,
                "modifierName": {
                  "id": 10016,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "3794:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "3794:7:77"
              }
            ],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3782:2:77"
            },
            "returnParameters": {
              "id": 10020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10019,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "3811:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3810:25:77"
            },
            "scope": 10136,
            "src": "3759:129:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10055,
              "nodeType": "Block",
              "src": "4157:186:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10036,
                          "name": "newAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10030,
                          "src": "4175:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4195:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4187:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4187:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4187:10:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4175:22:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373",
                        "id": 10042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4199:60:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
                        },
                        "value": "TransparentUpgradeableProxy: new admin is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
                        }
                      ],
                      "id": 10035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4167:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4167:93:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10044,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:93:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10046,
                          "name": "_admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10103,
                          "src": "4288:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4288:8:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10048,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10030,
                        "src": "4298:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10045,
                      "name": "AdminChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "4275:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4275:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "EmitStatement",
                  "src": "4270:37:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10052,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10030,
                        "src": "4327:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10051,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10115,
                      "src": "4317:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4317:19:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10054,
                  "nodeType": "ExpressionStatement",
                  "src": "4317:19:77"
                }
              ]
            },
            "documentation": {
              "id": 10028,
              "nodeType": "StructuredDocumentation",
              "src": "3894:194:77",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 10056,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10033,
                "modifierName": {
                  "id": 10032,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "4149:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "4149:7:77"
              }
            ],
            "name": "changeAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10030,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 10056,
                  "src": "4114:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4113:18:77"
            },
            "returnParameters": {
              "id": 10034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4157:0:77"
            },
            "scope": 10136,
            "src": "4093:250:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10068,
              "nodeType": "Block",
              "src": "4574:46:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10065,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10059,
                        "src": "4595:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10064,
                      "name": "_upgradeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "4584:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10067,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:29:77"
                }
              ]
            },
            "documentation": {
              "id": 10057,
              "nodeType": "StructuredDocumentation",
              "src": "4349:149:77",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 10069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10062,
                "modifierName": {
                  "id": 10061,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "4566:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "4566:7:77"
              }
            ],
            "name": "upgradeTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10059,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10069,
                  "src": "4522:25:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4522:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:27:77"
            },
            "returnParameters": {
              "id": 10063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4574:0:77"
            },
            "scope": 10136,
            "src": "4503:117:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10090,
              "nodeType": "Block",
              "src": "5103:109:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10080,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10072,
                        "src": "5124:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10079,
                      "name": "_upgradeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "5113:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5113:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10082,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:29:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10086,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10072,
                        "src": "5181:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10087,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10074,
                        "src": "5200:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 10083,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17214,
                        "src": "5152:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$17214_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 10085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17148,
                      "src": "5152:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5152:53:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 10089,
                  "nodeType": "ExpressionStatement",
                  "src": "5152:53:77"
                }
              ]
            },
            "documentation": {
              "id": 10070,
              "nodeType": "StructuredDocumentation",
              "src": "4626:365:77",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 10091,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10077,
                "modifierName": {
                  "id": 10076,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "5095:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "5095:7:77"
              }
            ],
            "name": "upgradeToAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10072,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "5022:25:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5022:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10074,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "5049:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5021:48:77"
            },
            "returnParameters": {
              "id": 10078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5103:0:77"
            },
            "scope": 10136,
            "src": "4996:216:77",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10102,
              "nodeType": "Block",
              "src": "5335:159:77",
              "statements": [
                {
                  "assignments": [
                    10098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10098,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 10102,
                      "src": "5345:12:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10097,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5345:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10100,
                  "initialValue": {
                    "id": 10099,
                    "name": "_ADMIN_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9983,
                    "src": "5360:11:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5345:26:77"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5446:42:77",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5460:18:77",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "5473:4:77"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "5467:5:77"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5467:11:77"
                        },
                        "variableNames": [
                          {
                            "name": "adm",
                            "nodeType": "YulIdentifier",
                            "src": "5460:3:77"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 10095,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5460:3:77",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10098,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5473:4:77",
                      "valueSize": 1
                    }
                  ],
                  "id": 10101,
                  "nodeType": "InlineAssembly",
                  "src": "5437:51:77"
                }
              ]
            },
            "documentation": {
              "id": 10092,
              "nodeType": "StructuredDocumentation",
              "src": "5218:50:77",
              "text": " @dev Returns the current admin."
            },
            "id": 10103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5288:2:77"
            },
            "returnParameters": {
              "id": 10096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10095,
                  "mutability": "mutable",
                  "name": "adm",
                  "nodeType": "VariableDeclaration",
                  "scope": 10103,
                  "src": "5322:11:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:13:77"
            },
            "scope": 10136,
            "src": "5273:221:77",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10114,
              "nodeType": "Block",
              "src": "5621:164:77",
              "statements": [
                {
                  "assignments": [
                    10110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10110,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 10114,
                      "src": "5631:12:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10109,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5631:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10112,
                  "initialValue": {
                    "id": 10111,
                    "name": "_ADMIN_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9983,
                    "src": "5646:11:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5631:26:77"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5733:46:77",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "5754:4:77"
                            },
                            {
                              "name": "newAdmin",
                              "nodeType": "YulIdentifier",
                              "src": "5760:8:77"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "5747:6:77"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5747:22:77"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5747:22:77"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 10106,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5760:8:77",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10110,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5754:4:77",
                      "valueSize": 1
                    }
                  ],
                  "id": 10113,
                  "nodeType": "InlineAssembly",
                  "src": "5724:55:77"
                }
              ]
            },
            "documentation": {
              "id": 10104,
              "nodeType": "StructuredDocumentation",
              "src": "5500:71:77",
              "text": " @dev Stores a new address in the EIP1967 admin slot."
            },
            "id": 10115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10106,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 10115,
                  "src": "5595:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5594:18:77"
            },
            "returnParameters": {
              "id": 10108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5621:0:77"
            },
            "scope": 10136,
            "src": "5576:209:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9590
            ],
            "body": {
              "id": 10134,
              "nodeType": "Block",
              "src": "5959:151:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5977:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5977:10:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10123,
                            "name": "_admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10103,
                            "src": "5991:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5991:8:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5977:22:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6001:68:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 10120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5969:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:101:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10128,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:101:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10129,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6080:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$10136_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 10131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9590,
                      "src": "6080:21:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6080:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10133,
                  "nodeType": "ExpressionStatement",
                  "src": "6080:23:77"
                }
              ]
            },
            "documentation": {
              "id": 10116,
              "nodeType": "StructuredDocumentation",
              "src": "5791:110:77",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 10135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5950:8:77"
            },
            "parameters": {
              "id": 10117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5930:2:77"
            },
            "returnParameters": {
              "id": 10119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5959:0:77"
            },
            "scope": 10136,
            "src": "5906:204:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10137,
        "src": "1549:4563:77"
      }
    ],
    "src": "33:6080:77"
  },
  "legacyAST": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        17214
      ],
      "ERC1967Proxy": [
        9539
      ],
      "Proxy": [
        9591
      ],
      "TransparentUpgradeableProxy": [
        10136
      ]
    },
    "id": 10137,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9933,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:77"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 9934,
        "nodeType": "ImportDirective",
        "scope": 10137,
        "sourceUnit": 9540,
        "src": "58:37:77",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9936,
              "name": "ERC1967Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9539,
              "src": "1589:12:77"
            },
            "id": 9937,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:12:77"
          }
        ],
        "contractDependencies": [
          9539,
          9591
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9935,
          "nodeType": "StructuredDocumentation",
          "src": "97:1451:77",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 10136,
        "linearizedBaseContracts": [
          10136,
          9539,
          9591
        ],
        "name": "TransparentUpgradeableProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9971,
              "nodeType": "Block",
              "src": "1927:121:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9952,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9983,
                          "src": "1944:11:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 9958,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1985:21:77",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 9957,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1975:9:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 9959,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1975:32:77",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 9956,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1967:7:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 9955,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1967:7:77",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 9960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1967:41:77",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 9961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2011:1:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1967:45:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1959:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 9953,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1959:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1959:54:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1944:69:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 9951,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1937:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:77:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:77:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9968,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9942,
                        "src": "2034:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9967,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10115,
                      "src": "2024:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:17:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9970,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:17:77"
                }
              ]
            },
            "documentation": {
              "id": 9938,
              "nodeType": "StructuredDocumentation",
              "src": "1608:214:77",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
            },
            "id": 9972,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9947,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9940,
                    "src": "1912:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9948,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9944,
                    "src": "1920:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 9949,
                "modifierName": {
                  "id": 9946,
                  "name": "ERC1967Proxy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9539,
                  "src": "1899:12:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "1899:27:77"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9940,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 9972,
                  "src": "1839:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9942,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 9972,
                  "src": "1855:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9944,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 9972,
                  "src": "1871:18:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9943,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1871:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:52:77"
            },
            "returnParameters": {
              "id": 9950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:77"
            },
            "scope": 10136,
            "src": "1827:221:77",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9973,
              "nodeType": "StructuredDocumentation",
              "src": "2054:67:77",
              "text": " @dev Emitted when the admin account has changed."
            },
            "id": 9979,
            "name": "AdminChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9975,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9979,
                  "src": "2145:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 9979,
                  "src": "2168:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2168:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2144:41:77"
            },
            "src": "2126:60:77"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9980,
              "nodeType": "StructuredDocumentation",
              "src": "2192:189:77",
              "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
            },
            "id": 9983,
            "mutability": "constant",
            "name": "_ADMIN_SLOT",
            "nodeType": "VariableDeclaration",
            "scope": 10136,
            "src": "2386:105:77",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9981,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2386:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
              "id": 9982,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2425:66:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                "typeString": "int_const 8195...(69 digits omitted)...7091"
              },
              "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9998,
              "nodeType": "Block",
              "src": "2652:112:77",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9986,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2666:3:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2666:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9988,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10103,
                        "src": "2680:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2680:8:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2666:22:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9996,
                    "nodeType": "Block",
                    "src": "2722:36:77",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9993,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9569,
                            "src": "2736:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 9994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2736:11:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9995,
                        "nodeType": "ExpressionStatement",
                        "src": "2736:11:77"
                      }
                    ]
                  },
                  "id": 9997,
                  "nodeType": "IfStatement",
                  "src": "2662:96:77",
                  "trueBody": {
                    "id": 9992,
                    "nodeType": "Block",
                    "src": "2690:26:77",
                    "statements": [
                      {
                        "id": 9991,
                        "nodeType": "PlaceholderStatement",
                        "src": "2704:1:77"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9984,
              "nodeType": "StructuredDocumentation",
              "src": "2498:130:77",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 9999,
            "name": "ifAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:2:77"
            },
            "src": "2633:131:77",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10012,
              "nodeType": "Block",
              "src": "3265:34:77",
              "statements": [
                {
                  "expression": {
                    "id": 10010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10007,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10005,
                      "src": "3275:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10008,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10103,
                        "src": "3284:6:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3284:8:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3275:17:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10011,
                  "nodeType": "ExpressionStatement",
                  "src": "3275:17:77"
                }
              ]
            },
            "documentation": {
              "id": 10000,
              "nodeType": "StructuredDocumentation",
              "src": "2770:431:77",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 10013,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10003,
                "modifierName": {
                  "id": 10002,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "3232:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "3232:7:77"
              }
            ],
            "name": "admin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3220:2:77"
            },
            "returnParameters": {
              "id": 10006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10005,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 10013,
                  "src": "3249:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3249:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3248:16:77"
            },
            "scope": 10136,
            "src": "3206:93:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10026,
              "nodeType": "Block",
              "src": "3836:52:77",
              "statements": [
                {
                  "expression": {
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10021,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10019,
                      "src": "3846:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10022,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          9503
                        ],
                        "referencedDeclaration": 9503,
                        "src": "3864:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3864:17:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3846:35:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:35:77"
                }
              ]
            },
            "documentation": {
              "id": 10014,
              "nodeType": "StructuredDocumentation",
              "src": "3305:449:77",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 10027,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10017,
                "modifierName": {
                  "id": 10016,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "3794:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "3794:7:77"
              }
            ],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3782:2:77"
            },
            "returnParameters": {
              "id": 10020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10019,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "3811:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3811:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3810:25:77"
            },
            "scope": 10136,
            "src": "3759:129:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10055,
              "nodeType": "Block",
              "src": "4157:186:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10036,
                          "name": "newAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10030,
                          "src": "4175:8:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4195:1:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4187:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4187:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4187:10:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4175:22:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373",
                        "id": 10042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4199:60:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
                        },
                        "value": "TransparentUpgradeableProxy: new admin is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b8c7de7d8992cce1e1093ee65cc3fbbb636cdcec8111cd0ef596adac25e6858",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: new admin is the zero address\""
                        }
                      ],
                      "id": 10035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4167:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4167:93:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10044,
                  "nodeType": "ExpressionStatement",
                  "src": "4167:93:77"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10046,
                          "name": "_admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10103,
                          "src": "4288:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4288:8:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10048,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10030,
                        "src": "4298:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10045,
                      "name": "AdminChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9979,
                      "src": "4275:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4275:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "EmitStatement",
                  "src": "4270:37:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10052,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10030,
                        "src": "4327:8:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10051,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10115,
                      "src": "4317:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4317:19:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10054,
                  "nodeType": "ExpressionStatement",
                  "src": "4317:19:77"
                }
              ]
            },
            "documentation": {
              "id": 10028,
              "nodeType": "StructuredDocumentation",
              "src": "3894:194:77",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 10056,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10033,
                "modifierName": {
                  "id": 10032,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "4149:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "4149:7:77"
              }
            ],
            "name": "changeAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10030,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 10056,
                  "src": "4114:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4114:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4113:18:77"
            },
            "returnParameters": {
              "id": 10034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4157:0:77"
            },
            "scope": 10136,
            "src": "4093:250:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10068,
              "nodeType": "Block",
              "src": "4574:46:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10065,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10059,
                        "src": "4595:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10064,
                      "name": "_upgradeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "4584:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10067,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:29:77"
                }
              ]
            },
            "documentation": {
              "id": 10057,
              "nodeType": "StructuredDocumentation",
              "src": "4349:149:77",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 10069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10062,
                "modifierName": {
                  "id": 10061,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "4566:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "4566:7:77"
              }
            ],
            "name": "upgradeTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10059,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10069,
                  "src": "4522:25:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4522:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:27:77"
            },
            "returnParameters": {
              "id": 10063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4574:0:77"
            },
            "scope": 10136,
            "src": "4503:117:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10090,
              "nodeType": "Block",
              "src": "5103:109:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10080,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10072,
                        "src": "5124:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10079,
                      "name": "_upgradeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "5113:10:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5113:29:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10082,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:29:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10086,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10072,
                        "src": "5181:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10087,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10074,
                        "src": "5200:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 10083,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17214,
                        "src": "5152:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$17214_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 10085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionDelegateCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17148,
                      "src": "5152:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory) returns (bytes memory)"
                      }
                    },
                    "id": 10088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5152:53:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 10089,
                  "nodeType": "ExpressionStatement",
                  "src": "5152:53:77"
                }
              ]
            },
            "documentation": {
              "id": 10070,
              "nodeType": "StructuredDocumentation",
              "src": "4626:365:77",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 10091,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10077,
                "modifierName": {
                  "id": 10076,
                  "name": "ifAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9999,
                  "src": "5095:7:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "5095:7:77"
              }
            ],
            "name": "upgradeToAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10072,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "5022:25:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5022:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10074,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10091,
                  "src": "5049:19:77",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5021:48:77"
            },
            "returnParameters": {
              "id": 10078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5103:0:77"
            },
            "scope": 10136,
            "src": "4996:216:77",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10102,
              "nodeType": "Block",
              "src": "5335:159:77",
              "statements": [
                {
                  "assignments": [
                    10098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10098,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 10102,
                      "src": "5345:12:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10097,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5345:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10100,
                  "initialValue": {
                    "id": 10099,
                    "name": "_ADMIN_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9983,
                    "src": "5360:11:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5345:26:77"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5446:42:77",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5460:18:77",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "5473:4:77"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "5467:5:77"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5467:11:77"
                        },
                        "variableNames": [
                          {
                            "name": "adm",
                            "nodeType": "YulIdentifier",
                            "src": "5460:3:77"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 10095,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5460:3:77",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10098,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5473:4:77",
                      "valueSize": 1
                    }
                  ],
                  "id": 10101,
                  "nodeType": "InlineAssembly",
                  "src": "5437:51:77"
                }
              ]
            },
            "documentation": {
              "id": 10092,
              "nodeType": "StructuredDocumentation",
              "src": "5218:50:77",
              "text": " @dev Returns the current admin."
            },
            "id": 10103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5288:2:77"
            },
            "returnParameters": {
              "id": 10096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10095,
                  "mutability": "mutable",
                  "name": "adm",
                  "nodeType": "VariableDeclaration",
                  "scope": 10103,
                  "src": "5322:11:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:13:77"
            },
            "scope": 10136,
            "src": "5273:221:77",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10114,
              "nodeType": "Block",
              "src": "5621:164:77",
              "statements": [
                {
                  "assignments": [
                    10110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10110,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 10114,
                      "src": "5631:12:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 10109,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5631:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10112,
                  "initialValue": {
                    "id": 10111,
                    "name": "_ADMIN_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9983,
                    "src": "5646:11:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5631:26:77"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5733:46:77",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "5754:4:77"
                            },
                            {
                              "name": "newAdmin",
                              "nodeType": "YulIdentifier",
                              "src": "5760:8:77"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "5747:6:77"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5747:22:77"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5747:22:77"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 10106,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5760:8:77",
                      "valueSize": 1
                    },
                    {
                      "declaration": 10110,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5754:4:77",
                      "valueSize": 1
                    }
                  ],
                  "id": 10113,
                  "nodeType": "InlineAssembly",
                  "src": "5724:55:77"
                }
              ]
            },
            "documentation": {
              "id": 10104,
              "nodeType": "StructuredDocumentation",
              "src": "5500:71:77",
              "text": " @dev Stores a new address in the EIP1967 admin slot."
            },
            "id": 10115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10106,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 10115,
                  "src": "5595:16:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5594:18:77"
            },
            "returnParameters": {
              "id": 10108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5621:0:77"
            },
            "scope": 10136,
            "src": "5576:209:77",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9590
            ],
            "body": {
              "id": 10134,
              "nodeType": "Block",
              "src": "5959:151:77",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5977:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5977:10:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10123,
                            "name": "_admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10103,
                            "src": "5991:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 10124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5991:8:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5977:22:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 10126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6001:68:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 10120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5969:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:101:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10128,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:101:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10129,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "6080:5:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$10136_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 10131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9590,
                      "src": "6080:21:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6080:23:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10133,
                  "nodeType": "ExpressionStatement",
                  "src": "6080:23:77"
                }
              ]
            },
            "documentation": {
              "id": 10116,
              "nodeType": "StructuredDocumentation",
              "src": "5791:110:77",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 10135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5950:8:77"
            },
            "parameters": {
              "id": 10117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5930:2:77"
            },
            "returnParameters": {
              "id": 10119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5959:0:77"
            },
            "scope": 10136,
            "src": "5906:204:77",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10137,
        "src": "1549:4563:77"
      }
    ],
    "src": "33:6080:77"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T11:38:18.237Z",
  "devdoc": {
    "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      }
    },
    "kind": "dev",
    "methods": {
      "admin()": {
        "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
      },
      "changeAdmin(address)": {
        "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
      },
      "constructor": {
        "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {UpgradeableProxy-constructor}."
      },
      "implementation()": {
        "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
      }
    },
    "stateVariables": {
      "_ADMIN_SLOT": {
        "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}