{
  "contractName": "ERC20PresetMinterPauser",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":\"ERC20PresetMinterPauser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x897b526c3c1b6196d7c2202b3dbb04b77513a40633c6083a00e8c11402011710\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9a87494f94cba588431ee0600b51a4122d93d7f5e081dbf0c49ad09b394c5bf\",\"dweb:/ipfs/QmSuMSXPnbEKi8yLNXAagtaX5YbJaiuuKRdCH9S5BxQdRH\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x0d616363c1a1e6f9f489303f94df0cbe606826ab4944d315c3801a07f9b8d4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://976cf80d02556929369fc98196c4082f204e44e682e20d3f65cc61b31e29bf76\",\"dweb:/ipfs/Qmeo1vvf7L3PLLDPNSVuVyirLB3FrCYKMFw3JZ7EXgC5YU\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5a6eef7aca46ac84e7ddcbadde3bbd33e29de481108530c278837f588f169f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab82ea9632518f6452fd02db47e752252ebc00a1408bc8f53bf9b79e4c6de52a\",\"dweb:/ipfs/QmesKUQ2dovSX7wqCwiU9ZjY3v72fWAJkERwXG5JVRMXaE\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80a57501e3b11616e3e252ee40b4479dc09f831a9aaf83224179eb1ccd54b7eb\",\"dweb:/ipfs/QmZcREGkEbu9NoMiYXrXdJBAWNfeC41uM13rFaVL9VQafS\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x86b0abb859d38e6909101e8dce6fad76543cd1443788b049fd182379b42cb6e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b057ad3b90ede81cefcc6f46d08a55b1f3b0f89638e21499221fea2aed3304\",\"dweb:/ipfs/QmYwVSzxHm7pX5ANvWhJG1JUP64BL8VWnozfpeQQNwFtp3\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xa5cafd3301957efa1be602e80bc46705408d7956160f07f8785933f339ed9154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2990af6eb22a579b7193225734785d6ea4ca851407f08c4f5f78e58c329073a\",\"dweb:/ipfs/QmabgfYV9s9awaHYN7BejNFk8gwWRNm2y9QrodBzHXDq8K\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0xca9e98786cd7d8060e08a9f5aaf6dbd7da9d51afe3232c06c5a49ea49490c789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355eccc0746e3d44001d248077efece51418d44b226d27de33930ff03ebd8103\",\"dweb:/ipfs/QmcMZjhmDVuiF1AWLEnbUAzuq2RMZVQP1ChoZV63bU8EgE\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620036a3380380620036a38339818101604052810190620000379190620004ee565b8181816005908051906020019062000051929190620003cc565b5080600690805190602001906200006a929190620003cc565b5050506000600760006101000a81548160ff021916908315150217905550620000ac6000801b620000a06200013660201b60201c565b6200013e60201b60201c565b620000ed7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000e16200013660201b60201c565b6200013e60201b60201c565b6200012e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620001226200013660201b60201c565b6200013e60201b60201c565b505062000692565b600033905090565b6200015582826200018660201b62000efb1760201c565b6200018181600160008581526020019081526020016000206200019c60201b62000f091790919060201c565b505050565b620001988282620001d460201b60201c565b5050565b6000620001cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002c560201b60201c565b905092915050565b620001e682826200033f60201b60201c565b620002c157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002666200013660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002d98383620003a960201b60201c565b6200033457826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000339565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054620003da90620005fe565b90600052602060002090601f016020900481019282620003fe57600085556200044a565b82601f106200041957805160ff19168380011785556200044a565b828001600101855582156200044a579182015b82811115620004495782518255916020019190600101906200042c565b5b5090506200045991906200045d565b5090565b5b80821115620004785760008160009055506001016200045e565b5090565b6000620004936200048d8462000595565b62000561565b905082815260208101848484011115620004ac57600080fd5b620004b9848285620005c8565b509392505050565b600082601f830112620004d357600080fd5b8151620004e58482602086016200047c565b91505092915050565b600080604083850312156200050257600080fd5b600083015167ffffffffffffffff8111156200051d57600080fd5b6200052b85828601620004c1565b925050602083015167ffffffffffffffff8111156200054957600080fd5b6200055785828601620004c1565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200058b576200058a62000663565b5b8060405250919050565b600067ffffffffffffffff821115620005b357620005b262000663565b5b601f19601f8301169050602081019050919050565b60005b83811015620005e8578082015181840152602081019050620005cb565b83811115620005f8576000848401525b50505050565b600060028204905060018216806200061757607f821691505b602082108114156200062e576200062d62000634565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61300180620006a26000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d53913931461052d578063d547741f1461054b578063dd62ed3e14610567578063e63ab1e914610597576101c4565b8063a457c2d71461049d578063a9059cbb146104cd578063ca15c873146104fd576101c4565b80639010d07c116100d35780639010d07c1461040157806391d148541461043157806395d89b4114610461578063a217fddf1461047f576101c4565b806370a08231146103ab57806379cc6790146103db5780638456cb59146103f7576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461034b57806340c10f191461035557806342966c68146103715780635c975abb1461038d576101c4565b8063313ce567146102e157806336568abe146102ff578063395093511461031b576101c4565b806318160ddd116101a257806318160ddd1461024757806323b872dd14610265578063248a9ca3146102955780632f2ff15d146102c5576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063095ea7b314610217575b600080fd5b6101e360048036038101906101de919061215f565b6105b5565b6040516101f09190612a3c565b60405180910390f35b61020161062f565b60405161020e9190612a72565b60405180910390f35b610231600480360381019061022c9190612082565b6106c1565b60405161023e9190612a3c565b60405180910390f35b61024f6106df565b60405161025c9190612d34565b60405180910390f35b61027f600480360381019061027a9190612033565b6106e9565b60405161028c9190612a3c565b60405180910390f35b6102af60048036038101906102aa91906120be565b6107ea565b6040516102bc9190612a57565b60405180910390f35b6102df60048036038101906102da91906120e7565b610809565b005b6102e961083d565b6040516102f69190612d4f565b60405180910390f35b610319600480360381019061031491906120e7565b610846565b005b61033560048036038101906103309190612082565b61087a565b6040516103429190612a3c565b60405180910390f35b610353610926565b005b61036f600480360381019061036a9190612082565b6109a0565b005b61038b60048036038101906103869190612188565b610a1e565b005b610395610a32565b6040516103a29190612a3c565b60405180910390f35b6103c560048036038101906103c09190611fce565b610a49565b6040516103d29190612d34565b60405180910390f35b6103f560048036038101906103f09190612082565b610a92565b005b6103ff610b16565b005b61041b60048036038101906104169190612123565b610b90565b6040516104289190612a21565b60405180910390f35b61044b600480360381019061044691906120e7565b610bbf565b6040516104589190612a3c565b60405180910390f35b610469610c29565b6040516104769190612a72565b60405180910390f35b610487610cbb565b6040516104949190612a57565b60405180910390f35b6104b760048036038101906104b29190612082565b610cc2565b6040516104c49190612a3c565b60405180910390f35b6104e760048036038101906104e29190612082565b610db6565b6040516104f49190612a3c565b60405180910390f35b610517600480360381019061051291906120be565b610dd4565b6040516105249190612d34565b60405180910390f35b610535610df8565b6040516105429190612a57565b60405180910390f35b610565600480360381019061056091906120e7565b610e1c565b005b610581600480360381019061057c9190611ff7565b610e50565b60405161058e9190612d34565b60405180910390f35b61059f610ed7565b6040516105ac9190612a57565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610628575061062782610f39565b5b9050919050565b60606005805461063e90612ece565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90612ece565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b5050505050905090565b60006106d56106ce610fb3565b8484610fbb565b6001905092915050565b6000600454905090565b60006106f6848484611186565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610741610fb3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890612bd4565b60405180910390fd5b6107de856107cd610fb3565b85846107d99190612ddc565b610fbb565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6108138282611408565b6108388160016000858152602001908152602001600020610f0990919063ffffffff16565b505050565b60006012905090565b610850828261146e565b61087581600160008581526020019081526020016000206114f190919063ffffffff16565b505050565b600061091c610887610fb3565b848460036000610895610fb3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109179190612d86565b610fbb565b6001905092915050565b6109577f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610952610fb3565b610bbf565b610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d90612b34565b60405180910390fd5b61099e611521565b565b6109d17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109cc610fb3565b610bbf565b610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790612bf4565b60405180910390fd5b610a1a82826115c3565b5050565b610a2f610a29610fb3565b82611718565b50565b6000600760009054906101000a900460ff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610aa583610aa0610fb3565b610e50565b905081811015610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae190612c14565b60405180910390fd5b610b0783610af6610fb3565b8484610b029190612ddc565b610fbb565b610b118383611718565b505050565b610b477f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b42610fb3565b610bbf565b610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d90612c94565b60405180910390fd5b610b8e6118ee565b565b6000610bb7826001600086815260200190815260200160002061199190919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060068054610c3890612ece565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6490612ece565b8015610cb15780601f10610c8657610100808354040283529160200191610cb1565b820191906000526020600020905b815481529060010190602001808311610c9457829003601f168201915b5050505050905090565b6000801b81565b60008060036000610cd1610fb3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590612cb4565b60405180910390fd5b610dab610d99610fb3565b858584610da69190612ddc565b610fbb565b600191505092915050565b6000610dca610dc3610fb3565b8484611186565b6001905092915050565b6000610df1600160008481526020019081526020016000206119ab565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610e2682826119c0565b610e4b81600160008581526020019081526020016000206114f190919063ffffffff16565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b610f058282611a26565b5050565b6000610f31836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b06565b905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610fac5750610fab82611b76565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102290612c74565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561109b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109290612b54565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111799190612d34565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed90612c54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125d90612ab4565b60405180910390fd5b611271838383611be0565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef90612b74565b60405180910390fd5b81816113049190612ddc565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113969190612d86565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113fa9190612d34565b60405180910390a350505050565b611421611414836107ea565b61141c610fb3565b610bbf565b611460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145790612ad4565b60405180910390fd5b61146a8282611a26565b5050565b611476610fb3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114da90612cd4565b60405180910390fd5b6114ed8282611bf0565b5050565b6000611519836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611cd1565b905092915050565b611529610a32565b611568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155f90612af4565b60405180910390fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115ac610fb3565b6040516115b99190612a21565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162a90612cf4565b60405180910390fd5b61163f60008383611be0565b80600460008282546116519190612d86565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116a79190612d86565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161170c9190612d34565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f90612c34565b60405180910390fd5b61179482600083611be0565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561181b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181290612b14565b60405180910390fd5b81816118279190612ddc565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600082825461187c9190612ddc565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118e19190612d34565b60405180910390a3505050565b6118f6610a32565b15611936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192d90612bb4565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861197a610fb3565b6040516119879190612a21565b60405180910390a1565b60006119a08360000183611e4f565b60001c905092915050565b60006119b982600001611ee9565b9050919050565b6119d96119cc836107ea565b6119d4610fb3565b610bbf565b611a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0f90612b94565b60405180910390fd5b611a228282611bf0565b5050565b611a308282610bbf565b611b0257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611aa7610fb3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000611b128383611efa565b611b6b578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611b70565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611beb838383611f1d565b505050565b611bfa8282610bbf565b15611ccd57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611c72610fb3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008083600101600084815260200190815260200160002054905060008114611e43576000600182611d039190612ddc565b9050600060018660000180549050611d1b9190612ddc565b90506000866000018281548110611d5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110611da5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550838760010160008381526020019081526020016000208190555086600001805480611e07577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611e49565b60009150505b92915050565b600081836000018054905011611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190612a94565b60405180910390fd5b826000018281548110611ed6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b611f28838383611f75565b611f30610a32565b15611f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6790612d14565b60405180910390fd5b505050565b505050565b600081359050611f8981612f6f565b92915050565b600081359050611f9e81612f86565b92915050565b600081359050611fb381612f9d565b92915050565b600081359050611fc881612fb4565b92915050565b600060208284031215611fe057600080fd5b6000611fee84828501611f7a565b91505092915050565b6000806040838503121561200a57600080fd5b600061201885828601611f7a565b925050602061202985828601611f7a565b9150509250929050565b60008060006060848603121561204857600080fd5b600061205686828701611f7a565b935050602061206786828701611f7a565b925050604061207886828701611fb9565b9150509250925092565b6000806040838503121561209557600080fd5b60006120a385828601611f7a565b92505060206120b485828601611fb9565b9150509250929050565b6000602082840312156120d057600080fd5b60006120de84828501611f8f565b91505092915050565b600080604083850312156120fa57600080fd5b600061210885828601611f8f565b925050602061211985828601611f7a565b9150509250929050565b6000806040838503121561213657600080fd5b600061214485828601611f8f565b925050602061215585828601611fb9565b9150509250929050565b60006020828403121561217157600080fd5b600061217f84828501611fa4565b91505092915050565b60006020828403121561219a57600080fd5b60006121a884828501611fb9565b91505092915050565b6121ba81612e10565b82525050565b6121c981612e22565b82525050565b6121d881612e2e565b82525050565b60006121e982612d6a565b6121f38185612d75565b9350612203818560208601612e9b565b61220c81612f5e565b840191505092915050565b6000612224602283612d75565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061228a602383612d75565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122f0602f83612d75565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000612356601483612d75565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000612396602283612d75565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006123fc603983612d75565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f20756e7061757365000000000000006020830152604082019050919050565b6000612462602283612d75565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124c8602683612d75565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061252e603083612d75565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612594601083612d75565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006125d4602883612d75565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061263a603683612d75565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006020830152604082019050919050565b60006126a0602483612d75565b91507f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008301527f616e6365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612706602183612d75565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061276c602583612d75565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127d2602483612d75565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612838603783612d75565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f2070617573650000000000000000006020830152604082019050919050565b600061289e602583612d75565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612904602f83612d75565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600061296a601f83612d75565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b60006129aa602a83612d75565b91507f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008301527f696c6520706175736564000000000000000000000000000000000000000000006020830152604082019050919050565b612a0c81612e84565b82525050565b612a1b81612e8e565b82525050565b6000602082019050612a3660008301846121b1565b92915050565b6000602082019050612a5160008301846121c0565b92915050565b6000602082019050612a6c60008301846121cf565b92915050565b60006020820190508181036000830152612a8c81846121de565b905092915050565b60006020820190508181036000830152612aad81612217565b9050919050565b60006020820190508181036000830152612acd8161227d565b9050919050565b60006020820190508181036000830152612aed816122e3565b9050919050565b60006020820190508181036000830152612b0d81612349565b9050919050565b60006020820190508181036000830152612b2d81612389565b9050919050565b60006020820190508181036000830152612b4d816123ef565b9050919050565b60006020820190508181036000830152612b6d81612455565b9050919050565b60006020820190508181036000830152612b8d816124bb565b9050919050565b60006020820190508181036000830152612bad81612521565b9050919050565b60006020820190508181036000830152612bcd81612587565b9050919050565b60006020820190508181036000830152612bed816125c7565b9050919050565b60006020820190508181036000830152612c0d8161262d565b9050919050565b60006020820190508181036000830152612c2d81612693565b9050919050565b60006020820190508181036000830152612c4d816126f9565b9050919050565b60006020820190508181036000830152612c6d8161275f565b9050919050565b60006020820190508181036000830152612c8d816127c5565b9050919050565b60006020820190508181036000830152612cad8161282b565b9050919050565b60006020820190508181036000830152612ccd81612891565b9050919050565b60006020820190508181036000830152612ced816128f7565b9050919050565b60006020820190508181036000830152612d0d8161295d565b9050919050565b60006020820190508181036000830152612d2d8161299d565b9050919050565b6000602082019050612d496000830184612a03565b92915050565b6000602082019050612d646000830184612a12565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612d9182612e84565b9150612d9c83612e84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612dd157612dd0612f00565b5b828201905092915050565b6000612de782612e84565b9150612df283612e84565b925082821015612e0557612e04612f00565b5b828203905092915050565b6000612e1b82612e64565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612eb9578082015181840152602081019050612e9e565b83811115612ec8576000848401525b50505050565b60006002820490506001821680612ee657607f821691505b60208210811415612efa57612ef9612f2f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b612f7881612e10565b8114612f8357600080fd5b50565b612f8f81612e2e565b8114612f9a57600080fd5b50565b612fa681612e38565b8114612fb157600080fd5b50565b612fbd81612e84565b8114612fc857600080fd5b5056fea2646970667358221220ad6f2a2e34fb731d6816d82efc4138d09b0f8e5f58d68d218614a44c3c9a83eb64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d53913931461052d578063d547741f1461054b578063dd62ed3e14610567578063e63ab1e914610597576101c4565b8063a457c2d71461049d578063a9059cbb146104cd578063ca15c873146104fd576101c4565b80639010d07c116100d35780639010d07c1461040157806391d148541461043157806395d89b4114610461578063a217fddf1461047f576101c4565b806370a08231146103ab57806379cc6790146103db5780638456cb59146103f7576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461034b57806340c10f191461035557806342966c68146103715780635c975abb1461038d576101c4565b8063313ce567146102e157806336568abe146102ff578063395093511461031b576101c4565b806318160ddd116101a257806318160ddd1461024757806323b872dd14610265578063248a9ca3146102955780632f2ff15d146102c5576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063095ea7b314610217575b600080fd5b6101e360048036038101906101de919061215f565b6105b5565b6040516101f09190612a3c565b60405180910390f35b61020161062f565b60405161020e9190612a72565b60405180910390f35b610231600480360381019061022c9190612082565b6106c1565b60405161023e9190612a3c565b60405180910390f35b61024f6106df565b60405161025c9190612d34565b60405180910390f35b61027f600480360381019061027a9190612033565b6106e9565b60405161028c9190612a3c565b60405180910390f35b6102af60048036038101906102aa91906120be565b6107ea565b6040516102bc9190612a57565b60405180910390f35b6102df60048036038101906102da91906120e7565b610809565b005b6102e961083d565b6040516102f69190612d4f565b60405180910390f35b610319600480360381019061031491906120e7565b610846565b005b61033560048036038101906103309190612082565b61087a565b6040516103429190612a3c565b60405180910390f35b610353610926565b005b61036f600480360381019061036a9190612082565b6109a0565b005b61038b60048036038101906103869190612188565b610a1e565b005b610395610a32565b6040516103a29190612a3c565b60405180910390f35b6103c560048036038101906103c09190611fce565b610a49565b6040516103d29190612d34565b60405180910390f35b6103f560048036038101906103f09190612082565b610a92565b005b6103ff610b16565b005b61041b60048036038101906104169190612123565b610b90565b6040516104289190612a21565b60405180910390f35b61044b600480360381019061044691906120e7565b610bbf565b6040516104589190612a3c565b60405180910390f35b610469610c29565b6040516104769190612a72565b60405180910390f35b610487610cbb565b6040516104949190612a57565b60405180910390f35b6104b760048036038101906104b29190612082565b610cc2565b6040516104c49190612a3c565b60405180910390f35b6104e760048036038101906104e29190612082565b610db6565b6040516104f49190612a3c565b60405180910390f35b610517600480360381019061051291906120be565b610dd4565b6040516105249190612d34565b60405180910390f35b610535610df8565b6040516105429190612a57565b60405180910390f35b610565600480360381019061056091906120e7565b610e1c565b005b610581600480360381019061057c9190611ff7565b610e50565b60405161058e9190612d34565b60405180910390f35b61059f610ed7565b6040516105ac9190612a57565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610628575061062782610f39565b5b9050919050565b60606005805461063e90612ece565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90612ece565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b5050505050905090565b60006106d56106ce610fb3565b8484610fbb565b6001905092915050565b6000600454905090565b60006106f6848484611186565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610741610fb3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890612bd4565b60405180910390fd5b6107de856107cd610fb3565b85846107d99190612ddc565b610fbb565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6108138282611408565b6108388160016000858152602001908152602001600020610f0990919063ffffffff16565b505050565b60006012905090565b610850828261146e565b61087581600160008581526020019081526020016000206114f190919063ffffffff16565b505050565b600061091c610887610fb3565b848460036000610895610fb3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109179190612d86565b610fbb565b6001905092915050565b6109577f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610952610fb3565b610bbf565b610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d90612b34565b60405180910390fd5b61099e611521565b565b6109d17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109cc610fb3565b610bbf565b610a10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0790612bf4565b60405180910390fd5b610a1a82826115c3565b5050565b610a2f610a29610fb3565b82611718565b50565b6000600760009054906101000a900460ff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610aa583610aa0610fb3565b610e50565b905081811015610aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae190612c14565b60405180910390fd5b610b0783610af6610fb3565b8484610b029190612ddc565b610fbb565b610b118383611718565b505050565b610b477f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b42610fb3565b610bbf565b610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d90612c94565b60405180910390fd5b610b8e6118ee565b565b6000610bb7826001600086815260200190815260200160002061199190919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060068054610c3890612ece565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6490612ece565b8015610cb15780601f10610c8657610100808354040283529160200191610cb1565b820191906000526020600020905b815481529060010190602001808311610c9457829003601f168201915b5050505050905090565b6000801b81565b60008060036000610cd1610fb3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8590612cb4565b60405180910390fd5b610dab610d99610fb3565b858584610da69190612ddc565b610fbb565b600191505092915050565b6000610dca610dc3610fb3565b8484611186565b6001905092915050565b6000610df1600160008481526020019081526020016000206119ab565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610e2682826119c0565b610e4b81600160008581526020019081526020016000206114f190919063ffffffff16565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b610f058282611a26565b5050565b6000610f31836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611b06565b905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610fac5750610fab82611b76565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102290612c74565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561109b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109290612b54565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111799190612d34565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed90612c54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125d90612ab4565b60405180910390fd5b611271838383611be0565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef90612b74565b60405180910390fd5b81816113049190612ddc565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113969190612d86565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113fa9190612d34565b60405180910390a350505050565b611421611414836107ea565b61141c610fb3565b610bbf565b611460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145790612ad4565b60405180910390fd5b61146a8282611a26565b5050565b611476610fb3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114da90612cd4565b60405180910390fd5b6114ed8282611bf0565b5050565b6000611519836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611cd1565b905092915050565b611529610a32565b611568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155f90612af4565b60405180910390fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115ac610fb3565b6040516115b99190612a21565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162a90612cf4565b60405180910390fd5b61163f60008383611be0565b80600460008282546116519190612d86565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546116a79190612d86565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161170c9190612d34565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f90612c34565b60405180910390fd5b61179482600083611be0565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561181b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181290612b14565b60405180910390fd5b81816118279190612ddc565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600082825461187c9190612ddc565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118e19190612d34565b60405180910390a3505050565b6118f6610a32565b15611936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192d90612bb4565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861197a610fb3565b6040516119879190612a21565b60405180910390a1565b60006119a08360000183611e4f565b60001c905092915050565b60006119b982600001611ee9565b9050919050565b6119d96119cc836107ea565b6119d4610fb3565b610bbf565b611a18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0f90612b94565b60405180910390fd5b611a228282611bf0565b5050565b611a308282610bbf565b611b0257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611aa7610fb3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000611b128383611efa565b611b6b578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611b70565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611beb838383611f1d565b505050565b611bfa8282610bbf565b15611ccd57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611c72610fb3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008083600101600084815260200190815260200160002054905060008114611e43576000600182611d039190612ddc565b9050600060018660000180549050611d1b9190612ddc565b90506000866000018281548110611d5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110611da5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550838760010160008381526020019081526020016000208190555086600001805480611e07577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611e49565b60009150505b92915050565b600081836000018054905011611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190612a94565b60405180910390fd5b826000018281548110611ed6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b611f28838383611f75565b611f30610a32565b15611f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6790612d14565b60405180910390fd5b505050565b505050565b600081359050611f8981612f6f565b92915050565b600081359050611f9e81612f86565b92915050565b600081359050611fb381612f9d565b92915050565b600081359050611fc881612fb4565b92915050565b600060208284031215611fe057600080fd5b6000611fee84828501611f7a565b91505092915050565b6000806040838503121561200a57600080fd5b600061201885828601611f7a565b925050602061202985828601611f7a565b9150509250929050565b60008060006060848603121561204857600080fd5b600061205686828701611f7a565b935050602061206786828701611f7a565b925050604061207886828701611fb9565b9150509250925092565b6000806040838503121561209557600080fd5b60006120a385828601611f7a565b92505060206120b485828601611fb9565b9150509250929050565b6000602082840312156120d057600080fd5b60006120de84828501611f8f565b91505092915050565b600080604083850312156120fa57600080fd5b600061210885828601611f8f565b925050602061211985828601611f7a565b9150509250929050565b6000806040838503121561213657600080fd5b600061214485828601611f8f565b925050602061215585828601611fb9565b9150509250929050565b60006020828403121561217157600080fd5b600061217f84828501611fa4565b91505092915050565b60006020828403121561219a57600080fd5b60006121a884828501611fb9565b91505092915050565b6121ba81612e10565b82525050565b6121c981612e22565b82525050565b6121d881612e2e565b82525050565b60006121e982612d6a565b6121f38185612d75565b9350612203818560208601612e9b565b61220c81612f5e565b840191505092915050565b6000612224602283612d75565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061228a602383612d75565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122f0602f83612d75565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000612356601483612d75565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000612396602283612d75565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006123fc603983612d75565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f20756e7061757365000000000000006020830152604082019050919050565b6000612462602283612d75565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006124c8602683612d75565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061252e603083612d75565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000612594601083612d75565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006125d4602883612d75565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061263a603683612d75565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006020830152604082019050919050565b60006126a0602483612d75565b91507f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008301527f616e6365000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612706602183612d75565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061276c602583612d75565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127d2602483612d75565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612838603783612d75565b91507f45524332305072657365744d696e7465725061757365723a206d75737420686160008301527f76652070617573657220726f6c6520746f2070617573650000000000000000006020830152604082019050919050565b600061289e602583612d75565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612904602f83612d75565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600061296a601f83612d75565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b60006129aa602a83612d75565b91507f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008301527f696c6520706175736564000000000000000000000000000000000000000000006020830152604082019050919050565b612a0c81612e84565b82525050565b612a1b81612e8e565b82525050565b6000602082019050612a3660008301846121b1565b92915050565b6000602082019050612a5160008301846121c0565b92915050565b6000602082019050612a6c60008301846121cf565b92915050565b60006020820190508181036000830152612a8c81846121de565b905092915050565b60006020820190508181036000830152612aad81612217565b9050919050565b60006020820190508181036000830152612acd8161227d565b9050919050565b60006020820190508181036000830152612aed816122e3565b9050919050565b60006020820190508181036000830152612b0d81612349565b9050919050565b60006020820190508181036000830152612b2d81612389565b9050919050565b60006020820190508181036000830152612b4d816123ef565b9050919050565b60006020820190508181036000830152612b6d81612455565b9050919050565b60006020820190508181036000830152612b8d816124bb565b9050919050565b60006020820190508181036000830152612bad81612521565b9050919050565b60006020820190508181036000830152612bcd81612587565b9050919050565b60006020820190508181036000830152612bed816125c7565b9050919050565b60006020820190508181036000830152612c0d8161262d565b9050919050565b60006020820190508181036000830152612c2d81612693565b9050919050565b60006020820190508181036000830152612c4d816126f9565b9050919050565b60006020820190508181036000830152612c6d8161275f565b9050919050565b60006020820190508181036000830152612c8d816127c5565b9050919050565b60006020820190508181036000830152612cad8161282b565b9050919050565b60006020820190508181036000830152612ccd81612891565b9050919050565b60006020820190508181036000830152612ced816128f7565b9050919050565b60006020820190508181036000830152612d0d8161295d565b9050919050565b60006020820190508181036000830152612d2d8161299d565b9050919050565b6000602082019050612d496000830184612a03565b92915050565b6000602082019050612d646000830184612a12565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612d9182612e84565b9150612d9c83612e84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612dd157612dd0612f00565b5b828201905092915050565b6000612de782612e84565b9150612df283612e84565b925082821015612e0557612e04612f00565b5b828203905092915050565b6000612e1b82612e64565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015612eb9578082015181840152602081019050612e9e565b83811115612ec8576000848401525b50505050565b60006002820490506001821680612ee657607f821691505b60208210811415612efa57612ef9612f2f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b612f7881612e10565b8114612f8357600080fd5b50565b612f8f81612e2e565b8114612f9a57600080fd5b50565b612fa681612e38565b8114612fb157600080fd5b50565b612fbd81612e84565b8114612fc857600080fd5b5056fea2646970667358221220ad6f2a2e34fb731d6816d82efc4138d09b0f8e5f58d68d218614a44c3c9a83eb64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "824:1983:101:-:0;;;1243:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:4;1309:6;1973:5:91;1965;:13;;;;;;;;;;;;:::i;:::-;;1998:7;1988;:17;;;;;;;;;;;;:::i;:::-;;1898:114;;935:5:79;925:7;;:15;;;;;;;;;;;;;;;;;;1327:44:101::1;2408:4:2;1338:18:101::0;::::1;1358:12;:10;;;:12;;:::i;:::-;1327:10;;;:44;;:::i;:::-;1382:37;967:24;1406:12;:10;;;:12;;:::i;:::-;1382:10;;;:37;;:::i;:::-;1429;1035:24;1453:12;:10;;;:12;;:::i;:::-;1429:10;;;:37;;:::i;:::-;1243:230:::0;;824:1983;;586:96:122;639:7;665:10;658:17;;586:96;:::o;2922:166:3:-;3009:31;3026:4;3032:7;3009:16;;;;;:31;;:::i;:::-;3050;3073:7;3050:12;:18;3063:4;3050:18;;;;;;;;;;;:22;;;;;;:31;;;;:::i;:::-;;2922:166;;:::o;6519:110:2:-;6597:25;6608:4;6614:7;6597:10;;;:25;;:::i;:::-;6519:110;;:::o;6430:150:144:-;6500:4;6523:50;6528:3;:10;;6564:5;6548:23;;6540:32;;6523:4;;;:50;;:::i;:::-;6516:57;;6430:150;;;;:::o;6952:224:2:-;7026:22;7034:4;7040:7;7026;;;:22;;:::i;:::-;7021:149;;7096:4;7064:6;:12;7071:4;7064:12;;;;;;;;;;;:20;;:29;7085:7;7064:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7146:12;:10;;;:12;;:::i;:::-;7119:40;;7137:7;7119:40;;7131:4;7119:40;;;;;;;;;;7021:149;6952:224;;:::o;1632:404:144:-;1695:4;1716:21;1726:3;1731:5;1716:9;;;:21;;:::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;3867:137:2:-;3945:4;3968:6;:12;3975:4;3968:12;;;;;;;;;;;:20;;:29;3989:7;3968:29;;;;;;;;;;;;;;;;;;;;;;;;;3961:36;;3867:137;;;;:::o;3806:127:144:-;3879:4;3925:1;3902:3;:12;;:19;3915:5;3902:19;;;;;;;;;;;;:24;;3895:31;;3806:127;;;;:::o;824:1983:101:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:145:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:652::-;;;830:2;818:9;809:7;805:23;801:32;798:2;;;846:1;843;836:12;798:2;910:1;899:9;895:17;889:24;940:18;932:6;929:30;926:2;;;972:1;969;962:12;926:2;1000:74;1066:7;1057:6;1046:9;1042:22;1000:74;:::i;:::-;990:84;;860:224;1144:2;1133:9;1129:18;1123:25;1175:18;1167:6;1164:30;1161:2;;;1207:1;1204;1197:12;1161:2;1235:74;1301:7;1292:6;1281:9;1277:22;1235:74;:::i;:::-;1225:84;;1094:225;788:538;;;;;:::o;1332:283::-;;1398:2;1392:9;1382:19;;1440:4;1432:6;1428:17;1547:6;1535:10;1532:22;1511:18;1499:10;1496:34;1493:62;1490:2;;;1558:18;;:::i;:::-;1490:2;1598:10;1594:2;1587:22;1372:243;;;;:::o;1621:332::-;;1773:18;1765:6;1762:30;1759:2;;;1795:18;;:::i;:::-;1759:2;1880:4;1876:9;1869:4;1861:6;1857:17;1853:33;1845:41;;1941:4;1935;1931:15;1923:23;;1688:265;;;:::o;1959:307::-;2027:1;2037:113;2051:6;2048:1;2045:13;2037:113;;;2136:1;2131:3;2127:11;2121:18;2117:1;2112:3;2108:11;2101:39;2073:2;2070:1;2066:10;2061:15;;2037:113;;;2168:6;2165:1;2162:13;2159:2;;;2248:1;2239:6;2234:3;2230:16;2223:27;2159:2;2008:258;;;;:::o;2272:320::-;;2353:1;2347:4;2343:12;2333:22;;2400:1;2394:4;2390:12;2421:18;2411:2;;2477:4;2469:6;2465:17;2455:27;;2411:2;2539;2531:6;2528:14;2508:18;2505:38;2502:2;;;2558:18;;:::i;:::-;2502:2;2323:269;;;;:::o;2598:180::-;2646:77;2643:1;2636:88;2743:4;2740:1;2733:15;2767:4;2764:1;2757:15;2784:180;2832:77;2829:1;2822:88;2929:4;2926:1;2919:15;2953:4;2950:1;2943:15;824:1983:101;;;;;;;",
  "deployedSourceMap": "824:1983:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:224:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:98:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3165:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4807:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4185:121:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:162:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3014:91:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2663:171:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5616:212:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2443:175:101;;;:::i;:::-;;1662:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;487:89:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1042:84:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3329:125:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;882:327:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2067:169:101;;;:::i;:::-;;1626:143:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3867:137:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:102:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2363:49:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6315:371:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3657:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1937:132:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:62:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:167:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3887:149:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;997:62:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:224:3;902:4;940:42;925:57;;;:11;:57;;;;:109;;;;998:36;1022:11;998:23;:36::i;:::-;925:109;918:116;;817:224;;;:::o;2077:98:91:-;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;4282:12;:10;:12::i;:::-;4296:7;4305:6;4273:8;:39::i;:::-;4329:4;4322:11;;4174:166;;;;:::o;3165:106::-;3226:7;3252:12;;3245:19;;3165:106;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;4976:24;5003:11;:19;5015:6;5003:19;;;;;;;;;;;;;;;:33;5023:12;:10;:12::i;:::-;5003:33;;;;;;;;;;;;;;;;4976:60;;5074:6;5054:16;:26;;5046:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5135:57;5144:6;5152:12;:10;:12::i;:::-;5185:6;5166:16;:25;;;;:::i;:::-;5135:8;:57::i;:::-;5210:4;5203:11;;;4807:414;;;;;:::o;4185:121:2:-;4251:7;4277:6;:12;4284:4;4277:12;;;;;;;;;;;:22;;;4270:29;;4185:121;;;:::o;2156:162:3:-;2240:30;2256:4;2262:7;2240:15;:30::i;:::-;2280:31;2303:7;2280:12;:18;2293:4;2280:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2156:162;;:::o;3014:91:91:-;3072:5;3096:2;3089:9;;3014:91;:::o;2663:171:3:-;2750:33;2769:4;2775:7;2750:18;:33::i;:::-;2793:34;2819:7;2793:12;:18;2806:4;2793:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2663:171;;:::o;5616:212:91:-;5704:4;5720:80;5729:12;:10;:12::i;:::-;5743:7;5789:10;5752:11;:25;5764:12;:10;:12::i;:::-;5752:25;;;;;;;;;;;;;;;:34;5778:7;5752:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5720:8;:80::i;:::-;5817:4;5810:11;;5616:212;;;;:::o;2443:175:101:-;2495:34;1035:24;2516:12;:10;:12::i;:::-;2495:7;:34::i;:::-;2487:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;2601:10;:8;:10::i;:::-;2443:175::o;1662:202::-;1737:34;967:24;1758:12;:10;:12::i;:::-;1737:7;:34::i;:::-;1729:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;1840:17;1846:2;1850:6;1840:5;:17::i;:::-;1662:202;;:::o;487:89:93:-;542:27;548:12;:10;:12::i;:::-;562:6;542:5;:27::i;:::-;487:89;:::o;1042:84:79:-;1089:4;1112:7;;;;;;;;;;;1105:14;;1042:84;:::o;3329:125:91:-;3403:7;3429:9;:18;3439:7;3429:18;;;;;;;;;;;;;;;;3422:25;;3329:125;;;:::o;882:327:93:-;958:24;985:32;995:7;1004:12;:10;:12::i;:::-;985:9;:32::i;:::-;958:59;;1055:6;1035:16;:26;;1027:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1112:58;1121:7;1130:12;:10;:12::i;:::-;1163:6;1144:16;:25;;;;:::i;:::-;1112:8;:58::i;:::-;1180:22;1186:7;1195:6;1180:5;:22::i;:::-;882:327;;;:::o;2067:169:101:-;2117:34;1035:24;2138:12;:10;:12::i;:::-;2117:7;:34::i;:::-;2109:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2221:8;:6;:8::i;:::-;2067:169::o;1626:143:3:-;1708:7;1734:28;1756:5;1734:12;:18;1747:4;1734:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1727:35;;1626:143;;;;:::o;3867:137:2:-;3945:4;3968:6;:12;3975:4;3968:12;;;;;;;;;;;:20;;:29;3989:7;3968:29;;;;;;;;;;;;;;;;;;;;;;;;;3961:36;;3867:137;;;;:::o;2288:102:91:-;2344:13;2376:7;2369:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:102;:::o;2363:49:2:-;2408:4;2363:49;;;:::o;6315:371:91:-;6408:4;6424:24;6451:11;:25;6463:12;:10;:12::i;:::-;6451:25;;;;;;;;;;;;;;;:34;6477:7;6451:34;;;;;;;;;;;;;;;;6424:61;;6523:15;6503:16;:35;;6495:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6590:67;6599:12;:10;:12::i;:::-;6613:7;6641:15;6622:16;:34;;;;:::i;:::-;6590:8;:67::i;:::-;6675:4;6668:11;;;6315:371;;;;:::o;3657:172::-;3743:4;3759:42;3769:12;:10;:12::i;:::-;3783:9;3794:6;3759:9;:42::i;:::-;3818:4;3811:11;;3657:172;;;;:::o;1937:132:3:-;2009:7;2035:27;:12;:18;2048:4;2035:18;;;;;;;;;;;:25;:27::i;:::-;2028:34;;1937:132;;;:::o;929:62:101:-;967:24;929:62;:::o;2406:167:3:-;2491:31;2508:4;2514:7;2491:16;:31::i;:::-;2532:34;2558:7;2532:12;:18;2545:4;2532:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2406:167;;:::o;3887:149:91:-;3976:7;4002:11;:18;4014:5;4002:18;;;;;;;;;;;;;;;:27;4021:7;4002:27;;;;;;;;;;;;;;;;3995:34;;3887:149;;;;:::o;997:62:101:-;1035:24;997:62;:::o;6519:110:2:-;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6430:150:144:-;6500:4;6523:50;6528:3;:10;;6564:5;6548:23;;6540:32;;6523:4;:50::i;:::-;6516:57;;6430:150;;;;:::o;3566:214:2:-;3651:4;3689:32;3674:47;;;:11;:47;;;;:99;;;;3737:36;3761:11;3737:23;:36::i;:::-;3674:99;3667:106;;3566:214;;;:::o;586:96:122:-;639:7;665:10;658:17;;586:96;:::o;9579:340:91:-;9697:1;9680:19;;:5;:19;;;;9672:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9777:1;9758:21;;:7;:21;;;;9750:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9859:6;9829:11;:18;9841:5;9829:18;;;;;;;;;;;;;;;:27;9848:7;9829:27;;;;;;;;;;;;;;;:36;;;;9896:7;9880:32;;9889:5;9880:32;;;9905:6;9880:32;;;;;;:::i;:::-;;;;;;;;9579:340;;;:::o;7160:592::-;7283:1;7265:20;;:6;:20;;;;7257:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7366:1;7345:23;;:9;:23;;;;7337:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;7477:21;7501:9;:17;7511:6;7501:17;;;;;;;;;;;;;;;;7477:41;;7553:6;7536:13;:23;;7528:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7648:6;7632:13;:22;;;;:::i;:::-;7612:9;:17;7622:6;7612:17;;;;;;;;;;;;;;;:42;;;;7688:6;7664:9;:20;7674:9;7664:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7727:9;7710:35;;7719:6;7710:35;;;7738:6;7710:35;;;;;;:::i;:::-;;;;;;;;7160:592;;;;:::o;4556:228:2:-;4648:41;4656:18;4669:4;4656:12;:18::i;:::-;4676:12;:10;:12::i;:::-;4648:7;:41::i;:::-;4640:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;5740:214::-;5846:12;:10;:12::i;:::-;5835:23;;:7;:23;;;5827:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5921:26;5933:4;5939:7;5921:11;:26::i;:::-;5740:214;;:::o;6748:156:144:-;6821:4;6844:53;6852:3;:10;;6888:5;6872:23;;6864:32;;6844:7;:53::i;:::-;6837:60;;6748:156;;;;:::o;2054:117:79:-;1621:8;:6;:8::i;:::-;1613:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2122:5:::1;2112:7;;:15;;;;;;;;;;;;;;;;;;2142:22;2151:12;:10;:12::i;:::-;2142:22;;;;;;:::i;:::-;;;;;;;;2054:117::o:0;8023:330:91:-;8125:1;8106:21;;:7;:21;;;;8098:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;;;;;8288:6;8266:9;:18;8276:7;8266:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8330:7;8309:37;;8326:1;8309:37;;;8339:6;8309:37;;;;;;:::i;:::-;;;;;;;;8023:330;;:::o;8673:483::-;8775:1;8756:21;;:7;:21;;;;8748:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8826:49;8847:7;8864:1;8868:6;8826:20;:49::i;:::-;8886:22;8911:9;:18;8921:7;8911:18;;;;;;;;;;;;;;;;8886:43;;8965:6;8947:14;:24;;8939:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9058:6;9041:14;:23;;;;:::i;:::-;9020:9;:18;9030:7;9020:18;;;;;;;;;;;;;;;:44;;;;9090:6;9074:12;;:22;;;;;;;:::i;:::-;;;;;;;;9138:1;9112:37;;9121:7;9112:37;;;9142:6;9112:37;;;;;;:::i;:::-;;;;;;;;8673:483;;;:::o;1807:115:79:-;1356:8;:6;:8::i;:::-;1355:9;1347:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1876:4:::1;1866:7;;:14;;;;;;;;;;;;;;;;;;1895:20;1902:12;:10;:12::i;:::-;1895:20;;;;;;:::i;:::-;;;;;;;;1807:115::o:0;7678:156:144:-;7752:7;7802:22;7806:3;:10;;7818:5;7802:3;:22::i;:::-;7794:31;;7771:56;;7678:156;;;;:::o;7231:115::-;7294:7;7320:19;7328:3;:10;;7320:7;:19::i;:::-;7313:26;;7231:115;;;:::o;5018:231:2:-;5111:41;5119:18;5132:4;5119:12;:18::i;:::-;5139:12;:10;:12::i;:::-;5111:7;:41::i;:::-;5103:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;5216:26;5228:4;5234:7;5216:11;:26::i;:::-;5018:231;;:::o;6952:224::-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7096:4;7064:6;:12;7071:4;7064:12;;;;;;;;;;;:20;;:29;7085:7;7064:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7146:12;:10;:12::i;:::-;7119:40;;7137:7;7119:40;;7131:4;7119:40;;;;;;;;;;7021:149;6952:224;;:::o;1632:404:144:-;1695:4;1716:21;1726:3;1731:5;1716:9;:21::i;:::-;1711:319;;1753:3;:11;;1770:5;1753:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1933:3;:11;;:18;;;;1911:3;:12;;:19;1924:5;1911:19;;;;;;;;;;;:40;;;;1972:4;1965:11;;;;1711:319;2014:5;2007:12;;1632:404;;;;;:::o;763:155:132:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;2624:181:101:-;2754:44;2781:4;2787:2;2791:6;2754:26;:44::i;:::-;2624:181;;;:::o;7182:225:2:-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:6;:12;7301:4;7294:12;;;;;;;;;;;:20;;:29;7315:7;7294:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7377:12;:10;:12::i;:::-;7350:40;;7368:7;7350:40;;7362:4;7350:40;;;;;;;;;;7252:149;7182:225;;:::o;2204:1521:144:-;2270:4;2386:18;2407:3;:12;;:19;2420:5;2407:19;;;;;;;;;;;;2386:40;;2455:1;2441:10;:15;2437:1282;;2798:21;2835:1;2822:10;:14;;;;:::i;:::-;2798:38;;2850:17;2891:1;2870:3;:11;;:18;;;;:22;;;;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;;;;;;;;;;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;;;;;;;;;;;;;;;;;;:38;;;;3396:10;3370:3;:12;;:23;3383:9;3370:23;;;;;;;;;;;:36;;;;3528:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3620:3;:12;;:19;3633:5;3620:19;;;;;;;;;;;3613:26;;;3661:4;3654:11;;;;;;;;2437:1282;3703:5;3696:12;;;2204:1521;;;;;:::o;4453:201::-;4520:7;4568:5;4547:3;:11;;:18;;;;:26;4539:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4629:3;:11;;4641:5;4629:18;;;;;;;;;;;;;;;;;;;;;;;;4622:25;;4453:201;;;;:::o;4014:107::-;4070:7;4096:3;:11;;:18;;;;4089:25;;4014:107;;;:::o;3806:127::-;3879:4;3925:1;3902:3;:12;;:19;3915:5;3902:19;;;;;;;;;;;;:24;;3895:31;;3806:127;;;;:::o;589:234:95:-;697:44;724:4;730:2;734:6;697:26;:44::i;:::-;761:8;:6;:8::i;:::-;760:9;752:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;589:234;;;:::o;10506:92:91:-;;;;:::o;7:139:145:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:137::-;;380:6;367:20;358:29;;396:32;422:5;396:32;:::i;:::-;348:86;;;;:::o;440:139::-;;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:262::-;;693:2;681:9;672:7;668:23;664:32;661:2;;;709:1;706;699:12;661:2;752:1;777:53;822:7;813:6;802:9;798:22;777:53;:::i;:::-;767:63;;723:117;651:196;;;;:::o;853:407::-;;;978:2;966:9;957:7;953:23;949:32;946:2;;;994:1;991;984:12;946:2;1037:1;1062:53;1107:7;1098:6;1087:9;1083:22;1062:53;:::i;:::-;1052:63;;1008:117;1164:2;1190:53;1235:7;1226:6;1215:9;1211:22;1190:53;:::i;:::-;1180:63;;1135:118;936:324;;;;;:::o;1266:552::-;;;;1408:2;1396:9;1387:7;1383:23;1379:32;1376:2;;;1424:1;1421;1414:12;1376:2;1467:1;1492:53;1537:7;1528:6;1517:9;1513:22;1492:53;:::i;:::-;1482:63;;1438:117;1594:2;1620:53;1665:7;1656:6;1645:9;1641:22;1620:53;:::i;:::-;1610:63;;1565:118;1722:2;1748:53;1793:7;1784:6;1773:9;1769:22;1748:53;:::i;:::-;1738:63;;1693:118;1366:452;;;;;:::o;1824:407::-;;;1949:2;1937:9;1928:7;1924:23;1920:32;1917:2;;;1965:1;1962;1955:12;1917:2;2008:1;2033:53;2078:7;2069:6;2058:9;2054:22;2033:53;:::i;:::-;2023:63;;1979:117;2135:2;2161:53;2206:7;2197:6;2186:9;2182:22;2161:53;:::i;:::-;2151:63;;2106:118;1907:324;;;;;:::o;2237:262::-;;2345:2;2333:9;2324:7;2320:23;2316:32;2313:2;;;2361:1;2358;2351:12;2313:2;2404:1;2429:53;2474:7;2465:6;2454:9;2450:22;2429:53;:::i;:::-;2419:63;;2375:117;2303:196;;;;:::o;2505:407::-;;;2630:2;2618:9;2609:7;2605:23;2601:32;2598:2;;;2646:1;2643;2636:12;2598:2;2689:1;2714:53;2759:7;2750:6;2739:9;2735:22;2714:53;:::i;:::-;2704:63;;2660:117;2816:2;2842:53;2887:7;2878:6;2867:9;2863:22;2842:53;:::i;:::-;2832:63;;2787:118;2588:324;;;;;:::o;2918:407::-;;;3043:2;3031:9;3022:7;3018:23;3014:32;3011:2;;;3059:1;3056;3049:12;3011:2;3102:1;3127:53;3172:7;3163:6;3152:9;3148:22;3127:53;:::i;:::-;3117:63;;3073:117;3229:2;3255:53;3300:7;3291:6;3280:9;3276:22;3255:53;:::i;:::-;3245:63;;3200:118;3001:324;;;;;:::o;3331:260::-;;3438:2;3426:9;3417:7;3413:23;3409:32;3406:2;;;3454:1;3451;3444:12;3406:2;3497:1;3522:52;3566:7;3557:6;3546:9;3542:22;3522:52;:::i;:::-;3512:62;;3468:116;3396:195;;;;:::o;3597:262::-;;3705:2;3693:9;3684:7;3680:23;3676:32;3673:2;;;3721:1;3718;3711:12;3673:2;3764:1;3789:53;3834:7;3825:6;3814:9;3810:22;3789:53;:::i;:::-;3779:63;;3735:117;3663:196;;;;:::o;3865:118::-;3952:24;3970:5;3952:24;:::i;:::-;3947:3;3940:37;3930:53;;:::o;3989:109::-;4070:21;4085:5;4070:21;:::i;:::-;4065:3;4058:34;4048:50;;:::o;4104:118::-;4191:24;4209:5;4191:24;:::i;:::-;4186:3;4179:37;4169:53;;:::o;4228:364::-;;4344:39;4377:5;4344:39;:::i;:::-;4399:71;4463:6;4458:3;4399:71;:::i;:::-;4392:78;;4479:52;4524:6;4519:3;4512:4;4505:5;4501:16;4479:52;:::i;:::-;4556:29;4578:6;4556:29;:::i;:::-;4551:3;4547:39;4540:46;;4320:272;;;;;:::o;4598:366::-;;4761:67;4825:2;4820:3;4761:67;:::i;:::-;4754:74;;4858:34;4854:1;4849:3;4845:11;4838:55;4924:4;4919:2;4914:3;4910:12;4903:26;4955:2;4950:3;4946:12;4939:19;;4744:220;;;:::o;4970:367::-;;5133:67;5197:2;5192:3;5133:67;:::i;:::-;5126:74;;5230:34;5226:1;5221:3;5217:11;5210:55;5296:5;5291:2;5286:3;5282:12;5275:27;5328:2;5323:3;5319:12;5312:19;;5116:221;;;:::o;5343:379::-;;5506:67;5570:2;5565:3;5506:67;:::i;:::-;5499:74;;5603:34;5599:1;5594:3;5590:11;5583:55;5669:17;5664:2;5659:3;5655:12;5648:39;5713:2;5708:3;5704:12;5697:19;;5489:233;;;:::o;5728:318::-;;5891:67;5955:2;5950:3;5891:67;:::i;:::-;5884:74;;5988:22;5984:1;5979:3;5975:11;5968:43;6037:2;6032:3;6028:12;6021:19;;5874:172;;;:::o;6052:366::-;;6215:67;6279:2;6274:3;6215:67;:::i;:::-;6208:74;;6312:34;6308:1;6303:3;6299:11;6292:55;6378:4;6373:2;6368:3;6364:12;6357:26;6409:2;6404:3;6400:12;6393:19;;6198:220;;;:::o;6424:389::-;;6587:67;6651:2;6646:3;6587:67;:::i;:::-;6580:74;;6684:34;6680:1;6675:3;6671:11;6664:55;6750:27;6745:2;6740:3;6736:12;6729:49;6804:2;6799:3;6795:12;6788:19;;6570:243;;;:::o;6819:366::-;;6982:67;7046:2;7041:3;6982:67;:::i;:::-;6975:74;;7079:34;7075:1;7070:3;7066:11;7059:55;7145:4;7140:2;7135:3;7131:12;7124:26;7176:2;7171:3;7167:12;7160:19;;6965:220;;;:::o;7191:370::-;;7354:67;7418:2;7413:3;7354:67;:::i;:::-;7347:74;;7451:34;7447:1;7442:3;7438:11;7431:55;7517:8;7512:2;7507:3;7503:12;7496:30;7552:2;7547:3;7543:12;7536:19;;7337:224;;;:::o;7567:380::-;;7730:67;7794:2;7789:3;7730:67;:::i;:::-;7723:74;;7827:34;7823:1;7818:3;7814:11;7807:55;7893:18;7888:2;7883:3;7879:12;7872:40;7938:2;7933:3;7929:12;7922:19;;7713:234;;;:::o;7953:314::-;;8116:67;8180:2;8175:3;8116:67;:::i;:::-;8109:74;;8213:18;8209:1;8204:3;8200:11;8193:39;8258:2;8253:3;8249:12;8242:19;;8099:168;;;:::o;8273:372::-;;8436:67;8500:2;8495:3;8436:67;:::i;:::-;8429:74;;8533:34;8529:1;8524:3;8520:11;8513:55;8599:10;8594:2;8589:3;8585:12;8578:32;8636:2;8631:3;8627:12;8620:19;;8419:226;;;:::o;8651:386::-;;8814:67;8878:2;8873:3;8814:67;:::i;:::-;8807:74;;8911:34;8907:1;8902:3;8898:11;8891:55;8977:24;8972:2;8967:3;8963:12;8956:46;9028:2;9023:3;9019:12;9012:19;;8797:240;;;:::o;9043:368::-;;9206:67;9270:2;9265:3;9206:67;:::i;:::-;9199:74;;9303:34;9299:1;9294:3;9290:11;9283:55;9369:6;9364:2;9359:3;9355:12;9348:28;9402:2;9397:3;9393:12;9386:19;;9189:222;;;:::o;9417:365::-;;9580:67;9644:2;9639:3;9580:67;:::i;:::-;9573:74;;9677:34;9673:1;9668:3;9664:11;9657:55;9743:3;9738:2;9733:3;9729:12;9722:25;9773:2;9768:3;9764:12;9757:19;;9563:219;;;:::o;9788:369::-;;9951:67;10015:2;10010:3;9951:67;:::i;:::-;9944:74;;10048:34;10044:1;10039:3;10035:11;10028:55;10114:7;10109:2;10104:3;10100:12;10093:29;10148:2;10143:3;10139:12;10132:19;;9934:223;;;:::o;10163:368::-;;10326:67;10390:2;10385:3;10326:67;:::i;:::-;10319:74;;10423:34;10419:1;10414:3;10410:11;10403:55;10489:6;10484:2;10479:3;10475:12;10468:28;10522:2;10517:3;10513:12;10506:19;;10309:222;;;:::o;10537:387::-;;10700:67;10764:2;10759:3;10700:67;:::i;:::-;10693:74;;10797:34;10793:1;10788:3;10784:11;10777:55;10863:25;10858:2;10853:3;10849:12;10842:47;10915:2;10910:3;10906:12;10899:19;;10683:241;;;:::o;10930:369::-;;11093:67;11157:2;11152:3;11093:67;:::i;:::-;11086:74;;11190:34;11186:1;11181:3;11177:11;11170:55;11256:7;11251:2;11246:3;11242:12;11235:29;11290:2;11285:3;11281:12;11274:19;;11076:223;;;:::o;11305:379::-;;11468:67;11532:2;11527:3;11468:67;:::i;:::-;11461:74;;11565:34;11561:1;11556:3;11552:11;11545:55;11631:17;11626:2;11621:3;11617:12;11610:39;11675:2;11670:3;11666:12;11659:19;;11451:233;;;:::o;11690:329::-;;11853:67;11917:2;11912:3;11853:67;:::i;:::-;11846:74;;11950:33;11946:1;11941:3;11937:11;11930:54;12010:2;12005:3;12001:12;11994:19;;11836:183;;;:::o;12025:374::-;;12188:67;12252:2;12247:3;12188:67;:::i;:::-;12181:74;;12285:34;12281:1;12276:3;12272:11;12265:55;12351:12;12346:2;12341:3;12337:12;12330:34;12390:2;12385:3;12381:12;12374:19;;12171:228;;;:::o;12405:118::-;12492:24;12510:5;12492:24;:::i;:::-;12487:3;12480:37;12470:53;;:::o;12529:112::-;12612:22;12628:5;12612:22;:::i;:::-;12607:3;12600:35;12590:51;;:::o;12647:222::-;;12778:2;12767:9;12763:18;12755:26;;12791:71;12859:1;12848:9;12844:17;12835:6;12791:71;:::i;:::-;12745:124;;;;:::o;12875:210::-;;13000:2;12989:9;12985:18;12977:26;;13013:65;13075:1;13064:9;13060:17;13051:6;13013:65;:::i;:::-;12967:118;;;;:::o;13091:222::-;;13222:2;13211:9;13207:18;13199:26;;13235:71;13303:1;13292:9;13288:17;13279:6;13235:71;:::i;:::-;13189:124;;;;:::o;13319:313::-;;13470:2;13459:9;13455:18;13447:26;;13519:9;13513:4;13509:20;13505:1;13494:9;13490:17;13483:47;13547:78;13620:4;13611:6;13547:78;:::i;:::-;13539:86;;13437:195;;;;:::o;13638:419::-;;13842:2;13831:9;13827:18;13819:26;;13891:9;13885:4;13881:20;13877:1;13866:9;13862:17;13855:47;13919:131;14045:4;13919:131;:::i;:::-;13911:139;;13809:248;;;:::o;14063:419::-;;14267:2;14256:9;14252:18;14244:26;;14316:9;14310:4;14306:20;14302:1;14291:9;14287:17;14280:47;14344:131;14470:4;14344:131;:::i;:::-;14336:139;;14234:248;;;:::o;14488:419::-;;14692:2;14681:9;14677:18;14669:26;;14741:9;14735:4;14731:20;14727:1;14716:9;14712:17;14705:47;14769:131;14895:4;14769:131;:::i;:::-;14761:139;;14659:248;;;:::o;14913:419::-;;15117:2;15106:9;15102:18;15094:26;;15166:9;15160:4;15156:20;15152:1;15141:9;15137:17;15130:47;15194:131;15320:4;15194:131;:::i;:::-;15186:139;;15084:248;;;:::o;15338:419::-;;15542:2;15531:9;15527:18;15519:26;;15591:9;15585:4;15581:20;15577:1;15566:9;15562:17;15555:47;15619:131;15745:4;15619:131;:::i;:::-;15611:139;;15509:248;;;:::o;15763:419::-;;15967:2;15956:9;15952:18;15944:26;;16016:9;16010:4;16006:20;16002:1;15991:9;15987:17;15980:47;16044:131;16170:4;16044:131;:::i;:::-;16036:139;;15934:248;;;:::o;16188:419::-;;16392:2;16381:9;16377:18;16369:26;;16441:9;16435:4;16431:20;16427:1;16416:9;16412:17;16405:47;16469:131;16595:4;16469:131;:::i;:::-;16461:139;;16359:248;;;:::o;16613:419::-;;16817:2;16806:9;16802:18;16794:26;;16866:9;16860:4;16856:20;16852:1;16841:9;16837:17;16830:47;16894:131;17020:4;16894:131;:::i;:::-;16886:139;;16784:248;;;:::o;17038:419::-;;17242:2;17231:9;17227:18;17219:26;;17291:9;17285:4;17281:20;17277:1;17266:9;17262:17;17255:47;17319:131;17445:4;17319:131;:::i;:::-;17311:139;;17209:248;;;:::o;17463:419::-;;17667:2;17656:9;17652:18;17644:26;;17716:9;17710:4;17706:20;17702:1;17691:9;17687:17;17680:47;17744:131;17870:4;17744:131;:::i;:::-;17736:139;;17634:248;;;:::o;17888:419::-;;18092:2;18081:9;18077:18;18069:26;;18141:9;18135:4;18131:20;18127:1;18116:9;18112:17;18105:47;18169:131;18295:4;18169:131;:::i;:::-;18161:139;;18059:248;;;:::o;18313:419::-;;18517:2;18506:9;18502:18;18494:26;;18566:9;18560:4;18556:20;18552:1;18541:9;18537:17;18530:47;18594:131;18720:4;18594:131;:::i;:::-;18586:139;;18484:248;;;:::o;18738:419::-;;18942:2;18931:9;18927:18;18919:26;;18991:9;18985:4;18981:20;18977:1;18966:9;18962:17;18955:47;19019:131;19145:4;19019:131;:::i;:::-;19011:139;;18909:248;;;:::o;19163:419::-;;19367:2;19356:9;19352:18;19344:26;;19416:9;19410:4;19406:20;19402:1;19391:9;19387:17;19380:47;19444:131;19570:4;19444:131;:::i;:::-;19436:139;;19334:248;;;:::o;19588:419::-;;19792:2;19781:9;19777:18;19769:26;;19841:9;19835:4;19831:20;19827:1;19816:9;19812:17;19805:47;19869:131;19995:4;19869:131;:::i;:::-;19861:139;;19759:248;;;:::o;20013:419::-;;20217:2;20206:9;20202:18;20194:26;;20266:9;20260:4;20256:20;20252:1;20241:9;20237:17;20230:47;20294:131;20420:4;20294:131;:::i;:::-;20286:139;;20184:248;;;:::o;20438:419::-;;20642:2;20631:9;20627:18;20619:26;;20691:9;20685:4;20681:20;20677:1;20666:9;20662:17;20655:47;20719:131;20845:4;20719:131;:::i;:::-;20711:139;;20609:248;;;:::o;20863:419::-;;21067:2;21056:9;21052:18;21044:26;;21116:9;21110:4;21106:20;21102:1;21091:9;21087:17;21080:47;21144:131;21270:4;21144:131;:::i;:::-;21136:139;;21034:248;;;:::o;21288:419::-;;21492:2;21481:9;21477:18;21469:26;;21541:9;21535:4;21531:20;21527:1;21516:9;21512:17;21505:47;21569:131;21695:4;21569:131;:::i;:::-;21561:139;;21459:248;;;:::o;21713:419::-;;21917:2;21906:9;21902:18;21894:26;;21966:9;21960:4;21956:20;21952:1;21941:9;21937:17;21930:47;21994:131;22120:4;21994:131;:::i;:::-;21986:139;;21884:248;;;:::o;22138:419::-;;22342:2;22331:9;22327:18;22319:26;;22391:9;22385:4;22381:20;22377:1;22366:9;22362:17;22355:47;22419:131;22545:4;22419:131;:::i;:::-;22411:139;;22309:248;;;:::o;22563:222::-;;22694:2;22683:9;22679:18;22671:26;;22707:71;22775:1;22764:9;22760:17;22751:6;22707:71;:::i;:::-;22661:124;;;;:::o;22791:214::-;;22918:2;22907:9;22903:18;22895:26;;22931:67;22995:1;22984:9;22980:17;22971:6;22931:67;:::i;:::-;22885:120;;;;:::o;23011:99::-;;23097:5;23091:12;23081:22;;23070:40;;;:::o;23116:169::-;;23234:6;23229:3;23222:19;23274:4;23269:3;23265:14;23250:29;;23212:73;;;;:::o;23291:305::-;;23350:20;23368:1;23350:20;:::i;:::-;23345:25;;23384:20;23402:1;23384:20;:::i;:::-;23379:25;;23538:1;23470:66;23466:74;23463:1;23460:81;23457:2;;;23544:18;;:::i;:::-;23457:2;23588:1;23585;23581:9;23574:16;;23335:261;;;;:::o;23602:191::-;;23662:20;23680:1;23662:20;:::i;:::-;23657:25;;23696:20;23714:1;23696:20;:::i;:::-;23691:25;;23735:1;23732;23729:8;23726:2;;;23740:18;;:::i;:::-;23726:2;23785:1;23782;23778:9;23770:17;;23647:146;;;;:::o;23799:96::-;;23865:24;23883:5;23865:24;:::i;:::-;23854:35;;23844:51;;;:::o;23901:90::-;;23978:5;23971:13;23964:21;23953:32;;23943:48;;;:::o;23997:77::-;;24063:5;24052:16;;24042:32;;;:::o;24080:149::-;;24156:66;24149:5;24145:78;24134:89;;24124:105;;;:::o;24235:126::-;;24312:42;24305:5;24301:54;24290:65;;24280:81;;;:::o;24367:77::-;;24433:5;24422:16;;24412:32;;;:::o;24450:86::-;;24525:4;24518:5;24514:16;24503:27;;24493:43;;;:::o;24542:307::-;24610:1;24620:113;24634:6;24631:1;24628:13;24620:113;;;24719:1;24714:3;24710:11;24704:18;24700:1;24695:3;24691:11;24684:39;24656:2;24653:1;24649:10;24644:15;;24620:113;;;24751:6;24748:1;24745:13;24742:2;;;24831:1;24822:6;24817:3;24813:16;24806:27;24742:2;24591:258;;;;:::o;24855:320::-;;24936:1;24930:4;24926:12;24916:22;;24983:1;24977:4;24973:12;25004:18;24994:2;;25060:4;25052:6;25048:17;25038:27;;24994:2;25122;25114:6;25111:14;25091:18;25088:38;25085:2;;;25141:18;;:::i;:::-;25085:2;24906:269;;;;:::o;25181:180::-;25229:77;25226:1;25219:88;25326:4;25323:1;25316:15;25350:4;25347:1;25340:15;25367:180;25415:77;25412:1;25405:88;25512:4;25509:1;25502:15;25536:4;25533:1;25526:15;25553:102;;25645:2;25641:7;25636:2;25629:5;25625:14;25621:28;25611:38;;25601:54;;;:::o;25661:122::-;25734:24;25752:5;25734:24;:::i;:::-;25727:5;25724:35;25714:2;;25773:1;25770;25763:12;25714:2;25704:79;:::o;25789:122::-;25862:24;25880:5;25862:24;:::i;:::-;25855:5;25852:35;25842:2;;25901:1;25898;25891:12;25842:2;25832:79;:::o;25917:120::-;25989:23;26006:5;25989:23;:::i;:::-;25982:5;25979:34;25969:2;;26027:1;26024;26017:12;25969:2;25959:78;:::o;26043:122::-;26116:24;26134:5;26116:24;:::i;:::-;26109:5;26106:35;26096:2;;26155:1;26152;26145:12;26096:2;26086:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../extensions/ERC20Burnable.sol\";\nimport \"../extensions/ERC20Pausable.sol\";\nimport \"../../../access/AccessControlEnumerable.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC20PresetMinterPauser is Context, AccessControlEnumerable, ERC20Burnable, ERC20Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}\n",
  "sourcePath": "E:/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
  "ast": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
    "exportedSymbols": {
      "AccessControl": [
        2649
      ],
      "AccessControlEnumerable": [
        2839
      ],
      "Context": [
        17322
      ],
      "ERC165": [
        18380
      ],
      "ERC20": [
        12496
      ],
      "ERC20Burnable": [
        12635
      ],
      "ERC20Pausable": [
        12737
      ],
      "ERC20PresetMinterPauser": [
        13452
      ],
      "EnumerableSet": [
        20565
      ],
      "IAccessControl": [
        2369
      ],
      "IAccessControlEnumerable": [
        2671
      ],
      "IERC165": [
        18706
      ],
      "IERC20": [
        12574
      ],
      "IERC20Metadata": [
        13082
      ],
      "Pausable": [
        10275
      ]
    },
    "id": 13453,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13318,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:101"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 13319,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 12497,
        "src": "58:22:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "../extensions/ERC20Burnable.sol",
        "id": 13320,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 12636,
        "src": "81:41:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "../extensions/ERC20Pausable.sol",
        "id": 13321,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 12738,
        "src": "123:41:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 13322,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 2840,
        "src": "165:53:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 13323,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 17323,
        "src": "219:36:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13325,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17322,
              "src": "860:7:101"
            },
            "id": 13326,
            "nodeType": "InheritanceSpecifier",
            "src": "860:7:101"
          },
          {
            "baseName": {
              "id": 13327,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2839,
              "src": "869:23:101"
            },
            "id": 13328,
            "nodeType": "InheritanceSpecifier",
            "src": "869:23:101"
          },
          {
            "baseName": {
              "id": 13329,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12635,
              "src": "894:13:101"
            },
            "id": 13330,
            "nodeType": "InheritanceSpecifier",
            "src": "894:13:101"
          },
          {
            "baseName": {
              "id": 13331,
              "name": "ERC20Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12737,
              "src": "909:13:101"
            },
            "id": 13332,
            "nodeType": "InheritanceSpecifier",
            "src": "909:13:101"
          }
        ],
        "contractDependencies": [
          2369,
          2649,
          2671,
          2839,
          10275,
          12496,
          12574,
          12635,
          12737,
          13082,
          17322,
          18380,
          18706
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13324,
          "nodeType": "StructuredDocumentation",
          "src": "257:566:101",
          "text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 13452,
        "linearizedBaseContracts": [
          13452,
          12737,
          10275,
          12635,
          12496,
          13082,
          12574,
          2839,
          2649,
          18380,
          18706,
          2369,
          17322,
          2671
        ],
        "name": "ERC20PresetMinterPauser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 13337,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13452,
            "src": "929:62:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13333,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "929:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 13335,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "977:13:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 13334,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "967:9:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13336,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "967:24:101",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 13342,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13452,
            "src": "997:62:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13338,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "997:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 13340,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1045:13:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 13339,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1035:9:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13341,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1035:24:101",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13372,
              "nodeType": "Block",
              "src": "1317:156:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13355,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "1338:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13356,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17310,
                          "src": "1358:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1358:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13354,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2838
                      ],
                      "referencedDeclaration": 2838,
                      "src": "1327:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:44:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13359,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:44:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13361,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13337,
                        "src": "1393:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13362,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17310,
                          "src": "1406:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13360,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2838
                      ],
                      "referencedDeclaration": 2838,
                      "src": "1382:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13365,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:37:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13367,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13342,
                        "src": "1440:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13368,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17310,
                          "src": "1453:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13366,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2838
                      ],
                      "referencedDeclaration": 2838,
                      "src": "1429:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13371,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:37:101"
                }
              ]
            },
            "documentation": {
              "id": 13343,
              "nodeType": "StructuredDocumentation",
              "src": "1066:172:101",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 13373,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13350,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13345,
                    "src": "1303:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 13351,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13347,
                    "src": "1309:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 13352,
                "modifierName": {
                  "id": 13349,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12496,
                  "src": "1297:5:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "1297:19:101"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13345,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 13373,
                  "src": "1255:18:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13344,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13347,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 13373,
                  "src": "1275:20:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1254:42:101"
            },
            "returnParameters": {
              "id": 13353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:101"
            },
            "scope": 13452,
            "src": "1243:230:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13395,
              "nodeType": "Block",
              "src": "1719:145:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13383,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13337,
                            "src": "1745:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13384,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17310,
                              "src": "1758:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1758:12:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13382,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2459,
                          "src": "1737:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1737:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 13387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:56:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        }
                      ],
                      "id": 13381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1729:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:101:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13389,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:101:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13391,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13376,
                        "src": "1846:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13378,
                        "src": "1850:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13390,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12377,
                      "src": "1840:5:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:17:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13394,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:17:101"
                }
              ]
            },
            "documentation": {
              "id": 13374,
              "nodeType": "StructuredDocumentation",
              "src": "1479:178:101",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 13396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13376,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13396,
                  "src": "1676:10:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13378,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13396,
                  "src": "1688:14:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:28:101"
            },
            "returnParameters": {
              "id": 13380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1719:0:101"
            },
            "scope": 13452,
            "src": "1662:202:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13412,
              "nodeType": "Block",
              "src": "2099:137:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13402,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13342,
                            "src": "2125:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13403,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17310,
                              "src": "2138:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2138:12:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13401,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2459,
                          "src": "2117:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2117:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 13406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:57:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        }
                      ],
                      "id": 13400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2109:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:102:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13408,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:102:101"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13409,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10258,
                      "src": "2221:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:8:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13411,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:8:101"
                }
              ]
            },
            "documentation": {
              "id": 13397,
              "nodeType": "StructuredDocumentation",
              "src": "1870:192:101",
              "text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 13413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2081:2:101"
            },
            "returnParameters": {
              "id": 13399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:101"
            },
            "scope": 13452,
            "src": "2067:169:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13429,
              "nodeType": "Block",
              "src": "2477:141:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13419,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13342,
                            "src": "2503:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13420,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17310,
                              "src": "2516:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2516:12:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13418,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2459,
                          "src": "2495:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2495:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 13423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2531:59:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        }
                      ],
                      "id": 13417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2487:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:104:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13425,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:104:101"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13426,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10274,
                      "src": "2601:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:10:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13428,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:10:101"
                }
              ]
            },
            "documentation": {
              "id": 13414,
              "nodeType": "StructuredDocumentation",
              "src": "2242:196:101",
              "text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 13430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:101"
            },
            "returnParameters": {
              "id": 13416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2477:0:101"
            },
            "scope": 13452,
            "src": "2443:175:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12495,
              12736
            ],
            "body": {
              "id": 13450,
              "nodeType": "Block",
              "src": "2744:61:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13445,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13432,
                        "src": "2781:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13446,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13434,
                        "src": "2787:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13447,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13436,
                        "src": "2791:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13442,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2754:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20PresetMinterPauser_$13452_$",
                          "typeString": "type(contract super ERC20PresetMinterPauser)"
                        }
                      },
                      "id": 13444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12736,
                      "src": "2754:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:44:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13449,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:44:101"
                }
              ]
            },
            "id": 13451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13440,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13438,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12496,
                  "src": "2722:5:101"
                },
                {
                  "id": 13439,
                  "name": "ERC20Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12737,
                  "src": "2729:13:101"
                }
              ],
              "src": "2713:30:101"
            },
            "parameters": {
              "id": 13437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13432,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 13451,
                  "src": "2654:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13434,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13451,
                  "src": "2668:10:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13451,
                  "src": "2680:14:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:42:101"
            },
            "returnParameters": {
              "id": 13441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2744:0:101"
            },
            "scope": 13452,
            "src": "2624:181:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 13453,
        "src": "824:1983:101"
      }
    ],
    "src": "33:2775:101"
  },
  "legacyAST": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
    "exportedSymbols": {
      "AccessControl": [
        2649
      ],
      "AccessControlEnumerable": [
        2839
      ],
      "Context": [
        17322
      ],
      "ERC165": [
        18380
      ],
      "ERC20": [
        12496
      ],
      "ERC20Burnable": [
        12635
      ],
      "ERC20Pausable": [
        12737
      ],
      "ERC20PresetMinterPauser": [
        13452
      ],
      "EnumerableSet": [
        20565
      ],
      "IAccessControl": [
        2369
      ],
      "IAccessControlEnumerable": [
        2671
      ],
      "IERC165": [
        18706
      ],
      "IERC20": [
        12574
      ],
      "IERC20Metadata": [
        13082
      ],
      "Pausable": [
        10275
      ]
    },
    "id": 13453,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13318,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:101"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 13319,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 12497,
        "src": "58:22:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "../extensions/ERC20Burnable.sol",
        "id": 13320,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 12636,
        "src": "81:41:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "../extensions/ERC20Pausable.sol",
        "id": 13321,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 12738,
        "src": "123:41:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 13322,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 2840,
        "src": "165:53:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 13323,
        "nodeType": "ImportDirective",
        "scope": 13453,
        "sourceUnit": 17323,
        "src": "219:36:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13325,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17322,
              "src": "860:7:101"
            },
            "id": 13326,
            "nodeType": "InheritanceSpecifier",
            "src": "860:7:101"
          },
          {
            "baseName": {
              "id": 13327,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2839,
              "src": "869:23:101"
            },
            "id": 13328,
            "nodeType": "InheritanceSpecifier",
            "src": "869:23:101"
          },
          {
            "baseName": {
              "id": 13329,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12635,
              "src": "894:13:101"
            },
            "id": 13330,
            "nodeType": "InheritanceSpecifier",
            "src": "894:13:101"
          },
          {
            "baseName": {
              "id": 13331,
              "name": "ERC20Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12737,
              "src": "909:13:101"
            },
            "id": 13332,
            "nodeType": "InheritanceSpecifier",
            "src": "909:13:101"
          }
        ],
        "contractDependencies": [
          2369,
          2649,
          2671,
          2839,
          10275,
          12496,
          12574,
          12635,
          12737,
          13082,
          17322,
          18380,
          18706
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13324,
          "nodeType": "StructuredDocumentation",
          "src": "257:566:101",
          "text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 13452,
        "linearizedBaseContracts": [
          13452,
          12737,
          10275,
          12635,
          12496,
          13082,
          12574,
          2839,
          2649,
          18380,
          18706,
          2369,
          17322,
          2671
        ],
        "name": "ERC20PresetMinterPauser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 13337,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13452,
            "src": "929:62:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13333,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "929:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 13335,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "977:13:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 13334,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "967:9:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13336,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "967:24:101",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 13342,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13452,
            "src": "997:62:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13338,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "997:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 13340,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1045:13:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 13339,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1035:9:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13341,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1035:24:101",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13372,
              "nodeType": "Block",
              "src": "1317:156:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13355,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "1338:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13356,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17310,
                          "src": "1358:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1358:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13354,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2838
                      ],
                      "referencedDeclaration": 2838,
                      "src": "1327:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:44:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13359,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:44:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13361,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13337,
                        "src": "1393:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13362,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17310,
                          "src": "1406:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13360,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2838
                      ],
                      "referencedDeclaration": 2838,
                      "src": "1382:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13365,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:37:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13367,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13342,
                        "src": "1440:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13368,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17310,
                          "src": "1453:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13366,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2838
                      ],
                      "referencedDeclaration": 2838,
                      "src": "1429:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13371,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:37:101"
                }
              ]
            },
            "documentation": {
              "id": 13343,
              "nodeType": "StructuredDocumentation",
              "src": "1066:172:101",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 13373,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13350,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13345,
                    "src": "1303:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 13351,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13347,
                    "src": "1309:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 13352,
                "modifierName": {
                  "id": 13349,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12496,
                  "src": "1297:5:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "1297:19:101"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13345,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 13373,
                  "src": "1255:18:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13344,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13347,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 13373,
                  "src": "1275:20:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1254:42:101"
            },
            "returnParameters": {
              "id": 13353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:101"
            },
            "scope": 13452,
            "src": "1243:230:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13395,
              "nodeType": "Block",
              "src": "1719:145:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13383,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13337,
                            "src": "1745:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13384,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17310,
                              "src": "1758:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1758:12:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13382,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2459,
                          "src": "1737:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1737:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 13387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:56:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa111136b49cf2058ce33f60fa04a5749fd87012d74cadc251e21e1db53342",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to mint\""
                        }
                      ],
                      "id": 13381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1729:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:101:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13389,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:101:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13391,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13376,
                        "src": "1846:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13378,
                        "src": "1850:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13390,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12377,
                      "src": "1840:5:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:17:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13394,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:17:101"
                }
              ]
            },
            "documentation": {
              "id": 13374,
              "nodeType": "StructuredDocumentation",
              "src": "1479:178:101",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 13396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13376,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13396,
                  "src": "1676:10:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13378,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13396,
                  "src": "1688:14:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:28:101"
            },
            "returnParameters": {
              "id": 13380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1719:0:101"
            },
            "scope": 13452,
            "src": "1662:202:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13412,
              "nodeType": "Block",
              "src": "2099:137:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13402,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13342,
                            "src": "2125:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13403,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17310,
                              "src": "2138:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2138:12:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13401,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2459,
                          "src": "2117:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2117:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 13406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:57:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d581fb23a6d539f3015b3485052424734f4b05014d1d5211f35a049cff57e330",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to pause\""
                        }
                      ],
                      "id": 13400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2109:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:102:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13408,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:102:101"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13409,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10258,
                      "src": "2221:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:8:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13411,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:8:101"
                }
              ]
            },
            "documentation": {
              "id": 13397,
              "nodeType": "StructuredDocumentation",
              "src": "1870:192:101",
              "text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 13413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2081:2:101"
            },
            "returnParameters": {
              "id": 13399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:101"
            },
            "scope": 13452,
            "src": "2067:169:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13429,
              "nodeType": "Block",
              "src": "2477:141:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13419,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13342,
                            "src": "2503:11:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13420,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17310,
                              "src": "2516:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2516:12:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13418,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2459,
                          "src": "2495:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2495:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 13423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2531:59:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        },
                        "value": "ERC20PresetMinterPauser: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_176e32c23b35bed3cd8ee309232e2364823f6f66078e0cf4f5b5e41eee016186",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have pauser role to unpause\""
                        }
                      ],
                      "id": 13417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2487:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:104:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13425,
                  "nodeType": "ExpressionStatement",
                  "src": "2487:104:101"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13426,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10274,
                      "src": "2601:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:10:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13428,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:10:101"
                }
              ]
            },
            "documentation": {
              "id": 13414,
              "nodeType": "StructuredDocumentation",
              "src": "2242:196:101",
              "text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 13430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:101"
            },
            "returnParameters": {
              "id": 13416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2477:0:101"
            },
            "scope": 13452,
            "src": "2443:175:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12495,
              12736
            ],
            "body": {
              "id": 13450,
              "nodeType": "Block",
              "src": "2744:61:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13445,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13432,
                        "src": "2781:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13446,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13434,
                        "src": "2787:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13447,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13436,
                        "src": "2791:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13442,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2754:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC20PresetMinterPauser_$13452_$",
                          "typeString": "type(contract super ERC20PresetMinterPauser)"
                        }
                      },
                      "id": 13444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12736,
                      "src": "2754:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:44:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13449,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:44:101"
                }
              ]
            },
            "id": 13451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13440,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13438,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12496,
                  "src": "2722:5:101"
                },
                {
                  "id": 13439,
                  "name": "ERC20Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12737,
                  "src": "2729:13:101"
                }
              ],
              "src": "2713:30:101"
            },
            "parameters": {
              "id": 13437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13432,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 13451,
                  "src": "2654:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13434,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13451,
                  "src": "2668:10:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 13451,
                  "src": "2680:14:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:42:101"
            },
            "returnParameters": {
              "id": 13441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2744:0:101"
            },
            "scope": 13452,
            "src": "2624:181:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 13453,
        "src": "824:1983:101"
      }
    ],
    "src": "33:2775:101"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T11:32:51.097Z",
  "devdoc": {
    "details": "{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Overload {grantRole} to track enumerable memberships"
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Overload {renounceRole} to track enumerable memberships"
      },
      "revokeRole(bytes32,address)": {
        "details": "Overload {revokeRole} to track enumerable memberships"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}