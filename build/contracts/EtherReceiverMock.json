{
  "contractName": "EtherReceiverMock",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"acceptEther\",\"type\":\"bool\"}],\"name\":\"setAcceptEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/mocks/EtherReceiverMock.sol\":\"EtherReceiverMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/mocks/EtherReceiverMock.sol\":{\"keccak256\":\"0xd00a024a92862aac28ea4bcf2b5418c6ce43ae1f7b99b4553d6185243c9fc269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f67545e3d095efcab196077772e20f64e83183eed7016a399d5839bed282d69\",\"dweb:/ipfs/QmfVHi6AEQkuKLdrLpA2U84bTJx99wX87drbCJ7hiZmq7i\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061010f806100206000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160c5565b92915050565b60006020828403121560a457600080fd5b600060b0848285016080565b91505092915050565b60008115159050919050565b60cc8160b9565b811460d657600080fd5b5056fea26469706673582212202a7c31ab665064d064565f0378d3aef0935f887b801da5bd5c8631c4ab9b91fe64736f6c63430008000033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160c5565b92915050565b60006020828403121560a457600080fd5b600060b0848285016080565b91505092915050565b60008115159050919050565b60cc8160b9565b811460d657600080fd5b5056fea26469706673582212202a7c31ab665064d064565f0378d3aef0935f887b801da5bd5c8631c4ab9b91fe64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "58:261:53:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:261:53:-:0;;;;;;;;;;;;;;;;;;;;;;;264:12;;;;;;;;;;259:52;;292:8;;;259:52;58:261;;;;;123:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;197:11;182:12;;:26;;;;;;;;;;;;;;;;;;123:92;:::o;7:133:145:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:90::-;;485:5;478:13;471:21;460:32;;450:48;;;:::o;504:116::-;574:21;589:5;574:21;:::i;:::-;567:5;564:32;554:2;;610:1;607;600:12;554:2;544:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive () external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n",
  "sourcePath": "E:/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/mocks/EtherReceiverMock.sol",
  "ast": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        7608
      ]
    },
    "id": 7609,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7584,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:53"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7608,
        "linearizedBaseContracts": [
          7608
        ],
        "name": "EtherReceiverMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7586,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nodeType": "VariableDeclaration",
            "scope": 7608,
            "src": "91:25:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7585,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7595,
              "nodeType": "Block",
              "src": "172:43:53",
              "statements": [
                {
                  "expression": {
                    "id": 7593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7591,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7586,
                      "src": "182:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7592,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7588,
                      "src": "197:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7594,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:53"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 7596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7588,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nodeType": "VariableDeclaration",
                  "scope": 7596,
                  "src": "147:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7587,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:53"
            },
            "returnParameters": {
              "id": 7590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:53"
            },
            "scope": 7608,
            "src": "123:92:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7606,
              "nodeType": "Block",
              "src": "249:68:53",
              "statements": [
                {
                  "condition": {
                    "id": 7600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:53",
                    "subExpression": {
                      "id": 7599,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7586,
                      "src": "264:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7605,
                  "nodeType": "IfStatement",
                  "src": "259:52:53",
                  "trueBody": {
                    "id": 7604,
                    "nodeType": "Block",
                    "src": "278:33:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7601,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "292:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7603,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:53"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7607,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:53"
            },
            "returnParameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:53"
            },
            "scope": 7608,
            "src": "221:96:53",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7609,
        "src": "58:261:53"
      }
    ],
    "src": "33:287:53"
  },
  "legacyAST": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        7608
      ]
    },
    "id": 7609,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7584,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:53"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7608,
        "linearizedBaseContracts": [
          7608
        ],
        "name": "EtherReceiverMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7586,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nodeType": "VariableDeclaration",
            "scope": 7608,
            "src": "91:25:53",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7585,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:53",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7595,
              "nodeType": "Block",
              "src": "172:43:53",
              "statements": [
                {
                  "expression": {
                    "id": 7593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7591,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7586,
                      "src": "182:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7592,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7588,
                      "src": "197:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7594,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:53"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 7596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7588,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nodeType": "VariableDeclaration",
                  "scope": 7596,
                  "src": "147:16:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7587,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:53"
            },
            "returnParameters": {
              "id": 7590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:53"
            },
            "scope": 7608,
            "src": "123:92:53",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7606,
              "nodeType": "Block",
              "src": "249:68:53",
              "statements": [
                {
                  "condition": {
                    "id": 7600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:53",
                    "subExpression": {
                      "id": 7599,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7586,
                      "src": "264:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7605,
                  "nodeType": "IfStatement",
                  "src": "259:52:53",
                  "trueBody": {
                    "id": 7604,
                    "nodeType": "Block",
                    "src": "278:33:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7601,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "292:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7603,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:53"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7607,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:53"
            },
            "returnParameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:53"
            },
            "scope": 7608,
            "src": "221:96:53",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7609,
        "src": "58:261:53"
      }
    ],
    "src": "33:287:53"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T11:32:50.955Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}