{
  "contractName": "ERC20CappedMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/mocks/ERC20CappedMock.sol\":\"ERC20CappedMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/mocks/ERC20CappedMock.sol\":{\"keccak256\":\"0xa92699ddb63bd23c1df812eda185a5ebac4a59c77d63da8d1a83f81d11f0fb50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60cf0edf5ffd76bce1e744f1cc8bb88352956f67f12fa833d18477b2461c4278\",\"dweb:/ipfs/QmdiWmWhKxuHhhyjyn9kXpQJMFbyTFoeb8a8GnqfSq64Jj\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x5a6eef7aca46ac84e7ddcbadde3bbd33e29de481108530c278837f588f169f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab82ea9632518f6452fd02db47e752252ebc00a1408bc8f53bf9b79e4c6de52a\",\"dweb:/ipfs/QmesKUQ2dovSX7wqCwiU9ZjY3v72fWAJkERwXG5JVRMXaE\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x821af334ad764368c6b1f549e66b0bb29a96af560a2336ea5d833529f7d5525c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964556033234fa07765890a58fba434c68da0952d1e70d24e56c3b5b2c9a6ce4\",\"dweb:/ipfs/QmbkW9NZgHMNjYge7v9ZmftCvTrmwbv3QRjo7qChmjtQXC\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xa5cafd3301957efa1be602e80bc46705408d7956160f07f8785933f339ed9154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2990af6eb22a579b7193225734785d6ea4ca851407f08c4f5f78e58c329073a\",\"dweb:/ipfs/QmabgfYV9s9awaHYN7BejNFk8gwWRNm2y9QrodBzHXDq8K\"]},\"/E/work/\\u5de5\\u4f5c/czz/\\u5408\\u7ea6/truffle/safebox/contracts/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001b0138038062001b018339818101604052810190620000379190620001ff565b808383816003908051906020019062000052929190620000c6565b5080600490805190602001906200006b929190620000c6565b50505060008111620000b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ab90620002c9565b60405180910390fd5b80608081815250505050505062000451565b828054620000d490620003a3565b90600052602060002090601f016020900481019282620000f8576000855562000144565b82601f106200011357805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014357825182559160200191906001019062000126565b5b50905062000153919062000157565b5090565b5b808211156200017257600081600090555060010162000158565b5090565b60006200018d62000187846200031f565b620002eb565b905082815260208101848484011115620001a657600080fd5b620001b38482856200036d565b509392505050565b600082601f830112620001cd57600080fd5b8151620001df84826020860162000176565b91505092915050565b600081519050620001f98162000437565b92915050565b6000806000606084860312156200021557600080fd5b600084015167ffffffffffffffff8111156200023057600080fd5b6200023e86828701620001bb565b935050602084015167ffffffffffffffff8111156200025c57600080fd5b6200026a86828701620001bb565b92505060406200027d86828701620001e8565b9150509250925092565b60006200029660158362000352565b91507f45524332304361707065643a20636170206973203000000000000000000000006000830152602082019050919050565b60006020820190508181036000830152620002e48162000287565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000315576200031462000408565b5b8060405250919050565b600067ffffffffffffffff8211156200033d576200033c62000408565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000819050919050565b60005b838110156200038d57808201518184015260208101905062000370565b838111156200039d576000848401525b50505050565b60006002820490506001821680620003bc57607f821691505b60208210811415620003d357620003d2620003d9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004428162000363565b81146200044e57600080fd5b50565b6080516116946200046d600039600061049e01526116946000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806339509351146101ac57806340c10f19146101dc57806370a08231146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063355274ea1461018e575b600080fd5b6100dc6102d6565b6040516100e991906112e9565b60405180910390f35b61010c60048036038101906101079190610ee2565b610368565b60405161011991906112ce565b60405180910390f35b61012a610386565b604051610137919061142b565b60405180910390f35b61015a60048036038101906101559190610e93565b610390565b60405161016791906112ce565b60405180910390f35b610178610491565b6040516101859190611446565b60405180910390f35b61019661049a565b6040516101a3919061142b565b60405180910390f35b6101c660048036038101906101c19190610ee2565b6104c2565b6040516101d391906112ce565b60405180910390f35b6101f660048036038101906101f19190610ee2565b61056e565b005b610212600480360381019061020d9190610e2e565b61057c565b60405161021f919061142b565b60405180910390f35b6102306105c4565b60405161023d91906112e9565b60405180910390f35b610260600480360381019061025b9190610ee2565b610656565b60405161026d91906112ce565b60405180910390f35b610290600480360381019061028b9190610ee2565b61074a565b60405161029d91906112ce565b60405180910390f35b6102c060048036038101906102bb9190610e57565b610768565b6040516102cd919061142b565b60405180910390f35b6060600380546102e59061158f565b80601f01602080910402602001604051908101604052809291908181526020018280546103119061158f565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b600061037c6103756107ef565b84846107f7565b6001905092915050565b6000600254905090565b600061039d8484846109c2565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103e86107ef565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f9061136b565b60405180910390fd5b610485856104746107ef565b858461048091906114d3565b6107f7565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006105646104cf6107ef565b8484600160006104dd6107ef565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461055f919061147d565b6107f7565b6001905092915050565b6105788282610c41565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105d39061158f565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff9061158f565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b600080600160006106656107ef565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610722576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610719906113eb565b60405180910390fd5b61073f61072d6107ef565b85858461073a91906114d3565b6107f7565b600191505092915050565b600061075e6107576107ef565b84846109c2565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e906113cb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce9061132b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109b5919061142b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a299061138b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a999061130b565b60405180910390fd5b610aad838383610cab565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2a9061134b565b60405180910390fd5b8181610b3f91906114d3565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bcf919061147d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c33919061142b565b60405180910390a350505050565b610c4961049a565b81610c52610386565b610c5c919061147d565b1115610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c94906113ab565b60405180910390fd5b610ca78282610cb0565b5050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d179061140b565b60405180910390fd5b610d2c60008383610cab565b8060026000828254610d3e919061147d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d93919061147d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610df8919061142b565b60405180910390a35050565b600081359050610e1381611630565b92915050565b600081359050610e2881611647565b92915050565b600060208284031215610e4057600080fd5b6000610e4e84828501610e04565b91505092915050565b60008060408385031215610e6a57600080fd5b6000610e7885828601610e04565b9250506020610e8985828601610e04565b9150509250929050565b600080600060608486031215610ea857600080fd5b6000610eb686828701610e04565b9350506020610ec786828701610e04565b9250506040610ed886828701610e19565b9150509250925092565b60008060408385031215610ef557600080fd5b6000610f0385828601610e04565b9250506020610f1485828601610e19565b9150509250929050565b610f2781611519565b82525050565b6000610f3882611461565b610f42818561146c565b9350610f5281856020860161155c565b610f5b8161161f565b840191505092915050565b6000610f7360238361146c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fd960228361146c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061103f60268361146c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110a560288361146c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061110b60258361146c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061117160198361146c565b91507f45524332304361707065643a20636170206578636565646564000000000000006000830152602082019050919050565b60006111b160248361146c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061121760258361146c565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061127d601f8361146c565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6112b981611545565b82525050565b6112c88161154f565b82525050565b60006020820190506112e36000830184610f1e565b92915050565b600060208201905081810360008301526113038184610f2d565b905092915050565b6000602082019050818103600083015261132481610f66565b9050919050565b6000602082019050818103600083015261134481610fcc565b9050919050565b6000602082019050818103600083015261136481611032565b9050919050565b6000602082019050818103600083015261138481611098565b9050919050565b600060208201905081810360008301526113a4816110fe565b9050919050565b600060208201905081810360008301526113c481611164565b9050919050565b600060208201905081810360008301526113e4816111a4565b9050919050565b600060208201905081810360008301526114048161120a565b9050919050565b6000602082019050818103600083015261142481611270565b9050919050565b600060208201905061144060008301846112b0565b92915050565b600060208201905061145b60008301846112bf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061148882611545565b915061149383611545565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114c8576114c76115c1565b5b828201905092915050565b60006114de82611545565b91506114e983611545565b9250828210156114fc576114fb6115c1565b5b828203905092915050565b600061151282611525565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561157a57808201518184015260208101905061155f565b83811115611589576000848401525b50505050565b600060028204905060018216806115a757607f821691505b602082108114156115bb576115ba6115f0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61163981611507565b811461164457600080fd5b50565b61165081611545565b811461165b57600080fd5b5056fea2646970667358221220c4c6291da2451cb71a96db0879702f3c3efbeb86ab8efd86054e8f82e7a7879364736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610228578063a457c2d714610246578063a9059cbb14610276578063dd62ed3e146102a6576100cf565b806339509351146101ac57806340c10f19146101dc57806370a08231146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063355274ea1461018e575b600080fd5b6100dc6102d6565b6040516100e991906112e9565b60405180910390f35b61010c60048036038101906101079190610ee2565b610368565b60405161011991906112ce565b60405180910390f35b61012a610386565b604051610137919061142b565b60405180910390f35b61015a60048036038101906101559190610e93565b610390565b60405161016791906112ce565b60405180910390f35b610178610491565b6040516101859190611446565b60405180910390f35b61019661049a565b6040516101a3919061142b565b60405180910390f35b6101c660048036038101906101c19190610ee2565b6104c2565b6040516101d391906112ce565b60405180910390f35b6101f660048036038101906101f19190610ee2565b61056e565b005b610212600480360381019061020d9190610e2e565b61057c565b60405161021f919061142b565b60405180910390f35b6102306105c4565b60405161023d91906112e9565b60405180910390f35b610260600480360381019061025b9190610ee2565b610656565b60405161026d91906112ce565b60405180910390f35b610290600480360381019061028b9190610ee2565b61074a565b60405161029d91906112ce565b60405180910390f35b6102c060048036038101906102bb9190610e57565b610768565b6040516102cd919061142b565b60405180910390f35b6060600380546102e59061158f565b80601f01602080910402602001604051908101604052809291908181526020018280546103119061158f565b801561035e5780601f106103335761010080835404028352916020019161035e565b820191906000526020600020905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b600061037c6103756107ef565b84846107f7565b6001905092915050565b6000600254905090565b600061039d8484846109c2565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103e86107ef565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f9061136b565b60405180910390fd5b610485856104746107ef565b858461048091906114d3565b6107f7565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006105646104cf6107ef565b8484600160006104dd6107ef565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461055f919061147d565b6107f7565b6001905092915050565b6105788282610c41565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105d39061158f565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff9061158f565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b600080600160006106656107ef565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610722576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610719906113eb565b60405180910390fd5b61073f61072d6107ef565b85858461073a91906114d3565b6107f7565b600191505092915050565b600061075e6107576107ef565b84846109c2565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e906113cb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce9061132b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109b5919061142b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a299061138b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a999061130b565b60405180910390fd5b610aad838383610cab565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2a9061134b565b60405180910390fd5b8181610b3f91906114d3565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bcf919061147d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c33919061142b565b60405180910390a350505050565b610c4961049a565b81610c52610386565b610c5c919061147d565b1115610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c94906113ab565b60405180910390fd5b610ca78282610cb0565b5050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d179061140b565b60405180910390fd5b610d2c60008383610cab565b8060026000828254610d3e919061147d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d93919061147d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610df8919061142b565b60405180910390a35050565b600081359050610e1381611630565b92915050565b600081359050610e2881611647565b92915050565b600060208284031215610e4057600080fd5b6000610e4e84828501610e04565b91505092915050565b60008060408385031215610e6a57600080fd5b6000610e7885828601610e04565b9250506020610e8985828601610e04565b9150509250929050565b600080600060608486031215610ea857600080fd5b6000610eb686828701610e04565b9350506020610ec786828701610e04565b9250506040610ed886828701610e19565b9150509250925092565b60008060408385031215610ef557600080fd5b6000610f0385828601610e04565b9250506020610f1485828601610e19565b9150509250929050565b610f2781611519565b82525050565b6000610f3882611461565b610f42818561146c565b9350610f5281856020860161155c565b610f5b8161161f565b840191505092915050565b6000610f7360238361146c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fd960228361146c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061103f60268361146c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110a560288361146c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061110b60258361146c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061117160198361146c565b91507f45524332304361707065643a20636170206578636565646564000000000000006000830152602082019050919050565b60006111b160248361146c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061121760258361146c565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061127d601f8361146c565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b6112b981611545565b82525050565b6112c88161154f565b82525050565b60006020820190506112e36000830184610f1e565b92915050565b600060208201905081810360008301526113038184610f2d565b905092915050565b6000602082019050818103600083015261132481610f66565b9050919050565b6000602082019050818103600083015261134481610fcc565b9050919050565b6000602082019050818103600083015261136481611032565b9050919050565b6000602082019050818103600083015261138481611098565b9050919050565b600060208201905081810360008301526113a4816110fe565b9050919050565b600060208201905081810360008301526113c481611164565b9050919050565b600060208201905081810360008301526113e4816111a4565b9050919050565b600060208201905081810360008301526114048161120a565b9050919050565b6000602082019050818103600083015261142481611270565b9050919050565b600060208201905061144060008301846112b0565b92915050565b600060208201905061145b60008301846112bf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061148882611545565b915061149383611545565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114c8576114c76115c1565b5b828201905092915050565b60006114de82611545565b91506114e983611545565b9250828210156114fc576114fb6115c1565b5b828203905092915050565b600061151282611525565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561157a57808201518184015260208101905061155f565b83811115611589576000848401525b50505050565b600060028204905060018216806115a757607f821691505b602082108114156115bb576115ba6115f0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61163981611507565b811461164457600080fd5b50565b61165081611545565b811461165b57600080fd5b5056fea2646970667358221220c4c6291da2451cb71a96db0879702f3c3efbeb86ab8efd86054e8f82e7a7879364736f6c63430008000033",
  "immutableReferences": {
    "12643": [
      {
        "length": 32,
        "start": 1182
      }
    ]
  },
  "sourceMap": "111:259:36:-:0;;;157:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;265:3;239:4;245:6;1973:5:91;1965;:13;;;;;;;;;;;;:::i;:::-;;1998:7;1988;:17;;;;;;;;;;;;:::i;:::-;;1898:114;;428:1:94;421:4;:8;413:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;472:4;465:11;;;;;;376:107;157:120:36;;;111:259;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:145:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:143::-;;762:6;756:13;747:22;;778:33;805:5;778:33;:::i;:::-;737:80;;;;:::o;823:808::-;;;;996:2;984:9;975:7;971:23;967:32;964:2;;;1012:1;1009;1002:12;964:2;1076:1;1065:9;1061:17;1055:24;1106:18;1098:6;1095:30;1092:2;;;1138:1;1135;1128:12;1092:2;1166:74;1232:7;1223:6;1212:9;1208:22;1166:74;:::i;:::-;1156:84;;1026:224;1310:2;1299:9;1295:18;1289:25;1341:18;1333:6;1330:30;1327:2;;;1373:1;1370;1363:12;1327:2;1401:74;1467:7;1458:6;1447:9;1443:22;1401:74;:::i;:::-;1391:84;;1260:225;1524:2;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1495:129;954:677;;;;;:::o;1637:319::-;;1800:67;1864:2;1859:3;1800:67;:::i;:::-;1793:74;;1897:23;1893:1;1888:3;1884:11;1877:44;1947:2;1942:3;1938:12;1931:19;;1783:173;;;:::o;1962:419::-;;2166:2;2155:9;2151:18;2143:26;;2215:9;2209:4;2205:20;2201:1;2190:9;2186:17;2179:47;2243:131;2369:4;2243:131;:::i;:::-;2235:139;;2133:248;;;:::o;2387:283::-;;2453:2;2447:9;2437:19;;2495:4;2487:6;2483:17;2602:6;2590:10;2587:22;2566:18;2554:10;2551:34;2548:62;2545:2;;;2613:18;;:::i;:::-;2545:2;2653:10;2649:2;2642:22;2427:243;;;;:::o;2676:332::-;;2828:18;2820:6;2817:30;2814:2;;;2850:18;;:::i;:::-;2814:2;2935:4;2931:9;2924:4;2916:6;2912:17;2908:33;2900:41;;2996:4;2990;2986:15;2978:23;;2743:265;;;:::o;3014:169::-;;3132:6;3127:3;3120:19;3172:4;3167:3;3163:14;3148:29;;3110:73;;;;:::o;3189:77::-;;3255:5;3244:16;;3234:32;;;:::o;3272:307::-;3340:1;3350:113;3364:6;3361:1;3358:13;3350:113;;;3449:1;3444:3;3440:11;3434:18;3430:1;3425:3;3421:11;3414:39;3386:2;3383:1;3379:10;3374:15;;3350:113;;;3481:6;3478:1;3475:13;3472:2;;;3561:1;3552:6;3547:3;3543:16;3536:27;3472:2;3321:258;;;;:::o;3585:320::-;;3666:1;3660:4;3656:12;3646:22;;3713:1;3707:4;3703:12;3734:18;3724:2;;3790:4;3782:6;3778:17;3768:27;;3724:2;3852;3844:6;3841:14;3821:18;3818:38;3815:2;;;3871:18;;:::i;:::-;3815:2;3636:269;;;;:::o;3911:180::-;3959:77;3956:1;3949:88;4056:4;4053:1;4046:15;4080:4;4077:1;4070:15;4097:180;4145:77;4142:1;4135:88;4242:4;4239:1;4232:15;4266:4;4263:1;4256:15;4283:122;4356:24;4374:5;4356:24;:::i;:::-;4349:5;4346:35;4336:2;;4395:1;4392;4385:12;4336:2;4326:79;:::o;111:259:36:-;;;;;;;;;;;",
  "deployedSourceMap": "111:259:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3165:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4807:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3014:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;562:81:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5616:212:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;283:85:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3329:125:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6315:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3657:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3887:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2077:98;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;4282:12;:10;:12::i;:::-;4296:7;4305:6;4273:8;:39::i;:::-;4329:4;4322:11;;4174:166;;;;:::o;3165:106::-;3226:7;3252:12;;3245:19;;3165:106;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;4976:24;5003:11;:19;5015:6;5003:19;;;;;;;;;;;;;;;:33;5023:12;:10;:12::i;:::-;5003:33;;;;;;;;;;;;;;;;4976:60;;5074:6;5054:16;:26;;5046:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5135:57;5144:6;5152:12;:10;:12::i;:::-;5185:6;5166:16;:25;;;;:::i;:::-;5135:8;:57::i;:::-;5210:4;5203:11;;;4807:414;;;;;:::o;3014:91::-;3072:5;3096:2;3089:9;;3014:91;:::o;562:81:94:-;606:7;632:4;625:11;;562:81;:::o;5616:212:91:-;5704:4;5720:80;5729:12;:10;:12::i;:::-;5743:7;5789:10;5752:11;:25;5764:12;:10;:12::i;:::-;5752:25;;;;;;;;;;;;;;;:34;5778:7;5752:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5720:8;:80::i;:::-;5817:4;5810:11;;5616:212;;;;:::o;283:85:36:-;343:18;349:2;353:7;343:5;:18::i;:::-;283:85;;:::o;3329:125:91:-;3403:7;3429:9;:18;3439:7;3429:18;;;;;;;;;;;;;;;;3422:25;;3329:125;;;:::o;2288:102::-;2344:13;2376:7;2369:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:102;:::o;6315:371::-;6408:4;6424:24;6451:11;:25;6463:12;:10;:12::i;:::-;6451:25;;;;;;;;;;;;;;;:34;6477:7;6451:34;;;;;;;;;;;;;;;;6424:61;;6523:15;6503:16;:35;;6495:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6590:67;6599:12;:10;:12::i;:::-;6613:7;6641:15;6622:16;:34;;;;:::i;:::-;6590:8;:67::i;:::-;6675:4;6668:11;;;6315:371;;;;:::o;3657:172::-;3743:4;3759:42;3769:12;:10;:12::i;:::-;3783:9;3794:6;3759:9;:42::i;:::-;3818:4;3811:11;;3657:172;;;;:::o;3887:149::-;3976:7;4002:11;:18;4014:5;4002:18;;;;;;;;;;;;;;;:27;4021:7;4002:27;;;;;;;;;;;;;;;;3995:34;;3887:149;;;;:::o;586:96:122:-;639:7;665:10;658:17;;586:96;:::o;9579:340:91:-;9697:1;9680:19;;:5;:19;;;;9672:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9777:1;9758:21;;:7;:21;;;;9750:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9859:6;9829:11;:18;9841:5;9829:18;;;;;;;;;;;;;;;:27;9848:7;9829:27;;;;;;;;;;;;;;;:36;;;;9896:7;9880:32;;9889:5;9880:32;;;9905:6;9880:32;;;;;;:::i;:::-;;;;;;;;9579:340;;;:::o;7160:592::-;7283:1;7265:20;;:6;:20;;;;7257:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7366:1;7345:23;;:9;:23;;;;7337:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;7477:21;7501:9;:17;7511:6;7501:17;;;;;;;;;;;;;;;;7477:41;;7553:6;7536:13;:23;;7528:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7648:6;7632:13;:22;;;;:::i;:::-;7612:9;:17;7622:6;7612:17;;;;;;;;;;;;;;;:42;;;;7688:6;7664:9;:20;7674:9;7664:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7727:9;7710:35;;7719:6;7710:35;;;7738:6;7710:35;;;;;;:::i;:::-;;;;;;;;7160:592;;;;:::o;696:204:94:-;820:5;:3;:5::i;:::-;810:6;788:19;:17;:19::i;:::-;:28;;;;:::i;:::-;:37;;780:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;865:28;877:7;886:6;865:11;:28::i;:::-;696:204;;:::o;10506:92:91:-;;;;:::o;8023:330::-;8125:1;8106:21;;:7;:21;;;;8098:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;;;;;8288:6;8266:9;:18;8276:7;8266:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8330:7;8309:37;;8326:1;8309:37;;;8339:6;8309:37;;;;;;:::i;:::-;;;;;;;;8023:330;;:::o;7:139:145:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:367::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2694:34;2690:1;2685:3;2681:11;2674:55;2760:5;2755:2;2750:3;2746:12;2739:27;2792:2;2787:3;2783:12;2776:19;;2580:221;;;:::o;2807:366::-;;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3067:34;3063:1;3058:3;3054:11;3047:55;3133:4;3128:2;3123:3;3119:12;3112:26;3164:2;3159:3;3155:12;3148:19;;2953:220;;;:::o;3179:370::-;;3342:67;3406:2;3401:3;3342:67;:::i;:::-;3335:74;;3439:34;3435:1;3430:3;3426:11;3419:55;3505:8;3500:2;3495:3;3491:12;3484:30;3540:2;3535:3;3531:12;3524:19;;3325:224;;;:::o;3555:372::-;;3718:67;3782:2;3777:3;3718:67;:::i;:::-;3711:74;;3815:34;3811:1;3806:3;3802:11;3795:55;3881:10;3876:2;3871:3;3867:12;3860:32;3918:2;3913:3;3909:12;3902:19;;3701:226;;;:::o;3933:369::-;;4096:67;4160:2;4155:3;4096:67;:::i;:::-;4089:74;;4193:34;4189:1;4184:3;4180:11;4173:55;4259:7;4254:2;4249:3;4245:12;4238:29;4293:2;4288:3;4284:12;4277:19;;4079:223;;;:::o;4308:323::-;;4471:67;4535:2;4530:3;4471:67;:::i;:::-;4464:74;;4568:27;4564:1;4559:3;4555:11;4548:48;4622:2;4617:3;4613:12;4606:19;;4454:177;;;:::o;4637:368::-;;4800:67;4864:2;4859:3;4800:67;:::i;:::-;4793:74;;4897:34;4893:1;4888:3;4884:11;4877:55;4963:6;4958:2;4953:3;4949:12;4942:28;4996:2;4991:3;4987:12;4980:19;;4783:222;;;:::o;5011:369::-;;5174:67;5238:2;5233:3;5174:67;:::i;:::-;5167:74;;5271:34;5267:1;5262:3;5258:11;5251:55;5337:7;5332:2;5327:3;5323:12;5316:29;5371:2;5366:3;5362:12;5355:19;;5157:223;;;:::o;5386:329::-;;5549:67;5613:2;5608:3;5549:67;:::i;:::-;5542:74;;5646:33;5642:1;5637:3;5633:11;5626:54;5706:2;5701:3;5697:12;5690:19;;5532:183;;;:::o;5721:118::-;5808:24;5826:5;5808:24;:::i;:::-;5803:3;5796:37;5786:53;;:::o;5845:112::-;5928:22;5944:5;5928:22;:::i;:::-;5923:3;5916:35;5906:51;;:::o;5963:210::-;;6088:2;6077:9;6073:18;6065:26;;6101:65;6163:1;6152:9;6148:17;6139:6;6101:65;:::i;:::-;6055:118;;;;:::o;6179:313::-;;6330:2;6319:9;6315:18;6307:26;;6379:9;6373:4;6369:20;6365:1;6354:9;6350:17;6343:47;6407:78;6480:4;6471:6;6407:78;:::i;:::-;6399:86;;6297:195;;;;:::o;6498:419::-;;6702:2;6691:9;6687:18;6679:26;;6751:9;6745:4;6741:20;6737:1;6726:9;6722:17;6715:47;6779:131;6905:4;6779:131;:::i;:::-;6771:139;;6669:248;;;:::o;6923:419::-;;7127:2;7116:9;7112:18;7104:26;;7176:9;7170:4;7166:20;7162:1;7151:9;7147:17;7140:47;7204:131;7330:4;7204:131;:::i;:::-;7196:139;;7094:248;;;:::o;7348:419::-;;7552:2;7541:9;7537:18;7529:26;;7601:9;7595:4;7591:20;7587:1;7576:9;7572:17;7565:47;7629:131;7755:4;7629:131;:::i;:::-;7621:139;;7519:248;;;:::o;7773:419::-;;7977:2;7966:9;7962:18;7954:26;;8026:9;8020:4;8016:20;8012:1;8001:9;7997:17;7990:47;8054:131;8180:4;8054:131;:::i;:::-;8046:139;;7944:248;;;:::o;8198:419::-;;8402:2;8391:9;8387:18;8379:26;;8451:9;8445:4;8441:20;8437:1;8426:9;8422:17;8415:47;8479:131;8605:4;8479:131;:::i;:::-;8471:139;;8369:248;;;:::o;8623:419::-;;8827:2;8816:9;8812:18;8804:26;;8876:9;8870:4;8866:20;8862:1;8851:9;8847:17;8840:47;8904:131;9030:4;8904:131;:::i;:::-;8896:139;;8794:248;;;:::o;9048:419::-;;9252:2;9241:9;9237:18;9229:26;;9301:9;9295:4;9291:20;9287:1;9276:9;9272:17;9265:47;9329:131;9455:4;9329:131;:::i;:::-;9321:139;;9219:248;;;:::o;9473:419::-;;9677:2;9666:9;9662:18;9654:26;;9726:9;9720:4;9716:20;9712:1;9701:9;9697:17;9690:47;9754:131;9880:4;9754:131;:::i;:::-;9746:139;;9644:248;;;:::o;9898:419::-;;10102:2;10091:9;10087:18;10079:26;;10151:9;10145:4;10141:20;10137:1;10126:9;10122:17;10115:47;10179:131;10305:4;10179:131;:::i;:::-;10171:139;;10069:248;;;:::o;10323:222::-;;10454:2;10443:9;10439:18;10431:26;;10467:71;10535:1;10524:9;10520:17;10511:6;10467:71;:::i;:::-;10421:124;;;;:::o;10551:214::-;;10678:2;10667:9;10663:18;10655:26;;10691:67;10755:1;10744:9;10740:17;10731:6;10691:67;:::i;:::-;10645:120;;;;:::o;10771:99::-;;10857:5;10851:12;10841:22;;10830:40;;;:::o;10876:169::-;;10994:6;10989:3;10982:19;11034:4;11029:3;11025:14;11010:29;;10972:73;;;;:::o;11051:305::-;;11110:20;11128:1;11110:20;:::i;:::-;11105:25;;11144:20;11162:1;11144:20;:::i;:::-;11139:25;;11298:1;11230:66;11226:74;11223:1;11220:81;11217:2;;;11304:18;;:::i;:::-;11217:2;11348:1;11345;11341:9;11334:16;;11095:261;;;;:::o;11362:191::-;;11422:20;11440:1;11422:20;:::i;:::-;11417:25;;11456:20;11474:1;11456:20;:::i;:::-;11451:25;;11495:1;11492;11489:8;11486:2;;;11500:18;;:::i;:::-;11486:2;11545:1;11542;11538:9;11530:17;;11407:146;;;;:::o;11559:96::-;;11625:24;11643:5;11625:24;:::i;:::-;11614:35;;11604:51;;;:::o;11661:90::-;;11738:5;11731:13;11724:21;11713:32;;11703:48;;;:::o;11757:126::-;;11834:42;11827:5;11823:54;11812:65;;11802:81;;;:::o;11889:77::-;;11955:5;11944:16;;11934:32;;;:::o;11972:86::-;;12047:4;12040:5;12036:16;12025:27;;12015:43;;;:::o;12064:307::-;12132:1;12142:113;12156:6;12153:1;12150:13;12142:113;;;12241:1;12236:3;12232:11;12226:18;12222:1;12217:3;12213:11;12206:39;12178:2;12175:1;12171:10;12166:15;;12142:113;;;12273:6;12270:1;12267:13;12264:2;;;12353:1;12344:6;12339:3;12335:16;12328:27;12264:2;12113:258;;;;:::o;12377:320::-;;12458:1;12452:4;12448:12;12438:22;;12505:1;12499:4;12495:12;12526:18;12516:2;;12582:4;12574:6;12570:17;12560:27;;12516:2;12644;12636:6;12633:14;12613:18;12610:38;12607:2;;;12663:18;;:::i;:::-;12607:2;12428:269;;;;:::o;12703:180::-;12751:77;12748:1;12741:88;12848:4;12845:1;12838:15;12872:4;12869:1;12862:15;12889:180;12937:77;12934:1;12927:88;13034:4;13031:1;13024:15;13058:4;13055:1;13048:15;13075:102;;13167:2;13163:7;13158:2;13151:5;13147:14;13143:28;13133:38;;13123:54;;;:::o;13183:122::-;13256:24;13274:5;13256:24;:::i;:::-;13249:5;13246:35;13236:2;;13295:1;13292;13285:12;13236:2;13226:79;:::o;13311:122::-;13384:24;13402:5;13384:24;:::i;:::-;13377:5;13374:35;13364:2;;13423:1;13420;13413:12;13364:2;13354:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC20/extensions/ERC20Capped.sol\";\n\ncontract ERC20CappedMock is ERC20Capped {\n    constructor (string memory name, string memory symbol, uint256 cap)\n        ERC20(name, symbol) ERC20Capped(cap)\n    { }\n\n    function mint(address to, uint256 tokenId) public {\n        _mint(to, tokenId);\n    }\n}\n",
  "sourcePath": "E:/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/mocks/ERC20CappedMock.sol",
  "ast": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/mocks/ERC20CappedMock.sol",
    "exportedSymbols": {
      "Context": [
        17322
      ],
      "ERC20": [
        12496
      ],
      "ERC20Capped": [
        12700
      ],
      "ERC20CappedMock": [
        5802
      ],
      "IERC20": [
        12574
      ],
      "IERC20Metadata": [
        13082
      ]
    },
    "id": 5803,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5768,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:36"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "../token/ERC20/extensions/ERC20Capped.sol",
        "id": 5769,
        "nodeType": "ImportDirective",
        "scope": 5803,
        "sourceUnit": 12701,
        "src": "58:51:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5770,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12700,
              "src": "139:11:36"
            },
            "id": 5771,
            "nodeType": "InheritanceSpecifier",
            "src": "139:11:36"
          }
        ],
        "contractDependencies": [
          12496,
          12574,
          12700,
          13082,
          17322
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5802,
        "linearizedBaseContracts": [
          5802,
          12700,
          12496,
          13082,
          12574,
          17322
        ],
        "name": "ERC20CappedMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5787,
              "nodeType": "Block",
              "src": "274:3:36",
              "statements": []
            },
            "id": 5788,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5780,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5773,
                    "src": "239:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5781,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5775,
                    "src": "245:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5782,
                "modifierName": {
                  "id": 5779,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12496,
                  "src": "233:5:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "233:19:36"
              },
              {
                "arguments": [
                  {
                    "id": 5784,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5777,
                    "src": "265:3:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5785,
                "modifierName": {
                  "id": 5783,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12700,
                  "src": "253:11:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "253:16:36"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5773,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "170:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5772,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5775,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "190:20:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5777,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "212:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "169:55:36"
            },
            "returnParameters": {
              "id": 5786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:36"
            },
            "scope": 5802,
            "src": "157:120:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5800,
              "nodeType": "Block",
              "src": "333:35:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5796,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5790,
                        "src": "349:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5797,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5792,
                        "src": "353:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5795,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12699
                      ],
                      "referencedDeclaration": 12699,
                      "src": "343:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5799,
                  "nodeType": "ExpressionStatement",
                  "src": "343:18:36"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 5801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5790,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5801,
                  "src": "297:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5792,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5801,
                  "src": "309:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:29:36"
            },
            "returnParameters": {
              "id": 5794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:36"
            },
            "scope": 5802,
            "src": "283:85:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5803,
        "src": "111:259:36"
      }
    ],
    "src": "33:338:36"
  },
  "legacyAST": {
    "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/mocks/ERC20CappedMock.sol",
    "exportedSymbols": {
      "Context": [
        17322
      ],
      "ERC20": [
        12496
      ],
      "ERC20Capped": [
        12700
      ],
      "ERC20CappedMock": [
        5802
      ],
      "IERC20": [
        12574
      ],
      "IERC20Metadata": [
        13082
      ]
    },
    "id": 5803,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5768,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:36"
      },
      {
        "absolutePath": "/E/work/工作/czz/合约/truffle/safebox/contracts/openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "file": "../token/ERC20/extensions/ERC20Capped.sol",
        "id": 5769,
        "nodeType": "ImportDirective",
        "scope": 5803,
        "sourceUnit": 12701,
        "src": "58:51:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5770,
              "name": "ERC20Capped",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12700,
              "src": "139:11:36"
            },
            "id": 5771,
            "nodeType": "InheritanceSpecifier",
            "src": "139:11:36"
          }
        ],
        "contractDependencies": [
          12496,
          12574,
          12700,
          13082,
          17322
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5802,
        "linearizedBaseContracts": [
          5802,
          12700,
          12496,
          13082,
          12574,
          17322
        ],
        "name": "ERC20CappedMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5787,
              "nodeType": "Block",
              "src": "274:3:36",
              "statements": []
            },
            "id": 5788,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5780,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5773,
                    "src": "239:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 5781,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5775,
                    "src": "245:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 5782,
                "modifierName": {
                  "id": 5779,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12496,
                  "src": "233:5:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "233:19:36"
              },
              {
                "arguments": [
                  {
                    "id": 5784,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5777,
                    "src": "265:3:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5785,
                "modifierName": {
                  "id": 5783,
                  "name": "ERC20Capped",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12700,
                  "src": "253:11:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "253:16:36"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5773,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "170:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5772,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5775,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "190:20:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5774,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5777,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 5788,
                  "src": "212:11:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "169:55:36"
            },
            "returnParameters": {
              "id": 5786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:36"
            },
            "scope": 5802,
            "src": "157:120:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5800,
              "nodeType": "Block",
              "src": "333:35:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5796,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5790,
                        "src": "349:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5797,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5792,
                        "src": "353:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5795,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12699
                      ],
                      "referencedDeclaration": 12699,
                      "src": "343:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5799,
                  "nodeType": "ExpressionStatement",
                  "src": "343:18:36"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 5801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5790,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5801,
                  "src": "297:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5792,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5801,
                  "src": "309:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:29:36"
            },
            "returnParameters": {
              "id": 5794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:36"
            },
            "scope": 5802,
            "src": "283:85:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5803,
        "src": "111:259:36"
      }
    ],
    "src": "33:338:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T11:32:50.904Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}